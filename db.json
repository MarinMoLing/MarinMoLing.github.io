{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/admin/config.yml","path":"admin/config.yml","modified":1,"renderable":0},{"_id":"source/admin/index.html","path":"admin/index.html","modified":1,"renderable":0},{"_id":"themes/fluid/source/css/FZFWZhu.ttf","path":"css/FZFWZhu.ttf","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/custom.css","path":"css/custom.css","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/Planet.png","path":"img/Planet.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/1.png","path":"img/1.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/avatar1.png","path":"img/avatar1.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/icon20.png","path":"img/icon20.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/default.png","path":"img/default.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/fluid.png","path":"img/fluid.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/loading.gif","path":"img/loading.gif","modified":1,"renderable":1},{"_id":"themes/fluid/source/img/yuki.png","path":"img/yuki.png","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/boot.js","path":"js/boot.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/duration.js","path":"js/duration.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/events.js","path":"js/events.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/useaplayer.js","path":"js/useaplayer.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/cursor/explosion.min.js","path":"js/cursor/explosion.min.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/cursor/firework.js","path":"js/cursor/firework.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/cursor/love.min.js","path":"js/cursor/love.min.js","modified":1,"renderable":1},{"_id":"themes/fluid/source/js/cursor/text.js","path":"js/cursor/text.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/搭建Jupyter-Notebook服务器.md","hash":"7241cb37ab68647a00ed895c42e69678c092fc02","modified":1744864816577},{"_id":"source/_posts/Getting-started-with-crawlers.md","hash":"3182b58f3d0992cebd679dc3907fbb21a4d56193","modified":1725944187194},{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录.md","hash":"395ac5357cc3ba0ad47da440109fab9c32bc7f81","modified":1725730470762},{"_id":"source/_posts/随想2025-04-07.md","hash":"e02fbb22c13b23fb778c4bddb13dc87cb27fcdeb","modified":1743969675722},{"_id":"source/about/index.md","hash":"148b2415ffdbd35fe6177a9ceefa26634d4e1a4c","modified":1744861438217},{"_id":"source/admin/config.yml","hash":"106f3d67de94608347e2672d5bddca048d70773f","modified":1746934127421},{"_id":"source/admin/index.html","hash":"71a1ba9bb64002bf688978ba622488e692d20464","modified":1746934098691},{"_id":"source/search/index.md","hash":"f5b41276a808a81cab5429e8c400e46c79751b3b","modified":1677237944169},{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录/4.png","hash":"0ead171ee63c9c5ba5af6fd93035ef89d396bc97","modified":1666108885839},{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录/2.png","hash":"bbacb534822234d0fcf460c7d0164b14eddef82d","modified":1715996186363},{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录/1.png","hash":"b2614d00f78911755e6c457b4c09b630e2da8004","modified":1715996336323},{"_id":"themes/fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1655372397000},{"_id":"themes/fluid/.editorconfig","hash":"33218fbd623feb43edf5f99f15965392cecc44a6","modified":1655372397000},{"_id":"themes/fluid/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1655372397000},{"_id":"themes/fluid/.eslintrc","hash":"4bc2b19ce2b8c4d242f97d4ccf2d741e68ab0097","modified":1655372397000},{"_id":"themes/fluid/README_en.md","hash":"8c874f309e346fffa392e174385b5cc08510f218","modified":1655372397000},{"_id":"themes/fluid/README.md","hash":"6d752df6f2278033dc2512a7d5be22c8a8eb665a","modified":1655372397000},{"_id":"themes/fluid/package.json","hash":"0bc354a01c5e6e9de43bf67456dc16c59d400139","modified":1655372397000},{"_id":"themes/fluid/.gitignore","hash":"ae3bfcb89777657c5dfb5169d91445dcb0e5ab98","modified":1655372397000},{"_id":"themes/fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1655372397000},{"_id":"themes/fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1655372397000},{"_id":"themes/fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1655372397000},{"_id":"themes/fluid/_config.yml","hash":"3522dbb7591931a89e4082b735048ac2bd336b54","modified":1729445553323},{"_id":"themes/fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1655372397000},{"_id":"themes/fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1655372397000},{"_id":"themes/fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1655372397000},{"_id":"themes/fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1655372397000},{"_id":"themes/fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1655372397000},{"_id":"themes/fluid/layout/404.ejs","hash":"9569c5c8f67d2783f372f671c57b93a00dc63c2f","modified":1655372397000},{"_id":"themes/fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1655372397000},{"_id":"themes/fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1655372397000},{"_id":"themes/fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1655372397000},{"_id":"themes/fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1655372397000},{"_id":"themes/fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1655372397000},{"_id":"themes/fluid/layout/index.ejs","hash":"b15d13877827e99e0ff783a6b13b13cca90bfe8c","modified":1655372397000},{"_id":"themes/fluid/layout/layout.ejs","hash":"0c89dc622a114b83f16070393581c96ee40d77a7","modified":1665810539305},{"_id":"themes/fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1655372397000},{"_id":"themes/fluid/layout/post.ejs","hash":"505bcc06e55066b7cc5551d9ac0694e7713bfab5","modified":1655372397000},{"_id":"themes/fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1655372397000},{"_id":"themes/fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1655372397000},{"_id":"themes/fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1655372397000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report_zh.md","hash":"af977ed0792508bb0766ea8afe82d34ef1e8fb3c","modified":1655372397000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question_zh.md","hash":"e24b470f7aa8044499a4f5e39634e5dc43899011","modified":1655372397000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/question.md","hash":"ab5eab9e3ff889c4ba7fd82846e7f5b7ae15bebc","modified":1655372397000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request_zh.md","hash":"ed08574b196447376dd74411cca664ac9227a5d4","modified":1655372397000},{"_id":"themes/fluid/.github/workflows/limit.yaml","hash":"f8bd2edeb4424ee7a055b31583445d5d5dff91a4","modified":1655372397000},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/feature_request.md","hash":"c134dd57ffd269b93402ccfffe7dbe0f0b583bec","modified":1655372397000},{"_id":"themes/fluid/source/css/custom.css","hash":"6d80d55e44d0a3a83939b0c0a62ca0b8e4602ffa","modified":1665826649805},{"_id":"themes/fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1655372397000},{"_id":"themes/fluid/source/css/gitalk.css","hash":"1c246b5eb9977c74dd5cb8d7324d97ee4fbe1613","modified":1665766765823},{"_id":"themes/fluid/.github/ISSUE_TEMPLATE/bug_report.md","hash":"16d33eb89ecf90f4046720fde5395d972c7ba1fd","modified":1655372397000},{"_id":"themes/fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1655372397000},{"_id":"themes/fluid/source/img/Planet.png","hash":"49a8dce2d24b643bcfd32654d11bc3140a4676e1","modified":1725732782614},{"_id":"themes/fluid/source/img/1.png","hash":"7564cae6b81f1b146dfa29729ef47e53c3778506","modified":1646561078170},{"_id":"themes/fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1655372397000},{"_id":"themes/fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1655372397000},{"_id":"themes/fluid/source/img/icon20.png","hash":"31a2933916b05d1059cbd69504aff47e6e87546c","modified":1665828546687},{"_id":"themes/fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1655372397000},{"_id":"themes/fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1655372397000},{"_id":"themes/fluid/source/js/color-schema.js","hash":"ba63f7c3324bc1fdd050a90add9d8faaffc27e07","modified":1655372397000},{"_id":"themes/fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1655372397000},{"_id":"themes/fluid/source/js/events.js","hash":"f05a569a9fd6da2fda69a2cf8e276ba81580faf3","modified":1655372397000},{"_id":"themes/fluid/source/js/boot.js","hash":"2848f8eb5081a7f0550fbd76dc06d3ff877f1913","modified":1655372397000},{"_id":"themes/fluid/source/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1655372397000},{"_id":"themes/fluid/source/js/duration.js","hash":"62c7aafd0170d6de9d7ce9d47739edae6fe3a47e","modified":1716045349019},{"_id":"themes/fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1655372397000},{"_id":"themes/fluid/source/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1655372397000},{"_id":"themes/fluid/source/js/plugins.js","hash":"2333494add51e5e1374602a4e81f0be36a05d4c2","modified":1655372397000},{"_id":"themes/fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1655372397000},{"_id":"themes/fluid/source/js/useaplayer.js","hash":"bb481802f71ea1587b0196c214e48dfe0b5cccea","modified":1665913896273},{"_id":"themes/fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1655372397000},{"_id":"themes/fluid/scripts/filters/post-filter.js","hash":"d516b9db63067f9ea9c72cc75ae4ff358417e77d","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/export-config.js","hash":"47e6dba7652a621a54067413490a11c8a89e3d7b","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/wordcount.js","hash":"b917b893b1777e6ffcb53188f9f5644510e5f20d","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/scope.js","hash":"43620b0944ffb67ea1fa6cc838f65a7351222eb0","modified":1655372397000},{"_id":"themes/fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1655372397000},{"_id":"themes/fluid/scripts/helpers/utils.js","hash":"226f99b465ff513de075a8e78b321d6cb62592ca","modified":1655372397000},{"_id":"themes/fluid/scripts/generators/pages.js","hash":"d9971f15fbb6b775e3d31a1b9b45011959395010","modified":1655372397000},{"_id":"themes/fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1655372397000},{"_id":"themes/fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1655372397000},{"_id":"themes/fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1655372397000},{"_id":"themes/fluid/scripts/generators/local-search.js","hash":"fc2c50405b771b06b7f6cfc4e9de97b992691555","modified":1655372397000},{"_id":"themes/fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1655372397000},{"_id":"themes/fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1655372397000},{"_id":"themes/fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1655372397000},{"_id":"themes/fluid/scripts/tags/note.js","hash":"f52f3a005b41f48b4da274ac64710177c8d4502f","modified":1655372397000},{"_id":"themes/fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1655372397000},{"_id":"themes/fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1655372397000},{"_id":"themes/fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments.ejs","hash":"24ef242aa01e5f5bc397cf3f83ae48b1e8353dab","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/category-list.ejs","hash":"a591fedbc5759fb00152304f9ea486dfba3a246a","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/head.ejs","hash":"dce91700498982c4d3f905c79342a7dd05112134","modified":1746934345606},{"_id":"themes/fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1655372397000},{"_id":"themes/fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1655372397000},{"_id":"themes/fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1655372397000},{"_id":"themes/fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1655372397000},{"_id":"themes/fluid/source/js/cursor/explosion.min.js","hash":"a461ab20ecd2d2eab4c8863cfa936530492e524d","modified":1665808817033},{"_id":"themes/fluid/source/js/cursor/love.min.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1665808813295},{"_id":"themes/fluid/source/js/cursor/firework.js","hash":"57b28290cfbdc3a268e6657936a813bd52923a59","modified":1665808820787},{"_id":"themes/fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1655372397000},{"_id":"themes/fluid/source/js/cursor/text.js","hash":"047bfbb927394b41f411e54b9aeefb61ee841066","modified":1665808737273},{"_id":"themes/fluid/scripts/events/lib/footnote.js","hash":"2ec2ae03c79bb1ae7ac3fcf7e00fb52d1af2898d","modified":1655372397000},{"_id":"themes/fluid/scripts/events/lib/highlight.js","hash":"0f02df2244e275595e72163498d42f42bcf0de5e","modified":1655372397000},{"_id":"themes/fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1655372397000},{"_id":"themes/fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1655372397000},{"_id":"themes/fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1655372397000},{"_id":"themes/fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/twikoo.ejs","hash":"e6820fb7f13662c42f8433ec95404238f4c1860c","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/anchorjs.ejs","hash":"953552425f0b86c98d1026fdb04e716fdff356e7","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/header/navigation.ejs","hash":"38990ed9dbccd88342ee4b4cb5e60818e9eb8e8a","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/analytics.ejs","hash":"1327395a4dde1ea06c476b047fb110bcd269149f","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/encrypt.ejs","hash":"cbcf6905f4990a22895a848e29dd4c05592a9043","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/mermaid.ejs","hash":"3b3b0be9f7624ff72fbb2da6ae3663adcfb7d118","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/math.ejs","hash":"94c1ce6e312932e876886ba24b082ae34515a038","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/category-bar.ejs","hash":"88420e83c0968f7da69aa423f42d3033891c9229","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/plugins/typed.ejs","hash":"51faef29f8e464bcb2e73049b428b88c8dd8b40a","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/meta-bottom.ejs","hash":"7079b27a7bc15a7dfa9209f6be6051bdec49ebad","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/copyright.ejs","hash":"e74fb49526ddb14fee2c6360a560d17f57262ef7","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/toc.ejs","hash":"91a1de823492d9225f9daa3ef59efbca345456a0","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1655372397000},{"_id":"themes/fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/color-schema.styl","hash":"61279540c2623ea4bf93e40613d41380839b92d3","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_category/category-bar.styl","hash":"99e8e25e84d513b869a17140f63a5c1e48a0e7e1","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_index/index.styl","hash":"0acbd71633bcc7191672ea4e1b2277bea350d73b","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_post/highlight.styl","hash":"7054d79c9d5966fc57baf0adcdf3b19275987b62","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_post/post-page.styl","hash":"127bb5391370afe7fef2a297084d76406bc5e902","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_post/post-tag.styl","hash":"27f70062415ccf66a9b6f4952db124fc1471fda5","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/header.styl","hash":"896179810e1ee986208ae2d57a44719f6b839bde","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1655372397000},{"_id":"themes/fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1655372397000},{"_id":"themes/fluid/source/img/avatar1.png","hash":"a8b888a8dc79f19e6644ebc1e7ee8d063f540549","modified":1700092521260},{"_id":"themes/fluid/source/img/avatar.png","hash":"64831ae49751d4a3796d54c9b183e2cdc08e0cd3","modified":1729314411032},{"_id":"themes/fluid/source/img/fluid.png","hash":"0c3f26945cc128e956e46a9e3db6febca9d6b8d7","modified":1665017520758},{"_id":"themes/fluid/source/img/default.png","hash":"ac58a859711057048fda53bef30ccd75315c0a0d","modified":1669365457129},{"_id":"themes/fluid/source/img/yuki.png","hash":"bb3369dafce8f9d60438217b17544ca5a986485f","modified":1669271460410},{"_id":"themes/fluid/source/css/FZFWZhu.ttf","hash":"30c19a96db9e2056ce49fd2f1da42518418792ce","modified":1665766519231},{"_id":"public/admin/config.yml","hash":"2790db68e5118bbf96142bf8c42197fd0b4616cd","modified":1746937164577},{"_id":"public/admin/index.html","hash":"27d0245ccab0027d0b483c3185b84f513897e873","modified":1746937164577},{"_id":"public/local-search.xml","hash":"ae83389cf9aebaa06615bdbb5693e4088cbd2711","modified":1746937164577},{"_id":"public/about/index.html","hash":"30fb4f45d2936726cd779f114c82d85ebc63f9b9","modified":1746937164577},{"_id":"public/2025/04/17/搭建Jupyter-Notebook服务器/index.html","hash":"6f67f1e42d4cc35c0fb20990613ae0a79df9ab2c","modified":1746937164577},{"_id":"public/search/index.html","hash":"afe679bed8d13912ba9eea8e7a24ad3747b805b6","modified":1746937164577},{"_id":"public/2025/04/07/随想2025-04-07/index.html","hash":"233c0492b59a197633ff95ff99f357dd1c6e4565","modified":1746937164577},{"_id":"public/2023/03/11/Getting-started-with-crawlers/index.html","hash":"a02b16171ebdda820746893c495634a276c77106","modified":1746937164577},{"_id":"public/2023/02/24/Hexo-Fluid搭建与魔改纪录/index.html","hash":"7e3aac9e7b19ed77bf319ffdf7089dd2e2352d0b","modified":1746937164577},{"_id":"public/tags/随想/index.html","hash":"f2b52a6a191febaa299b11622df393652cf4a18a","modified":1746937164577},{"_id":"public/tags/Notebook/index.html","hash":"56c78ca5e401040f49b65d877fefa492bebef2d4","modified":1746937164577},{"_id":"public/tags/crawlers/index.html","hash":"ce42ae747c95693e1d5dc82b1d0c68e46fe3593d","modified":1746937164577},{"_id":"public/tags/blog/index.html","hash":"c46e35a80187945ee3dc931394edd554837a09db","modified":1746937164577},{"_id":"public/tags/hexo/index.html","hash":"3ad7ec5c27d80c684427ee31f3288b7a9d455201","modified":1746937164577},{"_id":"public/tags/fluid/index.html","hash":"d89ef068a9b3e234fc2c14dc9315b2679855863e","modified":1746937164577},{"_id":"public/archives/index.html","hash":"1e45514f7b26912dbdf37f9f24a21cc3b08954f5","modified":1746937164577},{"_id":"public/archives/2023/index.html","hash":"739f9d390d875e9a1ec2ab9bf8f4a5c0812b415b","modified":1746937164577},{"_id":"public/archives/2023/02/index.html","hash":"2074b862bf7ca51e12d287c81acd35e3c2668615","modified":1746937164577},{"_id":"public/archives/2023/03/index.html","hash":"13c8387778a714066e8cefaa30551f02018a1723","modified":1746937164577},{"_id":"public/index.html","hash":"650bec39c345274985f440077595203a8b7097d8","modified":1746937164577},{"_id":"public/archives/2025/index.html","hash":"68ac4a297fb80694ed907853bcfd800377b5c94b","modified":1746937164577},{"_id":"public/404.html","hash":"4bdb4d8a4a742aca6dfa44a494eff259e4c35056","modified":1746937164577},{"_id":"public/archives/2025/04/index.html","hash":"a5547b771bdcfdb664f5c13bf1fe20d17fba3a02","modified":1746937164577},{"_id":"public/tags/index.html","hash":"8bcd648d9408dc3ac67a50ca4a3a63cc83634e84","modified":1746937164577},{"_id":"public/categories/index.html","hash":"8fcd6372ed1b76ca1982523492d321c31f51c453","modified":1746937164577},{"_id":"public/links/index.html","hash":"c42692e35ddbf3bdf063a589a413d453537c2d95","modified":1746937164577},{"_id":"public/img/1.png","hash":"7564cae6b81f1b146dfa29729ef47e53c3778506","modified":1746937164577},{"_id":"public/img/Planet.png","hash":"49a8dce2d24b643bcfd32654d11bc3140a4676e1","modified":1746937164577},{"_id":"public/img/icon20.png","hash":"31a2933916b05d1059cbd69504aff47e6e87546c","modified":1746937164577},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1746937164577},{"_id":"public/img/avatar1.png","hash":"a8b888a8dc79f19e6644ebc1e7ee8d063f540549","modified":1746937164577},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1746937164577},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1746937164577},{"_id":"public/css/custom.css","hash":"f39ef31b8a218b0ffdff42de075c8ca1d333dcfe","modified":1746937164577},{"_id":"public/css/main.css","hash":"043da44423470e1dd274bea88b968e0d2a4f67c9","modified":1746937164577},{"_id":"public/css/gitalk.css","hash":"1c246b5eb9977c74dd5cb8d7324d97ee4fbe1613","modified":1746937164577},{"_id":"public/css/highlight.css","hash":"04d4ddbb5e1d1007447c2fe293ee05aae9b9563e","modified":1746937164577},{"_id":"public/css/highlight-dark.css","hash":"902294bada4323c0f51502d67cba8c3a0298952f","modified":1746937164577},{"_id":"public/2023/02/24/Hexo-Fluid搭建与魔改纪录/2.png","hash":"bbacb534822234d0fcf460c7d0164b14eddef82d","modified":1746937164577},{"_id":"public/2023/02/24/Hexo-Fluid搭建与魔改纪录/4.png","hash":"0ead171ee63c9c5ba5af6fd93035ef89d396bc97","modified":1746937164577},{"_id":"public/lib/hbe.js","hash":"fb05fcd82bb28d3b2887d388cabea7f9b1a318eb","modified":1746937164577},{"_id":"public/css/hbe.style.css","hash":"72959894400fd5c350106cb558c39fa51f722cbd","modified":1746937164577},{"_id":"public/js/boot.js","hash":"2848f8eb5081a7f0550fbd76dc06d3ff877f1913","modified":1746937164577},{"_id":"public/js/duration.js","hash":"5a761222179dfea70d8d6bea32ac13f1fe1e9b9f","modified":1746937164577},{"_id":"public/js/color-schema.js","hash":"ba63f7c3324bc1fdd050a90add9d8faaffc27e07","modified":1746937164577},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1746937164577},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1746937164577},{"_id":"public/js/plugins.js","hash":"2333494add51e5e1374602a4e81f0be36a05d4c2","modified":1746937164577},{"_id":"public/js/events.js","hash":"f05a569a9fd6da2fda69a2cf8e276ba81580faf3","modified":1746937164577},{"_id":"public/js/local-search.js","hash":"cebcda5991b6a9ab9307c69542389ce9013f04f7","modified":1746937164577},{"_id":"public/js/useaplayer.js","hash":"ae9f74d27bab176fb6ba8a0d9a7da9edc05c1b76","modified":1746937164577},{"_id":"public/js/utils.js","hash":"45cc86f099db0a2c36ad49711ce66c2d598a2ab1","modified":1746937164577},{"_id":"public/js/cursor/explosion.min.js","hash":"a461ab20ecd2d2eab4c8863cfa936530492e524d","modified":1746937164577},{"_id":"public/js/cursor/text.js","hash":"05d93476a210c60b3c09afdbf4ce04de5ff55115","modified":1746937164577},{"_id":"public/js/cursor/firework.js","hash":"7e82719760e185d617ea0bcc4f090a64562f2be1","modified":1746937164577},{"_id":"public/js/cursor/love.min.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1746937164577},{"_id":"public/2023/02/24/Hexo-Fluid搭建与魔改纪录/1.png","hash":"b2614d00f78911755e6c457b4c09b630e2da8004","modified":1746937164577},{"_id":"public/img/avatar.png","hash":"64831ae49751d4a3796d54c9b183e2cdc08e0cd3","modified":1746937164577},{"_id":"public/img/fluid.png","hash":"0c3f26945cc128e956e46a9e3db6febca9d6b8d7","modified":1746937164577},{"_id":"public/img/default.png","hash":"ac58a859711057048fda53bef30ccd75315c0a0d","modified":1746937164577},{"_id":"public/img/yuki.png","hash":"bb3369dafce8f9d60438217b17544ca5a986485f","modified":1746937164577},{"_id":"public/css/FZFWZhu.ttf","hash":"30c19a96db9e2056ce49fd2f1da42518418792ce","modified":1746937164577}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2020-02-23T11:20:33.000Z","layout":"about","_content":"\n## About Me\n\nThis is Marin, but you can also call me **茉鈴**.\n\n- **Study**: \n- **Interests**: 🀄 Riichi Mahjong（Mリーグ  **KONAMI麻雀格闘倶楽部**を応援してます), 🎴 Tarot, 👍 Rhythm games\n- **Personality**：[INTP-T](https://www.16personalities.com/intp-personality) \n\n- **Ideology**：[Liberalism](https://8values.github.io/results.html?e=55.1&d=70.0&g=65.2&s=63.4)\n\n日本語の初心者です、私との交流へようこそ\n\nLe coeur à vingt ans se pose où l'oeil se pose.\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-02-23 19:20:33\nlayout: about\n---\n\n## About Me\n\nThis is Marin, but you can also call me **茉鈴**.\n\n- **Study**: \n- **Interests**: 🀄 Riichi Mahjong（Mリーグ  **KONAMI麻雀格闘倶楽部**を応援してます), 🎴 Tarot, 👍 Rhythm games\n- **Personality**：[INTP-T](https://www.16personalities.com/intp-personality) \n\n- **Ideology**：[Liberalism](https://8values.github.io/results.html?e=55.1&d=70.0&g=65.2&s=63.4)\n\n日本語の初心者です、私との交流へようこそ\n\nLe coeur à vingt ans se pose où l'oeil se pose.\n","updated":"2025-04-17T03:43:58.217Z","path":"about/index.html","comments":1,"_id":"cmaj5a7b30000a8uohn2uf73x","content":"<h2 id=\"About-Me\"><a href=\"#About-Me\" class=\"headerlink\" title=\"About Me\"></a>About Me</h2><p>This is Marin, but you can also call me <strong>茉鈴</strong>.</p>\n<ul>\n<li><p><strong>Study</strong>: </p>\n</li>\n<li><p><strong>Interests</strong>: 🀄 Riichi Mahjong（Mリーグ  <strong>KONAMI麻雀格闘倶楽部</strong>を応援してます), 🎴 Tarot, 👍 Rhythm games</p>\n</li>\n<li><p><strong>Personality</strong>：<a href=\"https://www.16personalities.com/intp-personality\">INTP-T</a> </p>\n</li>\n<li><p><strong>Ideology</strong>：<a href=\"https://8values.github.io/results.html?e=55.1&d=70.0&g=65.2&s=63.4\">Liberalism</a></p>\n</li>\n</ul>\n<p>日本語の初心者です、私との交流へようこそ</p>\n<p>Le coeur à vingt ans se pose où l’oeil se pose.</p>\n","wordcount":214,"excerpt":"","more":"<h2 id=\"About-Me\"><a href=\"#About-Me\" class=\"headerlink\" title=\"About Me\"></a>About Me</h2><p>This is Marin, but you can also call me <strong>茉鈴</strong>.</p>\n<ul>\n<li><p><strong>Study</strong>: </p>\n</li>\n<li><p><strong>Interests</strong>: 🀄 Riichi Mahjong（Mリーグ  <strong>KONAMI麻雀格闘倶楽部</strong>を応援してます), 🎴 Tarot, 👍 Rhythm games</p>\n</li>\n<li><p><strong>Personality</strong>：<a href=\"https://www.16personalities.com/intp-personality\">INTP-T</a> </p>\n</li>\n<li><p><strong>Ideology</strong>：<a href=\"https://8values.github.io/results.html?e=55.1&d=70.0&g=65.2&s=63.4\">Liberalism</a></p>\n</li>\n</ul>\n<p>日本語の初心者です、私との交流へようこそ</p>\n<p>Le coeur à vingt ans se pose où l’oeil se pose.</p>\n"},{"title":"Search","type":"search","_content":"","source":"search/index.md","raw":"---\ntitle: Search\ntype: search\n---\n","date":"2025-04-02T06:58:52.422Z","updated":"2023-02-24T11:25:44.169Z","path":"search/index.html","comments":1,"layout":"page","_id":"cmaj5a7b60002a8uoglie1gqe","content":"","wordcount":0,"excerpt":"","more":""}],"Post":[{"title":"随想2025-04-07","date":"2025-04-06T19:04:15.000Z","password":"marin","abstract":"Here's something encrypted, password is required to continue reading.","message":"Hey, password is required here.","wrong_pass_message":"Oh, this is an invalid password. Check and try again, please.","_content":"​\t\t我的博客创建已久，却从未认真写过什么。曾经打算把学习笔记记录在这里，然而大多数内容还是留在了 Obsidian 里，因为它在 iPad 上同步起来更方便。最近稍微有些空闲时间，翻出这个博客，想着写点日记，却又担心自己无法坚持每天更新。毕竟，我是个比较无聊的人，写东西大多是发发牢骚而已。于是，我决定随意记录下这些零散的想法。\n\n​\t\t回望自己的大学生活，我总觉得自己从一开始就像是一个“摆烂”型的人。表面上过得去，却始终未能完全放弃，因此总是处于“半学半玩”的状态。结果，四年的时光就在这种摇摆不定中悄然流逝。记得第一年，考研初试的失利让我深感挫败，第二年幸运一些，勉强通过了。说实话，我是那种典型的三分钟热度型的人，难以集中精力长时间坚持一件事。而对于未来的目标与规划，我也始终没有清晰的方向。大概从大学一开始，我就选择了待在自己的舒适区，几乎没有去主动突破过。最近，经历了一些变化，我也开始深刻反思：或许，是时候走出这片安逸的天地，去迎接一些挑战，突破自我。\n\n​\t\t最近，我决定找了一个辅导班做兼职，想借此机会开始锻炼自己与人交流的能力，改掉自己那种面对陌生人时的怯场毛病。与此同时，我也开始思考如何更好地理解他人的情感。大约在大二时，我逐渐意识到自己似乎缺乏对浪漫恋爱的兴趣，甚至觉得自己缺乏去爱一个人的能力。但对此，我并不感到困扰。正如《生活大爆炸》中的谢尔顿所言：“人们花一生追寻一个与之共度余生的人，我一直无法理解。或许是因为我太有趣，无需他人的陪伴。”在我看来，人与人之间的关系若过于接近，矛盾也会随之加深。世界上没有两个人可以完全合拍，所谓的感性喜欢和爱，最终也会在各种现实矛盾的冲击下消磨殆尽。我的家族亲戚比较多，其中大部分又都是官场中人，整日最喜欢的就是人情世故和勾心斗角，从小到大，我目睹过太多“面具下的真面目”，久而久之，这种虚伪与算计让我对人际关系产生了深深的厌倦。甚至曾有一段时间，我完全无法理解人与人之间的联系究竟为何物。再加上对中国社会人情世故的深深厌恶，我开始变得冷漠寡言，不愿与人深交。\n\n​\t\t这篇随想，或许只是一时的发泄，但它也代表了我对自己现状的一些反思。虽然目前我依然感到迷茫，但至少我已经开始意识到：接下来的路，我必须去走，去突破自己安逸的舒适区，去迎接更广阔的世界。正如《荒野生存》中的主人公所说：“真正的自由，不是逃避，而是去面对生活的一切，勇敢地去过自己想要的生活。”或许，正是从这一刻起，我才开始真正理解自由的意义。","source":"_posts/随想2025-04-07.md","raw":"---\ntitle: 随想2025-04-07\ndate: 2025-04-07 03:04:15\ntags: 随想\npassword: marin\nabstract: Here's something encrypted, password is required to continue reading.\nmessage: Hey, password is required here.\nwrong_pass_message: Oh, this is an invalid password. Check and try again, please.\n---\n​\t\t我的博客创建已久，却从未认真写过什么。曾经打算把学习笔记记录在这里，然而大多数内容还是留在了 Obsidian 里，因为它在 iPad 上同步起来更方便。最近稍微有些空闲时间，翻出这个博客，想着写点日记，却又担心自己无法坚持每天更新。毕竟，我是个比较无聊的人，写东西大多是发发牢骚而已。于是，我决定随意记录下这些零散的想法。\n\n​\t\t回望自己的大学生活，我总觉得自己从一开始就像是一个“摆烂”型的人。表面上过得去，却始终未能完全放弃，因此总是处于“半学半玩”的状态。结果，四年的时光就在这种摇摆不定中悄然流逝。记得第一年，考研初试的失利让我深感挫败，第二年幸运一些，勉强通过了。说实话，我是那种典型的三分钟热度型的人，难以集中精力长时间坚持一件事。而对于未来的目标与规划，我也始终没有清晰的方向。大概从大学一开始，我就选择了待在自己的舒适区，几乎没有去主动突破过。最近，经历了一些变化，我也开始深刻反思：或许，是时候走出这片安逸的天地，去迎接一些挑战，突破自我。\n\n​\t\t最近，我决定找了一个辅导班做兼职，想借此机会开始锻炼自己与人交流的能力，改掉自己那种面对陌生人时的怯场毛病。与此同时，我也开始思考如何更好地理解他人的情感。大约在大二时，我逐渐意识到自己似乎缺乏对浪漫恋爱的兴趣，甚至觉得自己缺乏去爱一个人的能力。但对此，我并不感到困扰。正如《生活大爆炸》中的谢尔顿所言：“人们花一生追寻一个与之共度余生的人，我一直无法理解。或许是因为我太有趣，无需他人的陪伴。”在我看来，人与人之间的关系若过于接近，矛盾也会随之加深。世界上没有两个人可以完全合拍，所谓的感性喜欢和爱，最终也会在各种现实矛盾的冲击下消磨殆尽。我的家族亲戚比较多，其中大部分又都是官场中人，整日最喜欢的就是人情世故和勾心斗角，从小到大，我目睹过太多“面具下的真面目”，久而久之，这种虚伪与算计让我对人际关系产生了深深的厌倦。甚至曾有一段时间，我完全无法理解人与人之间的联系究竟为何物。再加上对中国社会人情世故的深深厌恶，我开始变得冷漠寡言，不愿与人深交。\n\n​\t\t这篇随想，或许只是一时的发泄，但它也代表了我对自己现状的一些反思。虽然目前我依然感到迷茫，但至少我已经开始意识到：接下来的路，我必须去走，去突破自己安逸的舒适区，去迎接更广阔的世界。正如《荒野生存》中的主人公所说：“真正的自由，不是逃避，而是去面对生活的一切，勇敢地去过自己想要的生活。”或许，正是从这一刻起，我才开始真正理解自由的意义。","slug":"随想2025-04-07","published":1,"updated":"2025-04-06T20:01:15.722Z","comments":1,"layout":"post","photos":[],"_id":"cmaj5a7b40001a8uofcjjgj2d","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"7e3c8c33d94b21768aaa13e704d82882169a2c7a8dd2b73ec506a3380f44b22c\">315cb44172e2b7225daa89d390a9f18e3da284260b95705c67f96b59fb4c6c907f8dbae858302f460b0603d1131bc5e49c667a0391138e60077da3100ef2a1c702634c9148b686520da338f8b198174e677ef2a2dc58d2f42b485a3aa05caa04d746d75cc358b18c505b2f7f25086a7fb7e48ee257a2277667d4dd8d7600271f9020a4064bf10504537060a309efa8c2299711d2f3ea1babbfdc490f624677f3bd8c4cae8ada2ecd6c4206e6abc3c1ebf68599eff4b502e418b2e7a3bfa22dbb3184733c26d31468c91dee3ac89299dddc59e3220a9e3072aaf4a9557992c664002174ab752d4142adc4c2a4e388ec95bf73cf6e027fb3b4747132bdfeb656ef2fbac5e8aa3a45df4fa0e56bec130a0b0a716770998ca5aed99f751f96b0ccc0a64cc2831bb7f211cadd3ca87c080fb5966fd1f6680e137783128476098a250e43f957615f832de3b58a9ae2d9f1d13e42b11f7e938e5d9755c8d9500bbf28fc50412403d71f10e92d66c013bd2125d10cc8dd97ec5f2c83770abde3abe225beb54f137afd1049b044fd5a65dd43013b9bd66126dd04563c0dc9918f79343061b1fedaafb964525ad8a3f936a7211bc6076fb393e9e42cc7878d867bca89e3c2469a27386b1aefb74eed330efda70f9554597d55bc6f3266162878793160a197a16adc5c3358ff1372b116cd6092670d41a55f28bf2dfc88985351f2c5b7868ef604ba0765c7c676a3e4f31ac30722030b4c24c4ebac95cdd7a51efb1dcee37bc6fe805486ddd3c61fabf78ac64e411c1e047fad606ae055f44b993da9dd3762a485a2510869033f30336f1894d0513bddea02a42651764a4aeb33b777fb89ed41904572ac3ecefcdf2f73a11b415691d0d83b66f80cc1e1bc69be7ef3e11251535ef4110b88e1fb41015b88579c111a62a35fb88d86d7870f486729dec9a5187c94eb7b6bf1c804bfe3cf229aa57ab8e69479fe2b84a99d71b468ded128b4bea24d2a1e4bb881ec376f4303158deb2eec8b30ba1a2a14088e7f6dbbf7846014bd08f48fae5ab5247bd5e688e73ac6f54f60d228290c877b7a0d69276e06ee0d453e2989386d33744184e33e334471b5bb94ebb685cde69581fd0f19129e311e81a243b6fd1fb745775b5169be887a111bcb887054f70a069202b5c4e96357544cf9e73e75d5e5e024542a7fb5127e1bf608457b96f2c77029840373f21c1771eed75a7a8af45a22d12c7e3c588759f79e729292f758d3a573349e583af12acb9234a35fb5c5dd6b625a3ff6d55590ac92114cf5c4b34fb851a1044f8b8fd54d03bbc3e31392e14176ff0a27a7a7d39f4a4f16edb70636bfd21f70a7df896c993a96702a598c3b029a2f9e09205c10ac6aae25424083c3a4bc18e76f24eaa8b4e80ccb475606aa7a5452982ec3600fc14ba937a88370025e5e3c8910e83577d809d13f59ca49ec03dcfa64f9426d1b1e793580ae8c519d9063699b76ad04ef260869575ab48c8efecc297ceeeaa230ba0929d845a7ef916604edbb3b32151a86a9603b6e2b2ac010455812ecdd3c965d43c475269ac9ae36e72ea66ddde6cb074f41c1149af5fb68e336bc54c35d6ffb397eaf9dde49a11f6261f11b1efcdb248a4bd9b0f0debf026f87b924b6fedf86ff1f8cf9ca7e8fef092715c88a6da2a0e8bfdb7e6028e5ce04be1fa9b799040024005451e364d795005a9bd9db9008c0bc16dbaafeb0345c27bb8ed69b25b6338f6938ab386a6cb4d32621b6b7fc41a89bb8dd67ce835a67107497f4ab2a2a1e4732fb284546bfcef97b67389e1723a71837f77ea823514c17123d387d2a67388d2bd4350db07d34b7c7257e43893c39c1f50117b4a1eba96cc3236c4db133cfa051d2b2a540ea9eae13a3e3f2c7a1ec886d6d30f8d32a232d97482369f97e0ed2907355277ff93eea715d7d8971e7e7889b5bb175f0ca3fd474d33934f24a0b4d2681364df3dcabe20ebfca15ca14b2e432835c7e9a2d3d16c4dc5602bf418958eac37c90ee2c813a8eb777d5b1120762297294d6eba2510959d966b70817ec82384932648d9cb8326a9b3302f581d91f330dd1aff6b74cc64ac191a9fd707a41b66cd398c074af78340d385559dae2512bae615812952ce2c55fd86a98f059018570aefca0c0c666a05fcdc489c9f8d8d3b1c1cf4d89b2ffe741b02b19500583ffed28169701b8f0a59a17116a1072c6ce4aad963af2bf50cd136c10bac7b5764a0513b725876ec44637b752445c2e4a9c19aad5b8bd236664646f49b53c9a362c0ea13a79a51d8be4c413b9c869238fc801c52ed2aefd5b75e8264dceb6e128c44a7fd2db03b31b193c16b7efc2b479d765369d6f8a2eee721e608646b9191a0b753ed234ba2921cd7943a69c196b2df95a6d6779838205b84d1ca077b0169d8abea011c7a1ea067e67d25157dc0f1c4bc760ad5dda79a8405513dfa16978b546214ff3217bd2ddaa33ab4ca0308cc85397065a0f84304757c2e373ca6c6d00f89f6fb532d192ae2b5f210e4dc37f85aae65e876bc56c475208ce1b740c601cc400d7b297ef132c915b05d9e7149b5bad7c8010e17f6243e26bf6f2178b0fc7f5c21ddd6b1ed075ce629e42de28e75a78c44db0e0388d7082ab9b66e2c87db94cbfdd226a157abf178a72dc4941d34783b47fe3b7b71a31aa17a4f389fc9d48aed946faa705b13682866399555708a8a5fb983e50e90a9b0b1fd32746b682b686c483714d548d1dab4855b2e24930d3377bea8ba9106fc16ba8c7809f56a2a591c4509b1223f4977c617383714049f29a8a99ff1102f810fa40e500e3123c0190f016ef75c67d6d843d86fe98859b411adcc026bf366bc4a5eb4c6aa67e15672ed55e1dca0f230492d00a7072755e171764ce56eb84652fb59ecff4f323be78e4a0d7e3fe1977bc84a962e5c5d2a7b1867014b00bad82362aae885ddbc13981515733a7186997119cb69b044fbf3d8cacc3efb198e4f4546f1585672eda1af651b348325065a263f62575f6097e61c0078b0aeb8d16dab68195e75d16f347dcbfa9aa161125ee8055a998adcd2d3617336d10002a2e51c125cf7467d80b04d0fc004b3ca0f41e209d0305b52150f376387a18ecccc3bf7ba4aa420b51933d51b2eaf808c3068c2c17552410e5d600210ce88b0e3bd58f6bf0bf4d71ac5a1335b4a68e0a020afe0450688a7b887e85b26ad2ab49cd6a0506c701c387aa5a6c9f0c832180df13f24c5715dcf5327a3282b8a1d31f8bf3f00709a4a49a62d40aad445a4c69f299f1361bc37611efda435991e8ac5976a554fb522419794462c4a9b2931352549a07a987a23a6ed93d2d7e406a3144c533257af0d495957c19ede8298684e52756e175f52e14a0f7601318c0b7d0c0910efef2d6f0029e022697b0665a9e9ab69ff8212a22d0eae7fc7c29ed24db0e1ffc97429aa0d9bdd84541cd743aba74d5b14a3632ef29fae90ca549231a1cc53e00544c45aafb39c31213b3771c5a5f45da52b5d264edc1d304c249a378087b5cbb39f9174253282b86da46d40fb8892d77020c0d700b6ba624ac67d5850669874b0bc7bdc4bfa642d60f1bc2ed348b6354b37d3dc3f8927b08f786e54fefa12016df3838c1446d98f2289b30c581c523cf97669bb9eab8488fa164df799cb015512ca25b711a5f9eca2529dcef1c3f6d3ad9558ff6d35eb70b84464635e49cee0a0930e85f6b67895b84eab74a538a24d1cd54f9f34d9cc277bb216707285c0b3fd47bedc0d5c859efde83a62a63e274a26144eaf24539391bcb6987dc578f57bc49ea72fcad475f98fd82ccaaf3cc4f873dc55e38a4495c995b7deb144f6d48db471878d157809357de9fb08eaf43c2f742a5267f5de267dcfc949fd15845c07bec4dd9b08205f272013c1e73386b7cce52e1c144a0cd2ba10fa4ec54cad1091ae8a9ae7eb273938839e858637d3e97b3b16a7e1277308ca39b3eff835b67fa5cc314a42172435ae42a589de098d71f2d760f05f296a6893422d1baf2e921a5b9d0408b2061ada4462d704f623bbd7544346ab7227d1816b659036423777d5ab25ba863fac3ade3e7bc229268f1991b8ee5930230d676f57ef2427548a4022c18fec98f8605a3fb3451efd51598cde988260a92cd944bac68a726c0c32f28b2175287275a50df33b99d4d5a2cbcf617b7be59f6caf4bfe811c07affd0e9e7facea4670089e6832e68c7337cda846c90cf24fa1668fd4210757d0c528781763000fe06a991a4e42298c0f760e946b80a201ed6bf5f6165b81665d3716ba4eb58d438fcc384d12d8a095f42523e5db25c5eb5169f85af2592d71dd75cd43142bbac10638cd62e772922ba29323361c8c67d91e3794f403ce8675ef4f7af4a0005f909b7f7a1deec614684</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","wordcount":1021,"excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<p>​\t\t我的博客创建已久，却从未认真写过什么。曾经打算把学习笔记记录在这里，然而大多数内容还是留在了 Obsidian 里，因为它在 iPad 上同步起来更方便。最近稍微有些空闲时间，翻出这个博客，想着写点日记，却又担心自己无法坚持每天更新。毕竟，我是个比较无聊的人，写东西大多是发发牢骚而已。于是，我决定随意记录下这些零散的想法。</p>\n<p>​\t\t回望自己的大学生活，我总觉得自己从一开始就像是一个“摆烂”型的人。表面上过得去，却始终未能完全放弃，因此总是处于“半学半玩”的状态。结果，四年的时光就在这种摇摆不定中悄然流逝。记得第一年，考研初试的失利让我深感挫败，第二年幸运一些，勉强通过了。说实话，我是那种典型的三分钟热度型的人，难以集中精力长时间坚持一件事。而对于未来的目标与规划，我也始终没有清晰的方向。大概从大学一开始，我就选择了待在自己的舒适区，几乎没有去主动突破过。最近，经历了一些变化，我也开始深刻反思：或许，是时候走出这片安逸的天地，去迎接一些挑战，突破自我。</p>\n<p>​\t\t最近，我决定找了一个辅导班做兼职，想借此机会开始锻炼自己与人交流的能力，改掉自己那种面对陌生人时的怯场毛病。与此同时，我也开始思考如何更好地理解他人的情感。大约在大二时，我逐渐意识到自己似乎缺乏对浪漫恋爱的兴趣，甚至觉得自己缺乏去爱一个人的能力。但对此，我并不感到困扰。正如《生活大爆炸》中的谢尔顿所言：“人们花一生追寻一个与之共度余生的人，我一直无法理解。或许是因为我太有趣，无需他人的陪伴。”在我看来，人与人之间的关系若过于接近，矛盾也会随之加深。世界上没有两个人可以完全合拍，所谓的感性喜欢和爱，最终也会在各种现实矛盾的冲击下消磨殆尽。我的家族亲戚比较多，其中大部分又都是官场中人，整日最喜欢的就是人情世故和勾心斗角，从小到大，我目睹过太多“面具下的真面目”，久而久之，这种虚伪与算计让我对人际关系产生了深深的厌倦。甚至曾有一段时间，我完全无法理解人与人之间的联系究竟为何物。再加上对中国社会人情世故的深深厌恶，我开始变得冷漠寡言，不愿与人深交。</p>\n<p>​\t\t这篇随想，或许只是一时的发泄，但它也代表了我对自己现状的一些反思。虽然目前我依然感到迷茫，但至少我已经开始意识到：接下来的路，我必须去走，去突破自己安逸的舒适区，去迎接更广阔的世界。正如《荒野生存》中的主人公所说：“真正的自由，不是逃避，而是去面对生活的一切，勇敢地去过自己想要的生活。”或许，正是从这一刻起，我才开始真正理解自由的意义。</p>\n","encrypt":true},{"title":"搭建Jupyter-Notebook服务器","date":"2025-04-17T04:39:13.000Z","_content":"\n# 安装python和相关依赖\n\n首先，更新系统中的包和依赖项：\n\n```bash\nsudo apt update\nsudo apt upgrade -y\n```\n\nJupyter Notebook需要Python环境。Ubuntu 18.04通常已经安装了Python，但我们可以确保安装`python3`和`pip3`。\n\n```bash\nsudo apt install python3 python3-pip python3-dev -y\n```\n\n# 安装Jupyter Notebook\n\n使用`pip3`安装Jupyter Notebook：\n\n```bash\npip3 install jupyter\n```\n\n## pip换国内源\n\n### 配置 pip 使用国内源\n\n1. 创建配置文件 `~/.pip/pip.conf`\n\n```bash\nmkdir -p ~/.pip\nnano ~/.pip/pip.conf\n```\n\n2. 添加源配置：\n\n```ini\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n\n[install]\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n```\n\n>`trusted-host` 是为了防止有些 pip 版本验证 TLS 报错。\n\n按下 `Ctrl + O` 保存，`Ctrl + X` 退出。\n\n\n\n### 立即用国内源安装 jupyter\n\n如果你暂时不想配置 pip.conf，也可以临时指定源：\n\n```bash\npip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## 其他问题\n\n安装时如果出现了类似下面的报错\n\n```bash\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-nxqa_lpa/argon2-cffi-bindings/\n```\n\n通常是因为：\n\n1.**缺少 Python 开发头文件或编译环境**（最常见）\n\n2.pip 版本过旧\n\n3.setuptools/wheel 没装好\n\n4.有时也可能是权限问题\n\n**解决方案**\n\n1. 安装系统依赖\n\n   ```bash\n   sudo apt update\n   sudo apt install -y build-essential python3-dev python3-pip python3-setuptools\n   ```\n\n​\t2.升级 pip + setuptools + wheel\n\n```bash\npip install --upgrade pip setuptools wheel -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n​\t3.清理旧的缓存再重装\n\n```bash\npip cache purge\npip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n​\t4.也可以尝试单独装失败的包\n\n```bash\npip install argon2-cffi -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n如果上面还是失败，你可以先装一个 Jupyter 的“最小版本”：\n\n```bash\npip install notebook -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n# 配置Jupyter Notebook\n\n完成配置之后就可以启动notebook并进行访问\n\n```bash\njupyter notebook\n```\n\n但是以 `root` 用户运行 Jupyter Notebook时会提示以下警告\n\n```bash\n[C 10:09:56.676 NotebookApp] Running as root is not recommended. Use --allow-root to bypass.\n```\n\nJupyter 官方推荐不要以 `root` 用户运行，因为这可能会导致权限问题或安全隐患。\n\n不过，如果你确认自己要以 `root` 用户运行，可以通过添加 `--allow-root` 参数来绕过这个警告。\n\n\n\n我们接下来创建一个普通用户来运行 Jupyter Notebook。这样更安全，而且不容易导致权限问题。\n\n```bash\nsudo useradd -m jupyteruser\nsudo groupadd jupyteruser\n```\n\n\n\n确保你当前是以 `jupyteruser` 用户身份操作。你可以通过以下命令切换到该用户：\n\n```bash\nsudo su - jupyteruser\n```\n\n或者，直接使用该用户的 shell：\n\n```bash\nsu - jupyteruser\n```\n\n接下来我们配置Jupyter Notebook\n\n## 配置登陆密码\n\n为确保安全，可以为Jupyter Notebook设置密码。使用以下命令生成密码哈希：\n\n```python\npython\nPython 3.8.5\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from IPython.lib import passwd\n>>> passwd()\nEnter password:\nVerify password:\n'sha1:.....................................'\n>>>exit()\n```\n\n该命令会提示你输入密码并返回一个哈希值。将该哈希值复制备用。\n\n## 生成配置文件\n\n```bash\njupyter notebook --generate-config\n```\n\n 然后打开配置文件：\n\n```bash\nnano ~/.jupyter/jupyter_notebook_config.py\n```\n\n把我们的配置集中追加到末尾：\n\n```python\n#--------------------------------------------------------------------------\n# User configuration\n#--------------------------------------------------------------------------\nc.NotebookApp.ip = '*'                               # notebook监听的IP\nc.NotebookApp.port = 8888  \t\t\t\t\t\t\t # notebook监听的端口\nc.NotebookApp.notebook_dir = '/home/jupyter-projects'# notebook的工作目录\nc.NotebookApp.open_browser = False                   # 运行notebook服务时不打开浏览器\nc.NotebookApp.password = u'sha1:..................'  # 密码的hash 值\n```\n\n## 启动Jupyter Notebook服务器\n\n配置完成后，可以通过以下命令启动Jupyter Notebook：\n\n```bash\njupyter notebook\n```\n\n# 保持Jupyter Notebook后台运行\n\n## 使用 `nohup` 将 Jupyter Notebook 在后台运行\n\n`nohup`（No Hang Up）命令可以使你在关闭终端后，进程继续运行。\n\n**步骤：**\n\n1. **启动 Jupyter Notebook 并使其在后台运行**： 运行以下命令，这样 Jupyter Notebook 会在后台继续运行，并将输出保存到日志文件中：\n\n   ```bash\n   nohup jupyter-notebook --no-browser --ip=0.0.0.0 --port=8889 > jupyter.log 2>&1 &\n   ```\n\n   - `--no-browser`：防止 Jupyter 自动打开浏览器。\n   - `--ip=0.0.0.0`：使 Jupyter 可通过任何网络接口访问。\n   - `--port=8889`：指定端口。\n   - `> jupyter.log 2>&1`：将输出重定向到 `jupyter.log` 文件中，这样你可以查看日志。\n   - `&`：将进程放入后台。\n\n   2.**查看日志**： 你可以查看 `jupyter.log` 文件中的输出，以确认 Jupyter Notebook 是否正在运行：\n\n   ```bash\n   tail -f jupyter.log\n   ```\n\n   3.**停止 Jupyter Notebook**： 如果需要停止 Jupyter Notebook，可以使用 `ps` 查找进程 ID（PID）并终止它：\n\n   ```bash\n   ps aux | grep jupyter\n   kill <PID>\n   ```\n\n\n\n## 使用 `systemd` 来管理 Jupyter Notebook 服务\n\n如果你希望 Jupyter Notebook 在系统启动时自动启动，并且能够通过 `systemctl` 命令管理它，可以使用 `systemd` 服务。这样，Jupyter Notebook 将在后台运行，并且系统崩溃后自动重启。\n\n#### 步骤：\n\n1. **创建一个 `systemd` 服务文件**： 在 `/etc/systemd/system/` 目录下创建一个新的服务文件，例如 `notebook.service`：\n\n```bash\nsudo nano /etc/systemd/system/notebook.service\n```\n\n​\t2.**服务文件内容**：\n\n​\t在文件中添加以下内容：\n\n```ini\n[Unit]\nDescription=Jupyter Notebook\nAfter=network.target\n\n[Service]\nType=simple\nPIDFile=/run/jupyter.pid\nExecStart=/usr/local/bin/jupyter-notebook\nUser=jupyteruser\nGroup=jupyteruser\nWorkingDirectory=/home/jupyteruser\nEnvironment=\"PATH=/home/jupyteruser/.local/bin:$PATH\"\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n\n```\n\n- `User=jupyteruser` 和 `Group=jupyteruser`：确保以 `jupyteruser` 用户身份运行。\n\n- `ExecStart`：指定 Jupyter Notebook 启动命令和相关参数。\n\n- `Restart=on-failure`：如果服务崩溃，自动重启。\n\n- `WorkingDirectory=/home/jupyteruser`：设置工作目录为 `jupyteruser` 的主目录。\n\n\n\n3. **重新加载 `systemd` 配置**： 在创建或修改服务文件后，使用以下命令重新加载 `systemd` 配置：\n\n```bash\nsudo systemctl daemon-reload\n```\n\n4. **启用并启动服务**： 使服务在系统启动时自动启动，并立即启动服务：\n\n```bash\nsudo systemctl enable notebook\nsudo systemctl start notebook\n```\n\n5. **查看服务状态**： 你可以使用以下命令检查 Jupyter Notebook 服务的状态：\n\n```bash\nsudo systemctl status notebook\n```\n\n6. **停止服务**： 如果需要停止服务，可以使用：\n\n```bash\nsudo systemctl stop notebook\n```\n\n# 总结\n\n至此，你已经成功在Ubuntu 18.04上搭建了一个Jupyter Notebook服务器，并且可以从任何地方访问它，只要你提供正确的IP和密码。\n","source":"_posts/搭建Jupyter-Notebook服务器.md","raw":"---\ntitle: 搭建Jupyter-Notebook服务器\ndate: 2025-04-17 12:39:13\ntags:\n      - Notebook\n\n---\n\n# 安装python和相关依赖\n\n首先，更新系统中的包和依赖项：\n\n```bash\nsudo apt update\nsudo apt upgrade -y\n```\n\nJupyter Notebook需要Python环境。Ubuntu 18.04通常已经安装了Python，但我们可以确保安装`python3`和`pip3`。\n\n```bash\nsudo apt install python3 python3-pip python3-dev -y\n```\n\n# 安装Jupyter Notebook\n\n使用`pip3`安装Jupyter Notebook：\n\n```bash\npip3 install jupyter\n```\n\n## pip换国内源\n\n### 配置 pip 使用国内源\n\n1. 创建配置文件 `~/.pip/pip.conf`\n\n```bash\nmkdir -p ~/.pip\nnano ~/.pip/pip.conf\n```\n\n2. 添加源配置：\n\n```ini\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n\n[install]\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n```\n\n>`trusted-host` 是为了防止有些 pip 版本验证 TLS 报错。\n\n按下 `Ctrl + O` 保存，`Ctrl + X` 退出。\n\n\n\n### 立即用国内源安装 jupyter\n\n如果你暂时不想配置 pip.conf，也可以临时指定源：\n\n```bash\npip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n## 其他问题\n\n安装时如果出现了类似下面的报错\n\n```bash\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-nxqa_lpa/argon2-cffi-bindings/\n```\n\n通常是因为：\n\n1.**缺少 Python 开发头文件或编译环境**（最常见）\n\n2.pip 版本过旧\n\n3.setuptools/wheel 没装好\n\n4.有时也可能是权限问题\n\n**解决方案**\n\n1. 安装系统依赖\n\n   ```bash\n   sudo apt update\n   sudo apt install -y build-essential python3-dev python3-pip python3-setuptools\n   ```\n\n​\t2.升级 pip + setuptools + wheel\n\n```bash\npip install --upgrade pip setuptools wheel -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n​\t3.清理旧的缓存再重装\n\n```bash\npip cache purge\npip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n​\t4.也可以尝试单独装失败的包\n\n```bash\npip install argon2-cffi -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n如果上面还是失败，你可以先装一个 Jupyter 的“最小版本”：\n\n```bash\npip install notebook -i https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n# 配置Jupyter Notebook\n\n完成配置之后就可以启动notebook并进行访问\n\n```bash\njupyter notebook\n```\n\n但是以 `root` 用户运行 Jupyter Notebook时会提示以下警告\n\n```bash\n[C 10:09:56.676 NotebookApp] Running as root is not recommended. Use --allow-root to bypass.\n```\n\nJupyter 官方推荐不要以 `root` 用户运行，因为这可能会导致权限问题或安全隐患。\n\n不过，如果你确认自己要以 `root` 用户运行，可以通过添加 `--allow-root` 参数来绕过这个警告。\n\n\n\n我们接下来创建一个普通用户来运行 Jupyter Notebook。这样更安全，而且不容易导致权限问题。\n\n```bash\nsudo useradd -m jupyteruser\nsudo groupadd jupyteruser\n```\n\n\n\n确保你当前是以 `jupyteruser` 用户身份操作。你可以通过以下命令切换到该用户：\n\n```bash\nsudo su - jupyteruser\n```\n\n或者，直接使用该用户的 shell：\n\n```bash\nsu - jupyteruser\n```\n\n接下来我们配置Jupyter Notebook\n\n## 配置登陆密码\n\n为确保安全，可以为Jupyter Notebook设置密码。使用以下命令生成密码哈希：\n\n```python\npython\nPython 3.8.5\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from IPython.lib import passwd\n>>> passwd()\nEnter password:\nVerify password:\n'sha1:.....................................'\n>>>exit()\n```\n\n该命令会提示你输入密码并返回一个哈希值。将该哈希值复制备用。\n\n## 生成配置文件\n\n```bash\njupyter notebook --generate-config\n```\n\n 然后打开配置文件：\n\n```bash\nnano ~/.jupyter/jupyter_notebook_config.py\n```\n\n把我们的配置集中追加到末尾：\n\n```python\n#--------------------------------------------------------------------------\n# User configuration\n#--------------------------------------------------------------------------\nc.NotebookApp.ip = '*'                               # notebook监听的IP\nc.NotebookApp.port = 8888  \t\t\t\t\t\t\t # notebook监听的端口\nc.NotebookApp.notebook_dir = '/home/jupyter-projects'# notebook的工作目录\nc.NotebookApp.open_browser = False                   # 运行notebook服务时不打开浏览器\nc.NotebookApp.password = u'sha1:..................'  # 密码的hash 值\n```\n\n## 启动Jupyter Notebook服务器\n\n配置完成后，可以通过以下命令启动Jupyter Notebook：\n\n```bash\njupyter notebook\n```\n\n# 保持Jupyter Notebook后台运行\n\n## 使用 `nohup` 将 Jupyter Notebook 在后台运行\n\n`nohup`（No Hang Up）命令可以使你在关闭终端后，进程继续运行。\n\n**步骤：**\n\n1. **启动 Jupyter Notebook 并使其在后台运行**： 运行以下命令，这样 Jupyter Notebook 会在后台继续运行，并将输出保存到日志文件中：\n\n   ```bash\n   nohup jupyter-notebook --no-browser --ip=0.0.0.0 --port=8889 > jupyter.log 2>&1 &\n   ```\n\n   - `--no-browser`：防止 Jupyter 自动打开浏览器。\n   - `--ip=0.0.0.0`：使 Jupyter 可通过任何网络接口访问。\n   - `--port=8889`：指定端口。\n   - `> jupyter.log 2>&1`：将输出重定向到 `jupyter.log` 文件中，这样你可以查看日志。\n   - `&`：将进程放入后台。\n\n   2.**查看日志**： 你可以查看 `jupyter.log` 文件中的输出，以确认 Jupyter Notebook 是否正在运行：\n\n   ```bash\n   tail -f jupyter.log\n   ```\n\n   3.**停止 Jupyter Notebook**： 如果需要停止 Jupyter Notebook，可以使用 `ps` 查找进程 ID（PID）并终止它：\n\n   ```bash\n   ps aux | grep jupyter\n   kill <PID>\n   ```\n\n\n\n## 使用 `systemd` 来管理 Jupyter Notebook 服务\n\n如果你希望 Jupyter Notebook 在系统启动时自动启动，并且能够通过 `systemctl` 命令管理它，可以使用 `systemd` 服务。这样，Jupyter Notebook 将在后台运行，并且系统崩溃后自动重启。\n\n#### 步骤：\n\n1. **创建一个 `systemd` 服务文件**： 在 `/etc/systemd/system/` 目录下创建一个新的服务文件，例如 `notebook.service`：\n\n```bash\nsudo nano /etc/systemd/system/notebook.service\n```\n\n​\t2.**服务文件内容**：\n\n​\t在文件中添加以下内容：\n\n```ini\n[Unit]\nDescription=Jupyter Notebook\nAfter=network.target\n\n[Service]\nType=simple\nPIDFile=/run/jupyter.pid\nExecStart=/usr/local/bin/jupyter-notebook\nUser=jupyteruser\nGroup=jupyteruser\nWorkingDirectory=/home/jupyteruser\nEnvironment=\"PATH=/home/jupyteruser/.local/bin:$PATH\"\nRestart=always\n\n[Install]\nWantedBy=multi-user.target\n\n```\n\n- `User=jupyteruser` 和 `Group=jupyteruser`：确保以 `jupyteruser` 用户身份运行。\n\n- `ExecStart`：指定 Jupyter Notebook 启动命令和相关参数。\n\n- `Restart=on-failure`：如果服务崩溃，自动重启。\n\n- `WorkingDirectory=/home/jupyteruser`：设置工作目录为 `jupyteruser` 的主目录。\n\n\n\n3. **重新加载 `systemd` 配置**： 在创建或修改服务文件后，使用以下命令重新加载 `systemd` 配置：\n\n```bash\nsudo systemctl daemon-reload\n```\n\n4. **启用并启动服务**： 使服务在系统启动时自动启动，并立即启动服务：\n\n```bash\nsudo systemctl enable notebook\nsudo systemctl start notebook\n```\n\n5. **查看服务状态**： 你可以使用以下命令检查 Jupyter Notebook 服务的状态：\n\n```bash\nsudo systemctl status notebook\n```\n\n6. **停止服务**： 如果需要停止服务，可以使用：\n\n```bash\nsudo systemctl stop notebook\n```\n\n# 总结\n\n至此，你已经成功在Ubuntu 18.04上搭建了一个Jupyter Notebook服务器，并且可以从任何地方访问它，只要你提供正确的IP和密码。\n","slug":"搭建Jupyter-Notebook服务器","published":1,"updated":"2025-04-17T04:40:16.577Z","comments":1,"layout":"post","photos":[],"_id":"cmaj5a7bc0005a8uo9zxgbeck","content":"<h1 id=\"安装python和相关依赖\"><a href=\"#安装python和相关依赖\" class=\"headerlink\" title=\"安装python和相关依赖\"></a>安装python和相关依赖</h1><p>首先，更新系统中的包和依赖项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> apt update<br><span class=\"hljs-built_in\">sudo</span> apt upgrade -y<br></code></pre></td></tr></table></figure>\n\n<p>Jupyter Notebook需要Python环境。Ubuntu 18.04通常已经安装了Python，但我们可以确保安装<code>python3</code>和<code>pip3</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> apt install python3 python3-pip python3-dev -y<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"安装Jupyter-Notebook\"><a href=\"#安装Jupyter-Notebook\" class=\"headerlink\" title=\"安装Jupyter Notebook\"></a>安装Jupyter Notebook</h1><p>使用<code>pip3</code>安装Jupyter Notebook：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip3 install jupyter<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"pip换国内源\"><a href=\"#pip换国内源\" class=\"headerlink\" title=\"pip换国内源\"></a>pip换国内源</h2><h3 id=\"配置-pip-使用国内源\"><a href=\"#配置-pip-使用国内源\" class=\"headerlink\" title=\"配置 pip 使用国内源\"></a>配置 pip 使用国内源</h3><ol>\n<li>创建配置文件 <code>~/.pip/pip.conf</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p ~/.pip<br>nano ~/.pip/pip.conf<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加源配置：</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[global]</span><br><span class=\"hljs-attr\">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple<br><br><span class=\"hljs-section\">[install]</span><br><span class=\"hljs-attr\">trusted-host</span> = pypi.tuna.tsinghua.edu.cn<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>trusted-host</code> 是为了防止有些 pip 版本验证 TLS 报错。</p>\n</blockquote>\n<p>按下 <code>Ctrl + O</code> 保存，<code>Ctrl + X</code> 退出。</p>\n<h3 id=\"立即用国内源安装-jupyter\"><a href=\"#立即用国内源安装-jupyter\" class=\"headerlink\" title=\"立即用国内源安装 jupyter\"></a>立即用国内源安装 jupyter</h3><p>如果你暂时不想配置 pip.conf，也可以临时指定源：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><p>安装时如果出现了类似下面的报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Command <span class=\"hljs-string\">&quot;python setup.py egg_info&quot;</span> failed with error code 1 <span class=\"hljs-keyword\">in</span> /tmp/pip-build-nxqa_lpa/argon2-cffi-bindings/<br></code></pre></td></tr></table></figure>\n\n<p>通常是因为：</p>\n<p>1.<strong>缺少 Python 开发头文件或编译环境</strong>（最常见）</p>\n<p>2.pip 版本过旧</p>\n<p>3.setuptools&#x2F;wheel 没装好</p>\n<p>4.有时也可能是权限问题</p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li><p>安装系统依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> apt update<br><span class=\"hljs-built_in\">sudo</span> apt install -y build-essential python3-dev python3-pip python3-setuptools<br></code></pre></td></tr></table></figure></li>\n</ol>\n<p>​\t2.升级 pip + setuptools + wheel</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install --upgrade pip setuptools wheel -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<p>​\t3.清理旧的缓存再重装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip cache purge<br>pip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<p>​\t4.也可以尝试单独装失败的包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install argon2-cffi -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<p>如果上面还是失败，你可以先装一个 Jupyter 的“最小版本”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install notebook -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"配置Jupyter-Notebook\"><a href=\"#配置Jupyter-Notebook\" class=\"headerlink\" title=\"配置Jupyter Notebook\"></a>配置Jupyter Notebook</h1><p>完成配置之后就可以启动notebook并进行访问</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">jupyter notebook<br></code></pre></td></tr></table></figure>\n\n<p>但是以 <code>root</code> 用户运行 Jupyter Notebook时会提示以下警告</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[C 10:09:56.676 NotebookApp] Running as root is not recommended. Use --allow-root to bypass.<br></code></pre></td></tr></table></figure>\n\n<p>Jupyter 官方推荐不要以 <code>root</code> 用户运行，因为这可能会导致权限问题或安全隐患。</p>\n<p>不过，如果你确认自己要以 <code>root</code> 用户运行，可以通过添加 <code>--allow-root</code> 参数来绕过这个警告。</p>\n<p>我们接下来创建一个普通用户来运行 Jupyter Notebook。这样更安全，而且不容易导致权限问题。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> useradd -m jupyteruser<br><span class=\"hljs-built_in\">sudo</span> groupadd jupyteruser<br></code></pre></td></tr></table></figure>\n\n\n\n<p>确保你当前是以 <code>jupyteruser</code> 用户身份操作。你可以通过以下命令切换到该用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> su - jupyteruser<br></code></pre></td></tr></table></figure>\n\n<p>或者，直接使用该用户的 shell：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">su - jupyteruser<br></code></pre></td></tr></table></figure>\n\n<p>接下来我们配置Jupyter Notebook</p>\n<h2 id=\"配置登陆密码\"><a href=\"#配置登陆密码\" class=\"headerlink\" title=\"配置登陆密码\"></a>配置登陆密码</h2><p>为确保安全，可以为Jupyter Notebook设置密码。使用以下命令生成密码哈希：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">python<br>Python <span class=\"hljs-number\">3.8</span><span class=\"hljs-number\">.5</span><br><span class=\"hljs-type\">Type</span> <span class=\"hljs-string\">&quot;help&quot;</span>, <span class=\"hljs-string\">&quot;copyright&quot;</span>, <span class=\"hljs-string\">&quot;credits&quot;</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-string\">&quot;license&quot;</span> <span class=\"hljs-keyword\">for</span> more information.<br><span class=\"hljs-meta\">&gt;&gt;&gt; </span><span class=\"hljs-keyword\">from</span> IPython.lib <span class=\"hljs-keyword\">import</span> passwd<br><span class=\"hljs-meta\">&gt;&gt;&gt; </span>passwd()<br>Enter password:<br>Verify password:<br><span class=\"hljs-string\">&#x27;sha1:.....................................&#x27;</span><br>&gt;&gt;&gt;exit()<br></code></pre></td></tr></table></figure>\n\n<p>该命令会提示你输入密码并返回一个哈希值。将该哈希值复制备用。</p>\n<h2 id=\"生成配置文件\"><a href=\"#生成配置文件\" class=\"headerlink\" title=\"生成配置文件\"></a>生成配置文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">jupyter notebook --generate-config<br></code></pre></td></tr></table></figure>\n\n<p> 然后打开配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nano ~/.jupyter/jupyter_notebook_config.py<br></code></pre></td></tr></table></figure>\n\n<p>把我们的配置集中追加到末尾：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#--------------------------------------------------------------------------</span><br><span class=\"hljs-comment\"># User configuration</span><br><span class=\"hljs-comment\">#--------------------------------------------------------------------------</span><br>c.NotebookApp.ip = <span class=\"hljs-string\">&#x27;*&#x27;</span>                               <span class=\"hljs-comment\"># notebook监听的IP</span><br>c.NotebookApp.port = <span class=\"hljs-number\">8888</span>  \t\t\t\t\t\t\t <span class=\"hljs-comment\"># notebook监听的端口</span><br>c.NotebookApp.notebook_dir = <span class=\"hljs-string\">&#x27;/home/jupyter-projects&#x27;</span><span class=\"hljs-comment\"># notebook的工作目录</span><br>c.NotebookApp.open_browser = <span class=\"hljs-literal\">False</span>                   <span class=\"hljs-comment\"># 运行notebook服务时不打开浏览器</span><br>c.NotebookApp.password = <span class=\"hljs-string\">u&#x27;sha1:..................&#x27;</span>  <span class=\"hljs-comment\"># 密码的hash 值</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"启动Jupyter-Notebook服务器\"><a href=\"#启动Jupyter-Notebook服务器\" class=\"headerlink\" title=\"启动Jupyter Notebook服务器\"></a>启动Jupyter Notebook服务器</h2><p>配置完成后，可以通过以下命令启动Jupyter Notebook：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">jupyter notebook<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"保持Jupyter-Notebook后台运行\"><a href=\"#保持Jupyter-Notebook后台运行\" class=\"headerlink\" title=\"保持Jupyter Notebook后台运行\"></a>保持Jupyter Notebook后台运行</h1><h2 id=\"使用-nohup-将-Jupyter-Notebook-在后台运行\"><a href=\"#使用-nohup-将-Jupyter-Notebook-在后台运行\" class=\"headerlink\" title=\"使用 nohup 将 Jupyter Notebook 在后台运行\"></a>使用 <code>nohup</code> 将 Jupyter Notebook 在后台运行</h2><p><code>nohup</code>（No Hang Up）命令可以使你在关闭终端后，进程继续运行。</p>\n<p><strong>步骤：</strong></p>\n<ol>\n<li><p><strong>启动 Jupyter Notebook 并使其在后台运行</strong>： 运行以下命令，这样 Jupyter Notebook 会在后台继续运行，并将输出保存到日志文件中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">nohup</span> jupyter-notebook --no-browser --ip=0.0.0.0 --port=8889 &gt; jupyter.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>--no-browser</code>：防止 Jupyter 自动打开浏览器。</li>\n<li><code>--ip=0.0.0.0</code>：使 Jupyter 可通过任何网络接口访问。</li>\n<li><code>--port=8889</code>：指定端口。</li>\n<li><code>&gt; jupyter.log 2&gt;&amp;1</code>：将输出重定向到 <code>jupyter.log</code> 文件中，这样你可以查看日志。</li>\n<li><code>&amp;</code>：将进程放入后台。</li>\n</ul>\n<p>2.<strong>查看日志</strong>： 你可以查看 <code>jupyter.log</code> 文件中的输出，以确认 Jupyter Notebook 是否正在运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">tail</span> -f jupyter.log<br></code></pre></td></tr></table></figure>\n\n<p>3.<strong>停止 Jupyter Notebook</strong>： 如果需要停止 Jupyter Notebook，可以使用 <code>ps</code> 查找进程 ID（PID）并终止它：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps aux | grep jupyter<br><span class=\"hljs-built_in\">kill</span> &lt;PID&gt;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"使用-systemd-来管理-Jupyter-Notebook-服务\"><a href=\"#使用-systemd-来管理-Jupyter-Notebook-服务\" class=\"headerlink\" title=\"使用 systemd 来管理 Jupyter Notebook 服务\"></a>使用 <code>systemd</code> 来管理 Jupyter Notebook 服务</h2><p>如果你希望 Jupyter Notebook 在系统启动时自动启动，并且能够通过 <code>systemctl</code> 命令管理它，可以使用 <code>systemd</code> 服务。这样，Jupyter Notebook 将在后台运行，并且系统崩溃后自动重启。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><strong>创建一个 <code>systemd</code> 服务文件</strong>： 在 <code>/etc/systemd/system/</code> 目录下创建一个新的服务文件，例如 <code>notebook.service</code>：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> nano /etc/systemd/system/notebook.service<br></code></pre></td></tr></table></figure>\n\n<p>​\t2.<strong>服务文件内容</strong>：</p>\n<p>​\t在文件中添加以下内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Unit]</span><br><span class=\"hljs-attr\">Description</span>=Jupyter Notebook<br><span class=\"hljs-attr\">After</span>=network.target<br><br><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Type</span>=simple<br><span class=\"hljs-attr\">PIDFile</span>=/run/jupyter.pid<br><span class=\"hljs-attr\">ExecStart</span>=/usr/local/bin/jupyter-notebook<br><span class=\"hljs-attr\">User</span>=jupyteruser<br><span class=\"hljs-attr\">Group</span>=jupyteruser<br><span class=\"hljs-attr\">WorkingDirectory</span>=/home/jupyteruser<br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;PATH=/home/jupyteruser/.local/bin:$PATH&quot;</span><br><span class=\"hljs-attr\">Restart</span>=always<br><br><span class=\"hljs-section\">[Install]</span><br><span class=\"hljs-attr\">WantedBy</span>=multi-user.target<br><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>User=jupyteruser</code> 和 <code>Group=jupyteruser</code>：确保以 <code>jupyteruser</code> 用户身份运行。</p>\n</li>\n<li><p><code>ExecStart</code>：指定 Jupyter Notebook 启动命令和相关参数。</p>\n</li>\n<li><p><code>Restart=on-failure</code>：如果服务崩溃，自动重启。</p>\n</li>\n<li><p><code>WorkingDirectory=/home/jupyteruser</code>：设置工作目录为 <code>jupyteruser</code> 的主目录。</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li><strong>重新加载 <code>systemd</code> 配置</strong>： 在创建或修改服务文件后，使用以下命令重新加载 <code>systemd</code> 配置：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl daemon-reload<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><strong>启用并启动服务</strong>： 使服务在系统启动时自动启动，并立即启动服务：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl <span class=\"hljs-built_in\">enable</span> notebook<br><span class=\"hljs-built_in\">sudo</span> systemctl start notebook<br></code></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li><strong>查看服务状态</strong>： 你可以使用以下命令检查 Jupyter Notebook 服务的状态：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl status notebook<br></code></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li><strong>停止服务</strong>： 如果需要停止服务，可以使用：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl stop notebook<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>至此，你已经成功在Ubuntu 18.04上搭建了一个Jupyter Notebook服务器，并且可以从任何地方访问它，只要你提供正确的IP和密码。</p>\n","wordcount":4420,"excerpt":"","more":"<h1 id=\"安装python和相关依赖\"><a href=\"#安装python和相关依赖\" class=\"headerlink\" title=\"安装python和相关依赖\"></a>安装python和相关依赖</h1><p>首先，更新系统中的包和依赖项：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> apt update<br><span class=\"hljs-built_in\">sudo</span> apt upgrade -y<br></code></pre></td></tr></table></figure>\n\n<p>Jupyter Notebook需要Python环境。Ubuntu 18.04通常已经安装了Python，但我们可以确保安装<code>python3</code>和<code>pip3</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> apt install python3 python3-pip python3-dev -y<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"安装Jupyter-Notebook\"><a href=\"#安装Jupyter-Notebook\" class=\"headerlink\" title=\"安装Jupyter Notebook\"></a>安装Jupyter Notebook</h1><p>使用<code>pip3</code>安装Jupyter Notebook：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip3 install jupyter<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"pip换国内源\"><a href=\"#pip换国内源\" class=\"headerlink\" title=\"pip换国内源\"></a>pip换国内源</h2><h3 id=\"配置-pip-使用国内源\"><a href=\"#配置-pip-使用国内源\" class=\"headerlink\" title=\"配置 pip 使用国内源\"></a>配置 pip 使用国内源</h3><ol>\n<li>创建配置文件 <code>~/.pip/pip.conf</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">mkdir</span> -p ~/.pip<br>nano ~/.pip/pip.conf<br></code></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加源配置：</li>\n</ol>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[global]</span><br><span class=\"hljs-attr\">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple<br><br><span class=\"hljs-section\">[install]</span><br><span class=\"hljs-attr\">trusted-host</span> = pypi.tuna.tsinghua.edu.cn<br></code></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>trusted-host</code> 是为了防止有些 pip 版本验证 TLS 报错。</p>\n</blockquote>\n<p>按下 <code>Ctrl + O</code> 保存，<code>Ctrl + X</code> 退出。</p>\n<h3 id=\"立即用国内源安装-jupyter\"><a href=\"#立即用国内源安装-jupyter\" class=\"headerlink\" title=\"立即用国内源安装 jupyter\"></a>立即用国内源安装 jupyter</h3><p>如果你暂时不想配置 pip.conf，也可以临时指定源：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"其他问题\"><a href=\"#其他问题\" class=\"headerlink\" title=\"其他问题\"></a>其他问题</h2><p>安装时如果出现了类似下面的报错</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">Command <span class=\"hljs-string\">&quot;python setup.py egg_info&quot;</span> failed with error code 1 <span class=\"hljs-keyword\">in</span> /tmp/pip-build-nxqa_lpa/argon2-cffi-bindings/<br></code></pre></td></tr></table></figure>\n\n<p>通常是因为：</p>\n<p>1.<strong>缺少 Python 开发头文件或编译环境</strong>（最常见）</p>\n<p>2.pip 版本过旧</p>\n<p>3.setuptools&#x2F;wheel 没装好</p>\n<p>4.有时也可能是权限问题</p>\n<p><strong>解决方案</strong></p>\n<ol>\n<li><p>安装系统依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> apt update<br><span class=\"hljs-built_in\">sudo</span> apt install -y build-essential python3-dev python3-pip python3-setuptools<br></code></pre></td></tr></table></figure></li>\n</ol>\n<p>​\t2.升级 pip + setuptools + wheel</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install --upgrade pip setuptools wheel -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<p>​\t3.清理旧的缓存再重装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip cache purge<br>pip install jupyter -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<p>​\t4.也可以尝试单独装失败的包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install argon2-cffi -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<p>如果上面还是失败，你可以先装一个 Jupyter 的“最小版本”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">pip install notebook -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"配置Jupyter-Notebook\"><a href=\"#配置Jupyter-Notebook\" class=\"headerlink\" title=\"配置Jupyter Notebook\"></a>配置Jupyter Notebook</h1><p>完成配置之后就可以启动notebook并进行访问</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">jupyter notebook<br></code></pre></td></tr></table></figure>\n\n<p>但是以 <code>root</code> 用户运行 Jupyter Notebook时会提示以下警告</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">[C 10:09:56.676 NotebookApp] Running as root is not recommended. Use --allow-root to bypass.<br></code></pre></td></tr></table></figure>\n\n<p>Jupyter 官方推荐不要以 <code>root</code> 用户运行，因为这可能会导致权限问题或安全隐患。</p>\n<p>不过，如果你确认自己要以 <code>root</code> 用户运行，可以通过添加 <code>--allow-root</code> 参数来绕过这个警告。</p>\n<p>我们接下来创建一个普通用户来运行 Jupyter Notebook。这样更安全，而且不容易导致权限问题。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> useradd -m jupyteruser<br><span class=\"hljs-built_in\">sudo</span> groupadd jupyteruser<br></code></pre></td></tr></table></figure>\n\n\n\n<p>确保你当前是以 <code>jupyteruser</code> 用户身份操作。你可以通过以下命令切换到该用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> su - jupyteruser<br></code></pre></td></tr></table></figure>\n\n<p>或者，直接使用该用户的 shell：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">su - jupyteruser<br></code></pre></td></tr></table></figure>\n\n<p>接下来我们配置Jupyter Notebook</p>\n<h2 id=\"配置登陆密码\"><a href=\"#配置登陆密码\" class=\"headerlink\" title=\"配置登陆密码\"></a>配置登陆密码</h2><p>为确保安全，可以为Jupyter Notebook设置密码。使用以下命令生成密码哈希：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">python<br>Python <span class=\"hljs-number\">3.8</span><span class=\"hljs-number\">.5</span><br><span class=\"hljs-type\">Type</span> <span class=\"hljs-string\">&quot;help&quot;</span>, <span class=\"hljs-string\">&quot;copyright&quot;</span>, <span class=\"hljs-string\">&quot;credits&quot;</span> <span class=\"hljs-keyword\">or</span> <span class=\"hljs-string\">&quot;license&quot;</span> <span class=\"hljs-keyword\">for</span> more information.<br><span class=\"hljs-meta\">&gt;&gt;&gt; </span><span class=\"hljs-keyword\">from</span> IPython.lib <span class=\"hljs-keyword\">import</span> passwd<br><span class=\"hljs-meta\">&gt;&gt;&gt; </span>passwd()<br>Enter password:<br>Verify password:<br><span class=\"hljs-string\">&#x27;sha1:.....................................&#x27;</span><br>&gt;&gt;&gt;exit()<br></code></pre></td></tr></table></figure>\n\n<p>该命令会提示你输入密码并返回一个哈希值。将该哈希值复制备用。</p>\n<h2 id=\"生成配置文件\"><a href=\"#生成配置文件\" class=\"headerlink\" title=\"生成配置文件\"></a>生成配置文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">jupyter notebook --generate-config<br></code></pre></td></tr></table></figure>\n\n<p> 然后打开配置文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">nano ~/.jupyter/jupyter_notebook_config.py<br></code></pre></td></tr></table></figure>\n\n<p>把我们的配置集中追加到末尾：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\">#--------------------------------------------------------------------------</span><br><span class=\"hljs-comment\"># User configuration</span><br><span class=\"hljs-comment\">#--------------------------------------------------------------------------</span><br>c.NotebookApp.ip = <span class=\"hljs-string\">&#x27;*&#x27;</span>                               <span class=\"hljs-comment\"># notebook监听的IP</span><br>c.NotebookApp.port = <span class=\"hljs-number\">8888</span>  \t\t\t\t\t\t\t <span class=\"hljs-comment\"># notebook监听的端口</span><br>c.NotebookApp.notebook_dir = <span class=\"hljs-string\">&#x27;/home/jupyter-projects&#x27;</span><span class=\"hljs-comment\"># notebook的工作目录</span><br>c.NotebookApp.open_browser = <span class=\"hljs-literal\">False</span>                   <span class=\"hljs-comment\"># 运行notebook服务时不打开浏览器</span><br>c.NotebookApp.password = <span class=\"hljs-string\">u&#x27;sha1:..................&#x27;</span>  <span class=\"hljs-comment\"># 密码的hash 值</span><br></code></pre></td></tr></table></figure>\n\n<h2 id=\"启动Jupyter-Notebook服务器\"><a href=\"#启动Jupyter-Notebook服务器\" class=\"headerlink\" title=\"启动Jupyter Notebook服务器\"></a>启动Jupyter Notebook服务器</h2><p>配置完成后，可以通过以下命令启动Jupyter Notebook：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">jupyter notebook<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"保持Jupyter-Notebook后台运行\"><a href=\"#保持Jupyter-Notebook后台运行\" class=\"headerlink\" title=\"保持Jupyter Notebook后台运行\"></a>保持Jupyter Notebook后台运行</h1><h2 id=\"使用-nohup-将-Jupyter-Notebook-在后台运行\"><a href=\"#使用-nohup-将-Jupyter-Notebook-在后台运行\" class=\"headerlink\" title=\"使用 nohup 将 Jupyter Notebook 在后台运行\"></a>使用 <code>nohup</code> 将 Jupyter Notebook 在后台运行</h2><p><code>nohup</code>（No Hang Up）命令可以使你在关闭终端后，进程继续运行。</p>\n<p><strong>步骤：</strong></p>\n<ol>\n<li><p><strong>启动 Jupyter Notebook 并使其在后台运行</strong>： 运行以下命令，这样 Jupyter Notebook 会在后台继续运行，并将输出保存到日志文件中：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">nohup</span> jupyter-notebook --no-browser --ip=0.0.0.0 --port=8889 &gt; jupyter.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><code>--no-browser</code>：防止 Jupyter 自动打开浏览器。</li>\n<li><code>--ip=0.0.0.0</code>：使 Jupyter 可通过任何网络接口访问。</li>\n<li><code>--port=8889</code>：指定端口。</li>\n<li><code>&gt; jupyter.log 2&gt;&amp;1</code>：将输出重定向到 <code>jupyter.log</code> 文件中，这样你可以查看日志。</li>\n<li><code>&amp;</code>：将进程放入后台。</li>\n</ul>\n<p>2.<strong>查看日志</strong>： 你可以查看 <code>jupyter.log</code> 文件中的输出，以确认 Jupyter Notebook 是否正在运行：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">tail</span> -f jupyter.log<br></code></pre></td></tr></table></figure>\n\n<p>3.<strong>停止 Jupyter Notebook</strong>： 如果需要停止 Jupyter Notebook，可以使用 <code>ps</code> 查找进程 ID（PID）并终止它：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">ps aux | grep jupyter<br><span class=\"hljs-built_in\">kill</span> &lt;PID&gt;<br></code></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"使用-systemd-来管理-Jupyter-Notebook-服务\"><a href=\"#使用-systemd-来管理-Jupyter-Notebook-服务\" class=\"headerlink\" title=\"使用 systemd 来管理 Jupyter Notebook 服务\"></a>使用 <code>systemd</code> 来管理 Jupyter Notebook 服务</h2><p>如果你希望 Jupyter Notebook 在系统启动时自动启动，并且能够通过 <code>systemctl</code> 命令管理它，可以使用 <code>systemd</code> 服务。这样，Jupyter Notebook 将在后台运行，并且系统崩溃后自动重启。</p>\n<h4 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h4><ol>\n<li><strong>创建一个 <code>systemd</code> 服务文件</strong>： 在 <code>/etc/systemd/system/</code> 目录下创建一个新的服务文件，例如 <code>notebook.service</code>：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> nano /etc/systemd/system/notebook.service<br></code></pre></td></tr></table></figure>\n\n<p>​\t2.<strong>服务文件内容</strong>：</p>\n<p>​\t在文件中添加以下内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Unit]</span><br><span class=\"hljs-attr\">Description</span>=Jupyter Notebook<br><span class=\"hljs-attr\">After</span>=network.target<br><br><span class=\"hljs-section\">[Service]</span><br><span class=\"hljs-attr\">Type</span>=simple<br><span class=\"hljs-attr\">PIDFile</span>=/run/jupyter.pid<br><span class=\"hljs-attr\">ExecStart</span>=/usr/local/bin/jupyter-notebook<br><span class=\"hljs-attr\">User</span>=jupyteruser<br><span class=\"hljs-attr\">Group</span>=jupyteruser<br><span class=\"hljs-attr\">WorkingDirectory</span>=/home/jupyteruser<br><span class=\"hljs-attr\">Environment</span>=<span class=\"hljs-string\">&quot;PATH=/home/jupyteruser/.local/bin:$PATH&quot;</span><br><span class=\"hljs-attr\">Restart</span>=always<br><br><span class=\"hljs-section\">[Install]</span><br><span class=\"hljs-attr\">WantedBy</span>=multi-user.target<br><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p><code>User=jupyteruser</code> 和 <code>Group=jupyteruser</code>：确保以 <code>jupyteruser</code> 用户身份运行。</p>\n</li>\n<li><p><code>ExecStart</code>：指定 Jupyter Notebook 启动命令和相关参数。</p>\n</li>\n<li><p><code>Restart=on-failure</code>：如果服务崩溃，自动重启。</p>\n</li>\n<li><p><code>WorkingDirectory=/home/jupyteruser</code>：设置工作目录为 <code>jupyteruser</code> 的主目录。</p>\n</li>\n</ul>\n<ol start=\"3\">\n<li><strong>重新加载 <code>systemd</code> 配置</strong>： 在创建或修改服务文件后，使用以下命令重新加载 <code>systemd</code> 配置：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl daemon-reload<br></code></pre></td></tr></table></figure>\n\n<ol start=\"4\">\n<li><strong>启用并启动服务</strong>： 使服务在系统启动时自动启动，并立即启动服务：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl <span class=\"hljs-built_in\">enable</span> notebook<br><span class=\"hljs-built_in\">sudo</span> systemctl start notebook<br></code></pre></td></tr></table></figure>\n\n<ol start=\"5\">\n<li><strong>查看服务状态</strong>： 你可以使用以下命令检查 Jupyter Notebook 服务的状态：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl status notebook<br></code></pre></td></tr></table></figure>\n\n<ol start=\"6\">\n<li><strong>停止服务</strong>： 如果需要停止服务，可以使用：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">sudo</span> systemctl stop notebook<br></code></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>至此，你已经成功在Ubuntu 18.04上搭建了一个Jupyter Notebook服务器，并且可以从任何地方访问它，只要你提供正确的IP和密码。</p>\n"},{"title":"Getting started with crawlers","date":"2023-03-11T12:00:14.000Z","_content":"\n# Use requests to send get requests\n\n`requests` is a pyhton http library, please refer to the [official documentation](https://requests.readthedocs.io/en/latest/) for details.\n\n```python\nimport requests\n\n# Information on crawling websites\nurl = \"https://www.baidu.com/\"\n\n# Send request\nresp = requests.get(url)\n\n# Setting the character set\nresp.encoding = 'utf-8'\n# print(resp.text)\n\n# Write the page source code to a file\nwith open(\"myblog.html\", mode=\"w\", encoding='utf-8') as f:\n    f.write(resp.text)\nprint('over!!!')\n```\n\nIn this code, we first use the `requests.get` method to try to get the website in the `url`, after getting it, we have to set the character set, otherwise the information will be garbled, generally Chinese websites commonly used in the `uft-8`, we can also check the source code of the website to get the corresponding character set\n\n```html\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\"/>\n```\n\nIt is easy to find the appropriate character set to use in the `<head>`.\n\nNext, you can `print(resp.text)` to see the source code of the page we got, or you can write the source code to a file.\n\n# Sending a post request using requests\n\n```python\nimport requests\n\nurl = \"https://fanyi.baidu.com/sug\"\n\ndata = {\n    \"kw\": input(\"Please enter a word you would like to search for:\")\n}\nresp = requests.post(url, data = data)\n\n# print(resp.text)\nprint(resp.json())\n```\n\nNote: Currently Baidu Translate is encrypted and can't find the `sug` in `Network`, but the code still works!\n\nGo to the Baidu Translate website, open `Network`, type in \"hello\" to translate, we will find a POST request `sug`, go to `Payload` and observe the parameters of the `sug` request, you can see that we entered the cat.\n\n```\n   kw: 'cat'\n```\n\nGo to `Preview` and observe the result of the request, you can find that it is a data returned in json format, which contains the result of the translation.\n\nAt this point, we can use the format of the data parameter carried by the POST request to achieve the translation function.\n\nIf the returned data is in json, you can directly resp.json().\n\n# re module\n\n```python\nimport re\n\n# Findall gets the list.\n#result = re.findall(r\"\\d+\", \"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\n# search returns only the first result\n#result = re.search(r\"\\d+\", \"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\n# Putting all the results in an iterator\nresult = re.finditer(r\"\\d+\", \"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\nprint(result)\n\nfor item in result:\n    print(item.group()) # To get the data from the Match object, you need group()\n```\n\n```python\n# 预加载\nobj = re.compile(r\"\\d+\")\n\nresult = obj.finditer(\"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\nfor item in result:\n     print(item.group())\n```\n\nThe re module requires [regular expressions](https://en.wikipedia.org/wiki/Regular_expression).\n\n# Xpath parsing\n\n```python\nfrom lxml import etree\n\n# from lxml import html\n# etree = html.etree\n\n# Need to load data ready for parsing\nf = open(\"1.html\", mode = \"r\", encoding = 'utf-8')\npageSource = f.read()\n\n# Load data, return node object\net = etree.HTML(pageSource)\n\n# print(result)\n\n# looping\nresult = et.xpath(\"/html/body/div/div/div[@class='recommend02']\")\nprint(result)\nif not result:\n    print(\"1\")\n\n# for item in result:\n#     print(item)\n```\n\nXPath can be used to search through HTML documents to extract information.\n\n__Syntax of Xpath__\n\n```python\nresult = et.xpath(\"/html\") # /html for root node\nresult = et.xpath(\"/html/body\") # The / in the middle of the expression indicates a layer of html nodes.\nresult = et.xpath(\"/html/body/span/text()\") # text() indicates that the extraction of text information in the label\nresult = et.xpath(\"/html/body/*/a/text()\") # *  Arbitrary, wildcard\nresult = et.xpath(\"/html/body/*/a/@href\") # @denotes an attribute\nresult = et.xpath(\"//a/@href\") # //Indicates an arbitrary position\nresult = et.xpath(\"//div[@class='two']/a/text()\") # [@xx=xxx] Attribute qualification\n```\n\n\n\n# Crawl Douban top250 film information\n\n```python\nimport requests\nimport re\n\nhead = {\n    # UA, server detects current network devices\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '\n                  'AppleWebKit/537.36 (KHTML, like Gecko) '\n                  'Chrome/103.0.0.0 Safari/537.36'\n}\n\nobj = re.compile(r'<div class=\"item\">.*?<span class=\"title\">(?P<name>.*?)</span>'\n                 r'.*?<br>(?P<year>.*?)&nbsp.*?<span class=\"rating_num\" '\n                 r'property=\"v:average\">(?P<score>.*?)</span>.*?'\n                 r'<span>(?P<num>.*?)person rated</span>', re.S) # re.S allows re to match to newlines\n\nfor i in range(1, 11):\n    page = (i - 1) * 25\n    url = f\"https://movie.douban.com/top250?start={page}&filter=\"\n\n    resp = requests.get(url, headers=head) \n    resp.encoding = 'utf-8'  #resp.apparent_encodering\n\n    result = obj.finditer(resp.text)\n    for item in result:\n        # dic = item.groupdict()\n        # dic['year'] = dic['year'].strip()  # Remove spaces (spaces, line breaks, tabs) at the left and right ends of the year.\n        # print(dic)\n        name = item.group(\"name\")\n        year = item.group(\"year\").strip()\n        score = item.group(\"score\")\n        num = item.group(\"num\")\n        with open(\"movie.txt\", mode=\"a\", encoding='utf-8') as f:\n            f.write(\"Film Title：\" + name + \"\\tYear of release：\" + year\n                    + \"\\tscore：\" + score + \"\\tNumber of ratings：\"+ num + \"\\n\")\nprint('over!!!')\n```\n\nincluded among these\n\n```python\nhead = {\n    # UA, server detects current network devices\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '\n                  'AppleWebKit/537.36 (KHTML, like Gecko) '\n                  'Chrome/103.0.0.0 Safari/537.36'\n}\n·\n·\n resp = requests.get(url, headers=head) \n```\n\nTo deal with a small counter-crawl, the crawler was disguised with network devices.\n\n","source":"_posts/Getting-started-with-crawlers.md","raw":"---\ntitle: Getting started with crawlers\ndate: 2023-03-11 20:00:14\ntags: crawlers\n\n---\n\n# Use requests to send get requests\n\n`requests` is a pyhton http library, please refer to the [official documentation](https://requests.readthedocs.io/en/latest/) for details.\n\n```python\nimport requests\n\n# Information on crawling websites\nurl = \"https://www.baidu.com/\"\n\n# Send request\nresp = requests.get(url)\n\n# Setting the character set\nresp.encoding = 'utf-8'\n# print(resp.text)\n\n# Write the page source code to a file\nwith open(\"myblog.html\", mode=\"w\", encoding='utf-8') as f:\n    f.write(resp.text)\nprint('over!!!')\n```\n\nIn this code, we first use the `requests.get` method to try to get the website in the `url`, after getting it, we have to set the character set, otherwise the information will be garbled, generally Chinese websites commonly used in the `uft-8`, we can also check the source code of the website to get the corresponding character set\n\n```html\n<html lang=\"zh-cn\">\n<head>\n    <meta charset=\"utf-8\"/>\n```\n\nIt is easy to find the appropriate character set to use in the `<head>`.\n\nNext, you can `print(resp.text)` to see the source code of the page we got, or you can write the source code to a file.\n\n# Sending a post request using requests\n\n```python\nimport requests\n\nurl = \"https://fanyi.baidu.com/sug\"\n\ndata = {\n    \"kw\": input(\"Please enter a word you would like to search for:\")\n}\nresp = requests.post(url, data = data)\n\n# print(resp.text)\nprint(resp.json())\n```\n\nNote: Currently Baidu Translate is encrypted and can't find the `sug` in `Network`, but the code still works!\n\nGo to the Baidu Translate website, open `Network`, type in \"hello\" to translate, we will find a POST request `sug`, go to `Payload` and observe the parameters of the `sug` request, you can see that we entered the cat.\n\n```\n   kw: 'cat'\n```\n\nGo to `Preview` and observe the result of the request, you can find that it is a data returned in json format, which contains the result of the translation.\n\nAt this point, we can use the format of the data parameter carried by the POST request to achieve the translation function.\n\nIf the returned data is in json, you can directly resp.json().\n\n# re module\n\n```python\nimport re\n\n# Findall gets the list.\n#result = re.findall(r\"\\d+\", \"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\n# search returns only the first result\n#result = re.search(r\"\\d+\", \"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\n# Putting all the results in an iterator\nresult = re.finditer(r\"\\d+\", \"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\nprint(result)\n\nfor item in result:\n    print(item.group()) # To get the data from the Match object, you need group()\n```\n\n```python\n# 预加载\nobj = re.compile(r\"\\d+\")\n\nresult = obj.finditer(\"Mobile customer service number is 10086, Unicom customer service number is 10010\")\n\nfor item in result:\n     print(item.group())\n```\n\nThe re module requires [regular expressions](https://en.wikipedia.org/wiki/Regular_expression).\n\n# Xpath parsing\n\n```python\nfrom lxml import etree\n\n# from lxml import html\n# etree = html.etree\n\n# Need to load data ready for parsing\nf = open(\"1.html\", mode = \"r\", encoding = 'utf-8')\npageSource = f.read()\n\n# Load data, return node object\net = etree.HTML(pageSource)\n\n# print(result)\n\n# looping\nresult = et.xpath(\"/html/body/div/div/div[@class='recommend02']\")\nprint(result)\nif not result:\n    print(\"1\")\n\n# for item in result:\n#     print(item)\n```\n\nXPath can be used to search through HTML documents to extract information.\n\n__Syntax of Xpath__\n\n```python\nresult = et.xpath(\"/html\") # /html for root node\nresult = et.xpath(\"/html/body\") # The / in the middle of the expression indicates a layer of html nodes.\nresult = et.xpath(\"/html/body/span/text()\") # text() indicates that the extraction of text information in the label\nresult = et.xpath(\"/html/body/*/a/text()\") # *  Arbitrary, wildcard\nresult = et.xpath(\"/html/body/*/a/@href\") # @denotes an attribute\nresult = et.xpath(\"//a/@href\") # //Indicates an arbitrary position\nresult = et.xpath(\"//div[@class='two']/a/text()\") # [@xx=xxx] Attribute qualification\n```\n\n\n\n# Crawl Douban top250 film information\n\n```python\nimport requests\nimport re\n\nhead = {\n    # UA, server detects current network devices\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '\n                  'AppleWebKit/537.36 (KHTML, like Gecko) '\n                  'Chrome/103.0.0.0 Safari/537.36'\n}\n\nobj = re.compile(r'<div class=\"item\">.*?<span class=\"title\">(?P<name>.*?)</span>'\n                 r'.*?<br>(?P<year>.*?)&nbsp.*?<span class=\"rating_num\" '\n                 r'property=\"v:average\">(?P<score>.*?)</span>.*?'\n                 r'<span>(?P<num>.*?)person rated</span>', re.S) # re.S allows re to match to newlines\n\nfor i in range(1, 11):\n    page = (i - 1) * 25\n    url = f\"https://movie.douban.com/top250?start={page}&filter=\"\n\n    resp = requests.get(url, headers=head) \n    resp.encoding = 'utf-8'  #resp.apparent_encodering\n\n    result = obj.finditer(resp.text)\n    for item in result:\n        # dic = item.groupdict()\n        # dic['year'] = dic['year'].strip()  # Remove spaces (spaces, line breaks, tabs) at the left and right ends of the year.\n        # print(dic)\n        name = item.group(\"name\")\n        year = item.group(\"year\").strip()\n        score = item.group(\"score\")\n        num = item.group(\"num\")\n        with open(\"movie.txt\", mode=\"a\", encoding='utf-8') as f:\n            f.write(\"Film Title：\" + name + \"\\tYear of release：\" + year\n                    + \"\\tscore：\" + score + \"\\tNumber of ratings：\"+ num + \"\\n\")\nprint('over!!!')\n```\n\nincluded among these\n\n```python\nhead = {\n    # UA, server detects current network devices\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '\n                  'AppleWebKit/537.36 (KHTML, like Gecko) '\n                  'Chrome/103.0.0.0 Safari/537.36'\n}\n·\n·\n resp = requests.get(url, headers=head) \n```\n\nTo deal with a small counter-crawl, the crawler was disguised with network devices.\n\n","slug":"Getting-started-with-crawlers","published":1,"updated":"2024-09-10T04:56:27.194Z","comments":1,"layout":"post","photos":[],"_id":"cmaj5a7bc0006a8uo25ck9us5","content":"<h1 id=\"Use-requests-to-send-get-requests\"><a href=\"#Use-requests-to-send-get-requests\" class=\"headerlink\" title=\"Use requests to send get requests\"></a>Use requests to send get requests</h1><p><code>requests</code> is a pyhton http library, please refer to the <a href=\"https://requests.readthedocs.io/en/latest/\">official documentation</a> for details.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br><span class=\"hljs-comment\"># Information on crawling websites</span><br>url = <span class=\"hljs-string\">&quot;https://www.baidu.com/&quot;</span><br><br><span class=\"hljs-comment\"># Send request</span><br>resp = requests.get(url)<br><br><span class=\"hljs-comment\"># Setting the character set</span><br>resp.encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span><br><span class=\"hljs-comment\"># print(resp.text)</span><br><br><span class=\"hljs-comment\"># Write the page source code to a file</span><br><span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;myblog.html&quot;</span>, mode=<span class=\"hljs-string\">&quot;w&quot;</span>, encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:<br>    f.write(resp.text)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>In this code, we first use the <code>requests.get</code> method to try to get the website in the <code>url</code>, after getting it, we have to set the character set, otherwise the information will be garbled, generally Chinese websites commonly used in the <code>uft-8</code>, we can also check the source code of the website to get the corresponding character set</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;zh-cn&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;utf-8&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>It is easy to find the appropriate character set to use in the <code>&lt;head&gt;</code>.</p>\n<p>Next, you can <code>print(resp.text)</code> to see the source code of the page we got, or you can write the source code to a file.</p>\n<h1 id=\"Sending-a-post-request-using-requests\"><a href=\"#Sending-a-post-request-using-requests\" class=\"headerlink\" title=\"Sending a post request using requests\"></a>Sending a post request using requests</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br>url = <span class=\"hljs-string\">&quot;https://fanyi.baidu.com/sug&quot;</span><br><br>data = &#123;<br>    <span class=\"hljs-string\">&quot;kw&quot;</span>: <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Please enter a word you would like to search for:&quot;</span>)<br>&#125;<br>resp = requests.post(url, data = data)<br><br><span class=\"hljs-comment\"># print(resp.text)</span><br><span class=\"hljs-built_in\">print</span>(resp.json())<br></code></pre></td></tr></table></figure>\n\n<p>Note: Currently Baidu Translate is encrypted and can’t find the <code>sug</code> in <code>Network</code>, but the code still works!</p>\n<p>Go to the Baidu Translate website, open <code>Network</code>, type in “hello” to translate, we will find a POST request <code>sug</code>, go to <code>Payload</code> and observe the parameters of the <code>sug</code> request, you can see that we entered the cat.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vbnet\"><span class=\"hljs-symbol\">kw:</span> <span class=\"hljs-comment\">&#x27;cat&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<p>Go to <code>Preview</code> and observe the result of the request, you can find that it is a data returned in json format, which contains the result of the translation.</p>\n<p>At this point, we can use the format of the data parameter carried by the POST request to achieve the translation function.</p>\n<p>If the returned data is in json, you can directly resp.json().</p>\n<h1 id=\"re-module\"><a href=\"#re-module\" class=\"headerlink\" title=\"re module\"></a>re module</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> re<br><br><span class=\"hljs-comment\"># Findall gets the list.</span><br><span class=\"hljs-comment\">#result = re.findall(r&quot;\\d+&quot;, &quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;)</span><br><br><span class=\"hljs-comment\"># search returns only the first result</span><br><span class=\"hljs-comment\">#result = re.search(r&quot;\\d+&quot;, &quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;)</span><br><br><span class=\"hljs-comment\"># Putting all the results in an iterator</span><br>result = re.finditer(<span class=\"hljs-string\">r&quot;\\d+&quot;</span>, <span class=\"hljs-string\">&quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;</span>)<br><br><span class=\"hljs-built_in\">print</span>(result)<br><br><span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> result:<br>    <span class=\"hljs-built_in\">print</span>(item.group()) <span class=\"hljs-comment\"># To get the data from the Match object, you need group()</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># 预加载</span><br>obj = re.<span class=\"hljs-built_in\">compile</span>(<span class=\"hljs-string\">r&quot;\\d+&quot;</span>)<br><br>result = obj.finditer(<span class=\"hljs-string\">&quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;</span>)<br><br><span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> result:<br>     <span class=\"hljs-built_in\">print</span>(item.group())<br></code></pre></td></tr></table></figure>\n\n<p>The re module requires <a href=\"https://en.wikipedia.org/wiki/Regular_expression\">regular expressions</a>.</p>\n<h1 id=\"Xpath-parsing\"><a href=\"#Xpath-parsing\" class=\"headerlink\" title=\"Xpath parsing\"></a>Xpath parsing</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> lxml <span class=\"hljs-keyword\">import</span> etree<br><br><span class=\"hljs-comment\"># from lxml import html</span><br><span class=\"hljs-comment\"># etree = html.etree</span><br><br><span class=\"hljs-comment\"># Need to load data ready for parsing</span><br>f = <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;1.html&quot;</span>, mode = <span class=\"hljs-string\">&quot;r&quot;</span>, encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span>)<br>pageSource = f.read()<br><br><span class=\"hljs-comment\"># Load data, return node object</span><br>et = etree.HTML(pageSource)<br><br><span class=\"hljs-comment\"># print(result)</span><br><br><span class=\"hljs-comment\"># looping</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/div/div/div[@class=&#x27;recommend02&#x27;]&quot;</span>)<br><span class=\"hljs-built_in\">print</span>(result)<br><span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> result:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;1&quot;</span>)<br><br><span class=\"hljs-comment\"># for item in result:</span><br><span class=\"hljs-comment\">#     print(item)</span><br></code></pre></td></tr></table></figure>\n\n<p>XPath can be used to search through HTML documents to extract information.</p>\n<p><strong>Syntax of Xpath</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">result = et.xpath(<span class=\"hljs-string\">&quot;/html&quot;</span>) <span class=\"hljs-comment\"># /html for root node</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body&quot;</span>) <span class=\"hljs-comment\"># The / in the middle of the expression indicates a layer of html nodes.</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/span/text()&quot;</span>) <span class=\"hljs-comment\"># text() indicates that the extraction of text information in the label</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/*/a/text()&quot;</span>) <span class=\"hljs-comment\"># *  Arbitrary, wildcard</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/*/a/@href&quot;</span>) <span class=\"hljs-comment\"># @denotes an attribute</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;//a/@href&quot;</span>) <span class=\"hljs-comment\"># //Indicates an arbitrary position</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;//div[@class=&#x27;two&#x27;]/a/text()&quot;</span>) <span class=\"hljs-comment\"># [@xx=xxx] Attribute qualification</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Crawl-Douban-top250-film-information\"><a href=\"#Crawl-Douban-top250-film-information\" class=\"headerlink\" title=\"Crawl Douban top250 film information\"></a>Crawl Douban top250 film information</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> re<br><br>head = &#123;<br>    <span class=\"hljs-comment\"># UA, server detects current network devices</span><br>    <span class=\"hljs-string\">&#x27;User-Agent&#x27;</span>: <span class=\"hljs-string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;Chrome/103.0.0.0 Safari/537.36&#x27;</span><br>&#125;<br><br>obj = re.<span class=\"hljs-built_in\">compile</span>(<span class=\"hljs-string\">r&#x27;&lt;div class=&quot;item&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;&#x27;</span><br>                 <span class=\"hljs-string\">r&#x27;.*?&lt;br&gt;(?P&lt;year&gt;.*?)&amp;nbsp.*?&lt;span class=&quot;rating_num&quot; &#x27;</span><br>                 <span class=\"hljs-string\">r&#x27;property=&quot;v:average&quot;&gt;(?P&lt;score&gt;.*?)&lt;/span&gt;.*?&#x27;</span><br>                 <span class=\"hljs-string\">r&#x27;&lt;span&gt;(?P&lt;num&gt;.*?)person rated&lt;/span&gt;&#x27;</span>, re.S) <span class=\"hljs-comment\"># re.S allows re to match to newlines</span><br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">11</span>):<br>    page = (i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">25</span><br>    url = <span class=\"hljs-string\">f&quot;https://movie.douban.com/top250?start=<span class=\"hljs-subst\">&#123;page&#125;</span>&amp;filter=&quot;</span><br><br>    resp = requests.get(url, headers=head) <br>    resp.encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span>  <span class=\"hljs-comment\">#resp.apparent_encodering</span><br><br>    result = obj.finditer(resp.text)<br>    <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> result:<br>        <span class=\"hljs-comment\"># dic = item.groupdict()</span><br>        <span class=\"hljs-comment\"># dic[&#x27;year&#x27;] = dic[&#x27;year&#x27;].strip()  # Remove spaces (spaces, line breaks, tabs) at the left and right ends of the year.</span><br>        <span class=\"hljs-comment\"># print(dic)</span><br>        name = item.group(<span class=\"hljs-string\">&quot;name&quot;</span>)<br>        year = item.group(<span class=\"hljs-string\">&quot;year&quot;</span>).strip()<br>        score = item.group(<span class=\"hljs-string\">&quot;score&quot;</span>)<br>        num = item.group(<span class=\"hljs-string\">&quot;num&quot;</span>)<br>        <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;movie.txt&quot;</span>, mode=<span class=\"hljs-string\">&quot;a&quot;</span>, encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:<br>            f.write(<span class=\"hljs-string\">&quot;Film Title：&quot;</span> + name + <span class=\"hljs-string\">&quot;\\tYear of release：&quot;</span> + year<br>                    + <span class=\"hljs-string\">&quot;\\tscore：&quot;</span> + score + <span class=\"hljs-string\">&quot;\\tNumber of ratings：&quot;</span>+ num + <span class=\"hljs-string\">&quot;\\n&quot;</span>)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>included among these</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">head = &#123;<br>    <span class=\"hljs-comment\"># UA, server detects current network devices</span><br>    <span class=\"hljs-string\">&#x27;User-Agent&#x27;</span>: <span class=\"hljs-string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;Chrome/103.0.0.0 Safari/537.36&#x27;</span><br>&#125;<br>·<br>·<br> resp = requests.get(url, headers=head) <br></code></pre></td></tr></table></figure>\n\n<p>To deal with a small counter-crawl, the crawler was disguised with network devices.</p>\n","wordcount":5578,"excerpt":"","more":"<h1 id=\"Use-requests-to-send-get-requests\"><a href=\"#Use-requests-to-send-get-requests\" class=\"headerlink\" title=\"Use requests to send get requests\"></a>Use requests to send get requests</h1><p><code>requests</code> is a pyhton http library, please refer to the <a href=\"https://requests.readthedocs.io/en/latest/\">official documentation</a> for details.</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br><span class=\"hljs-comment\"># Information on crawling websites</span><br>url = <span class=\"hljs-string\">&quot;https://www.baidu.com/&quot;</span><br><br><span class=\"hljs-comment\"># Send request</span><br>resp = requests.get(url)<br><br><span class=\"hljs-comment\"># Setting the character set</span><br>resp.encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span><br><span class=\"hljs-comment\"># print(resp.text)</span><br><br><span class=\"hljs-comment\"># Write the page source code to a file</span><br><span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;myblog.html&quot;</span>, mode=<span class=\"hljs-string\">&quot;w&quot;</span>, encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:<br>    f.write(resp.text)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>In this code, we first use the <code>requests.get</code> method to try to get the website in the <code>url</code>, after getting it, we have to set the character set, otherwise the information will be garbled, generally Chinese websites commonly used in the <code>uft-8</code>, we can also check the source code of the website to get the corresponding character set</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span> <span class=\"hljs-attr\">lang</span>=<span class=\"hljs-string\">&quot;zh-cn&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;utf-8&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>It is easy to find the appropriate character set to use in the <code>&lt;head&gt;</code>.</p>\n<p>Next, you can <code>print(resp.text)</code> to see the source code of the page we got, or you can write the source code to a file.</p>\n<h1 id=\"Sending-a-post-request-using-requests\"><a href=\"#Sending-a-post-request-using-requests\" class=\"headerlink\" title=\"Sending a post request using requests\"></a>Sending a post request using requests</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><br>url = <span class=\"hljs-string\">&quot;https://fanyi.baidu.com/sug&quot;</span><br><br>data = &#123;<br>    <span class=\"hljs-string\">&quot;kw&quot;</span>: <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">&quot;Please enter a word you would like to search for:&quot;</span>)<br>&#125;<br>resp = requests.post(url, data = data)<br><br><span class=\"hljs-comment\"># print(resp.text)</span><br><span class=\"hljs-built_in\">print</span>(resp.json())<br></code></pre></td></tr></table></figure>\n\n<p>Note: Currently Baidu Translate is encrypted and can’t find the <code>sug</code> in <code>Network</code>, but the code still works!</p>\n<p>Go to the Baidu Translate website, open <code>Network</code>, type in “hello” to translate, we will find a POST request <code>sug</code>, go to <code>Payload</code> and observe the parameters of the <code>sug</code> request, you can see that we entered the cat.</p>\n<figure class=\"highlight vbnet\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs vbnet\"><span class=\"hljs-symbol\">kw:</span> <span class=\"hljs-comment\">&#x27;cat&#x27;</span><br></code></pre></td></tr></table></figure>\n\n<p>Go to <code>Preview</code> and observe the result of the request, you can find that it is a data returned in json format, which contains the result of the translation.</p>\n<p>At this point, we can use the format of the data parameter carried by the POST request to achieve the translation function.</p>\n<p>If the returned data is in json, you can directly resp.json().</p>\n<h1 id=\"re-module\"><a href=\"#re-module\" class=\"headerlink\" title=\"re module\"></a>re module</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> re<br><br><span class=\"hljs-comment\"># Findall gets the list.</span><br><span class=\"hljs-comment\">#result = re.findall(r&quot;\\d+&quot;, &quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;)</span><br><br><span class=\"hljs-comment\"># search returns only the first result</span><br><span class=\"hljs-comment\">#result = re.search(r&quot;\\d+&quot;, &quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;)</span><br><br><span class=\"hljs-comment\"># Putting all the results in an iterator</span><br>result = re.finditer(<span class=\"hljs-string\">r&quot;\\d+&quot;</span>, <span class=\"hljs-string\">&quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;</span>)<br><br><span class=\"hljs-built_in\">print</span>(result)<br><br><span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> result:<br>    <span class=\"hljs-built_in\">print</span>(item.group()) <span class=\"hljs-comment\"># To get the data from the Match object, you need group()</span><br></code></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-comment\"># 预加载</span><br>obj = re.<span class=\"hljs-built_in\">compile</span>(<span class=\"hljs-string\">r&quot;\\d+&quot;</span>)<br><br>result = obj.finditer(<span class=\"hljs-string\">&quot;Mobile customer service number is 10086, Unicom customer service number is 10010&quot;</span>)<br><br><span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> result:<br>     <span class=\"hljs-built_in\">print</span>(item.group())<br></code></pre></td></tr></table></figure>\n\n<p>The re module requires <a href=\"https://en.wikipedia.org/wiki/Regular_expression\">regular expressions</a>.</p>\n<h1 id=\"Xpath-parsing\"><a href=\"#Xpath-parsing\" class=\"headerlink\" title=\"Xpath parsing\"></a>Xpath parsing</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">from</span> lxml <span class=\"hljs-keyword\">import</span> etree<br><br><span class=\"hljs-comment\"># from lxml import html</span><br><span class=\"hljs-comment\"># etree = html.etree</span><br><br><span class=\"hljs-comment\"># Need to load data ready for parsing</span><br>f = <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;1.html&quot;</span>, mode = <span class=\"hljs-string\">&quot;r&quot;</span>, encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span>)<br>pageSource = f.read()<br><br><span class=\"hljs-comment\"># Load data, return node object</span><br>et = etree.HTML(pageSource)<br><br><span class=\"hljs-comment\"># print(result)</span><br><br><span class=\"hljs-comment\"># looping</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/div/div/div[@class=&#x27;recommend02&#x27;]&quot;</span>)<br><span class=\"hljs-built_in\">print</span>(result)<br><span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> result:<br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&quot;1&quot;</span>)<br><br><span class=\"hljs-comment\"># for item in result:</span><br><span class=\"hljs-comment\">#     print(item)</span><br></code></pre></td></tr></table></figure>\n\n<p>XPath can be used to search through HTML documents to extract information.</p>\n<p><strong>Syntax of Xpath</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">result = et.xpath(<span class=\"hljs-string\">&quot;/html&quot;</span>) <span class=\"hljs-comment\"># /html for root node</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body&quot;</span>) <span class=\"hljs-comment\"># The / in the middle of the expression indicates a layer of html nodes.</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/span/text()&quot;</span>) <span class=\"hljs-comment\"># text() indicates that the extraction of text information in the label</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/*/a/text()&quot;</span>) <span class=\"hljs-comment\"># *  Arbitrary, wildcard</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;/html/body/*/a/@href&quot;</span>) <span class=\"hljs-comment\"># @denotes an attribute</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;//a/@href&quot;</span>) <span class=\"hljs-comment\"># //Indicates an arbitrary position</span><br>result = et.xpath(<span class=\"hljs-string\">&quot;//div[@class=&#x27;two&#x27;]/a/text()&quot;</span>) <span class=\"hljs-comment\"># [@xx=xxx] Attribute qualification</span><br></code></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Crawl-Douban-top250-film-information\"><a href=\"#Crawl-Douban-top250-film-information\" class=\"headerlink\" title=\"Crawl Douban top250 film information\"></a>Crawl Douban top250 film information</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> re<br><br>head = &#123;<br>    <span class=\"hljs-comment\"># UA, server detects current network devices</span><br>    <span class=\"hljs-string\">&#x27;User-Agent&#x27;</span>: <span class=\"hljs-string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;Chrome/103.0.0.0 Safari/537.36&#x27;</span><br>&#125;<br><br>obj = re.<span class=\"hljs-built_in\">compile</span>(<span class=\"hljs-string\">r&#x27;&lt;div class=&quot;item&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;&#x27;</span><br>                 <span class=\"hljs-string\">r&#x27;.*?&lt;br&gt;(?P&lt;year&gt;.*?)&amp;nbsp.*?&lt;span class=&quot;rating_num&quot; &#x27;</span><br>                 <span class=\"hljs-string\">r&#x27;property=&quot;v:average&quot;&gt;(?P&lt;score&gt;.*?)&lt;/span&gt;.*?&#x27;</span><br>                 <span class=\"hljs-string\">r&#x27;&lt;span&gt;(?P&lt;num&gt;.*?)person rated&lt;/span&gt;&#x27;</span>, re.S) <span class=\"hljs-comment\"># re.S allows re to match to newlines</span><br><br><span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> <span class=\"hljs-built_in\">range</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">11</span>):<br>    page = (i - <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">25</span><br>    url = <span class=\"hljs-string\">f&quot;https://movie.douban.com/top250?start=<span class=\"hljs-subst\">&#123;page&#125;</span>&amp;filter=&quot;</span><br><br>    resp = requests.get(url, headers=head) <br>    resp.encoding = <span class=\"hljs-string\">&#x27;utf-8&#x27;</span>  <span class=\"hljs-comment\">#resp.apparent_encodering</span><br><br>    result = obj.finditer(resp.text)<br>    <span class=\"hljs-keyword\">for</span> item <span class=\"hljs-keyword\">in</span> result:<br>        <span class=\"hljs-comment\"># dic = item.groupdict()</span><br>        <span class=\"hljs-comment\"># dic[&#x27;year&#x27;] = dic[&#x27;year&#x27;].strip()  # Remove spaces (spaces, line breaks, tabs) at the left and right ends of the year.</span><br>        <span class=\"hljs-comment\"># print(dic)</span><br>        name = item.group(<span class=\"hljs-string\">&quot;name&quot;</span>)<br>        year = item.group(<span class=\"hljs-string\">&quot;year&quot;</span>).strip()<br>        score = item.group(<span class=\"hljs-string\">&quot;score&quot;</span>)<br>        num = item.group(<span class=\"hljs-string\">&quot;num&quot;</span>)<br>        <span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">&quot;movie.txt&quot;</span>, mode=<span class=\"hljs-string\">&quot;a&quot;</span>, encoding=<span class=\"hljs-string\">&#x27;utf-8&#x27;</span>) <span class=\"hljs-keyword\">as</span> f:<br>            f.write(<span class=\"hljs-string\">&quot;Film Title：&quot;</span> + name + <span class=\"hljs-string\">&quot;\\tYear of release：&quot;</span> + year<br>                    + <span class=\"hljs-string\">&quot;\\tscore：&quot;</span> + score + <span class=\"hljs-string\">&quot;\\tNumber of ratings：&quot;</span>+ num + <span class=\"hljs-string\">&quot;\\n&quot;</span>)<br><span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">&#x27;over!!!&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p>included among these</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs python\">head = &#123;<br>    <span class=\"hljs-comment\"># UA, server detects current network devices</span><br>    <span class=\"hljs-string\">&#x27;User-Agent&#x27;</span>: <span class=\"hljs-string\">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br>                  <span class=\"hljs-string\">&#x27;Chrome/103.0.0.0 Safari/537.36&#x27;</span><br>&#125;<br>·<br>·<br> resp = requests.get(url, headers=head) <br></code></pre></td></tr></table></figure>\n\n<p>To deal with a small counter-crawl, the crawler was disguised with network devices.</p>\n"},{"title":"Hexo-Fluid搭建与魔改纪录","date":"2023-02-24T13:53:46.000Z","_content":"\n## 前言\n\n去年腾讯云服务器过期了，想着采用Hexo + GitHub Pages搭建一个新的博客，主题使用[Fluid](https://github.com/fluid-dev/hexo-theme-fluid)。\n\n~~今年~~~~感觉以前搭建的未免有点过于花哨~~~~又想折腾了，于是使用[Cactus](https://github.com/probberechts/hexo-theme-cactus)重新搭建了一遍。~~\n\n今年又改回来了\\\\(￣︶￣*\\))\n\n这里记录一下自己去年使用Fluid搭建与魔改（照搬他人）blog的步骤，日后查找起来也方便。\n\n## 搭建blog\n\n### 准备工作\n\n(1)需要有一个GitHub账号，没有可以去[官网](https://github.com/)注册一个\n\n(2)电脑安装`Git`，安装及使用教程参考[Git教程](https://www.liaoxuefeng.com/wiki/896043488029600)\n\n(3)由于`Hexo`是基于`Node.js`编写的，故电脑还需要安装`Node.js`，可以去[官网](https://nodejs.org/en/download/)进行下载\n\n### 创建代码仓库\n\n进入[`GitHub`官网](https://github.com/),创建一个新的代码仓库，仓库名格式必须为`<用户名>.github.io`。\n\n### 安装Hexo\n\n__安装 `Hexo`__\n\n```\nnpm install -g hexo-cli\n```\n\n__创建一个项目 `hexo-blog` 并初始化__\n\n```\nhexo init hexo-blog\ncd hexo-blog\nnpm install\n```\n\n__本地启动__\n\n```\nhexo g\nhexo s\n```\n\n此时我们打开浏览器访问`http://localhost:4000`即可进入默认风格网站\n\n### 更换主题\n\n我们可以通过[Hexo官网](https://hexo.io/themes/)获取自己喜欢的主题，这里以我使用的`Fluid`为例\n\n__安装主题__\n\n```\ncd hexo-blog\ngit clone https://github.com/fluid-dev/hexo-theme-fluid.git themes/Fluid\n```\n\n打开`hexo-blog`目录下的`_config.yml `文件，对主题进行配置\n\n```\ntheme: fluid\nlanguage: zh-CN\n```\n\n### 创建「关于页」\n\n首次使用主题的「关于页」需要手动创建：\n\n```\nhexo new page about\n```\n\n创建成功后，编辑博客目录下 `/source/about/index.md`，添加 `layout` 属性。\n\n修改后的文件格式：\n\n```\n---\ntitle: about\ndate: \nlayout: about\n---\n正文\n```\n\n此时我们输入指令\n\n```\nhexo clean\nhexo g\nhexo s\n```\n\n此时再去访问`http://localhost:4000`,我们的`Fluid`主题blog就搭建好了\n\n### 创建文章\n\n打开`hexo-blog`目录下的`_config.yml `文件，对文章进行配置\n\n```\npost_asset_folder: true\n```\n\n执行如下命令创建一篇新文章\n\n```\nhexo n test\n```\n\n执行完成后打开`source\\_posts`目录可以看到生成的`test.md`和`test文件夹`打开`test.md`即可对文章进行编辑\n\n图片的插入可以参考[官方文档](https://hexo.io/zh-cn/docs/asset-folders.html)，也可以使用图床，支持Markdown, HTML\n\n### Fluid配置\n\n参考[Hexo Fluid官方文档](https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97)\n\n## 上传至GitHub Pages\n\n__安装`hexo-deployer-git`__\n\n```\nnpm install hexo-deployer-git --save\n```\n\n打开`hexo-blog`目录下的`_config.yml `文件，进行配置\n\n```\ndeploy:\n  type: git\n  repo: 你的GitHub仓库地址\n  branch: main\n  token: 你的Personal access tokens\n\n```\n\n输入指令\n\n```\nhexo g\nhexo d\n```\n\n此时blog完成上传GitHub Pages，浏览器访问 https://<用户名>.github.io，部署成功\n\n## 绑定域名\n\n### 购买域名\n\n寻找合适的域名交易平台购买域名\n\n### 域名解析\n\n我是在`Namesilo`购买的域名，所以在这里以`Namesilo`为例\n\n登陆后找到`Active Domains`，点击`Manage`,找到自己购买的域名，在`Options`中点击`Manage DNS for this domain` ，将原有的记录全部删除，添加两个新记录\n\n{% asset_img 2.png  %}\n\n（这里的记录值填自己blog的ip地址，不清楚可以去ping一下）\n\n在博客目录 `/source`下创建一个名为`CNAME`的文件，在文件内写入你的域名（不要加`https://`和`www.`）\n\n输入指令\n\n```\nhexo g\nhexo d\n```\n\n### Github解析\n\n在Github的xxx.github.io项目,进入`Settings`,在`Pages`下的`Custom domain`功能中,将刚刚申请的域名写进去。\n\n{% asset_img 1.png  %}\n\n设置好后，等待一段时间后，就可以通过域名访问blog了\n\n## Fluid魔改\n\n### 字体样式修改\n\n修改字体样式直接引入css文件和字体包即可。\n\n首先寻找自己喜欢的字体，这里推荐几个网站：[第一字体网](http://www.diyiziti.com/)，[字体天下](https://www.fonts.net.cn/)，[字体家](https://www.zitijia.com/)\n\n将需要使用的字体文件放入博客目录`themes\\fluid\\source\\css`下\n\n如有有css文件，就在最下面继续写；如果没有，则新建一个css文件，文件名任取\n\n```css\n@font-face{\n  font-family: 'ziti' ;  /* 自定义字体名称 */\n  src: url('ziti.ttf'); /* 引入字体文件的路径 */\n}\n/*应用在body体里，放在第一个，font-family会按顺序使用字体族。如果第一个没找到就会找第二个，以此类推。*/\nbody {\nfont-family: ziti,-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Helvetica Neue\", Lato, Roboto, \"PingFang SC\", \"STZhongsong\", \"Lantinghei SC\", sans-serif\n}\n```\n\n### 鼠标样式修改\n\n在css文件添加下方代码，然后引入即可。\n\n```css\n/*指针样式*/\nbody {\n    cursor: url(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),\n        default;\n}\n/*链接小手样式*/\na,\nimg {\n    cursor: url(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),\n        default;\n}\n```\n\n### 网站运行时间\n\n打开`\\themes\\fluid`下的`_config.yml`，在主题配置中的 `footer: content` 添加：\n\n```html\nfooter:\n  content: '\n\t\t <a href=\"https://hexo.io\" target=\"_blank\" rel=\"nofollow noopener\"><span>Hexo</span></a>\n    <i class=\"iconfont icon-love\"></i>\n    <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\" target=\"_blank\" rel=\"nofollow noopener\"><span>Fluid</span></a>\n    <div style=\"font-size: 0.85rem\">\n      <span id=\"timeDate\">载入天数...</span>\n      <span id=\"times\">载入时分秒...</span>\n      <script src=\"/js/duration.js\"></script>\n    </div>  '\n```\n\n在`\\themes\\fluid\\source\\js`目录下创建 `duration.js`,内容如下:\n\n```javascript\n!(function() {\n    /** 计时起始时间，自行修改 **/\n    var start = new Date(\"2022/10/15 00:00:00\");\n  \n    function update() {\n      var now = new Date();\n      now.setTime(now.getTime()+250);\n      days = (now - start) / 1000 / 60 / 60 / 24;\n      dnum = Math.floor(days);\n      hours = (now - start) / 1000 / 60 / 60 - (24 * dnum);\n      hnum = Math.floor(hours);\n      if(String(hnum).length === 1 ){\n        hnum = \"0\" + hnum;\n      }\n      minutes = (now - start) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);\n      mnum = Math.floor(minutes);\n      if(String(mnum).length === 1 ){\n        mnum = \"0\" + mnum;\n      }\n      seconds = (now - start) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);\n      snum = Math.round(seconds);\n      if(String(snum).length === 1 ){\n        snum = \"0\" + snum;\n      }\n      document.getElementById(\"timeDate\").innerHTML = \"本站居然运行了&nbsp\"+dnum+\"&nbsp天\";\n      document.getElementById(\"times\").innerHTML = hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n    }\n  \n    update();\n    setInterval(update, 1000);\n  })();\n```\n\n### 添加自定义css和js文件\n\n打开`\\themes\\fluid`下的`_config.yml`，在以下位置进行修改：\n\n```\ncustom_js: \n          - /js/duration.js\ncustom_css: \n            - /css/custom.css\n```\n\n\n\n### 看板娘\n\n__安装Live2D__\n\n在hexo-blog目录下右键打开`Git Bash Here`安装Live2D: `npm uninstall hexo-helper-live2d`\n\n__选择模型__\n\n原生模型：\n\n- Epsilon2.1\n- Gantzert_Felixander\n- haru\n- miku\n- ni-j\n- nico\n- nietzche\n- nipsilon\n- nito\n- shizuku\n- tsumiki\n- wanko\n- z16\n- hibiki\n- koharu\n- haruto\n- Unitychan\n- tororo\n- hijiki\n\n__安装模型：__\n\n在hexo文件夹根下右键打开`Git Bash Here`键入`npm install --save live2d-widget-模型名`即可。\n\n__配置__\n\n打开`hexo-blog`目录下的`_config.yml `文件，在末尾增加：\n\n```\nlive2d:\n  model:\n    scale: 1\n    hHeadPos: 0.5\n    vHeadPos: 0.618\n    use: live2d-widget-model-tororo // 下载的动画模型名称\n  display:\n    superSample: 2\n    width: 120\n    height: 200\n    position: left // 模型在网页显示位置,left为左,right为右\n    hOffset: 20\n    vOffset: 50\n  mobile:\n    show: true  // 移动设备是否显示,true则显示,false则不显示\n    scale: 0.5\n  react:\n    opacityDefault: 0.7\n    opacityOnHover: 0.2\n```\n\n接着输入命令\n\n```\nhexo clean\nhexo g\nhexo s\n```\n\n我们就可以看到可爱的看板娘出现在了我们的blog里了\n\n### 一言\n\n打开`\\themes\\fluid`下的`_config.yml`，在以下位置进行修改：\n\n```\nslogan:\n    enable: true\n    text: \"\"\n    api:\n      enable: true\n      url: \"https://v1.hitokoto.cn/\"\n      method: \"GET\"\n      headers: {}\n      keys: ['hitokoto']\n\n```\n\n### 雪花特效\n\n在`\\themes\\fluid\\source\\js`目录下`duration.js`中添加:\n\n```javascript\n/* 控制下雪 */\nfunction snowFall(snow) {\n  /* 可配置属性 */\n  snow = snow || {};\n  this.maxFlake = snow.maxFlake || 200;   /* 最多片数 */\n  this.flakeSize = snow.flakeSize || 10;  /* 雪花形状 */\n  this.fallSpeed = snow.fallSpeed || 1;   /* 坠落速度 */\n}\n/* 兼容写法 */\nrequestAnimationFrame = window.requestAnimationFrame ||\n  window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  window.msRequestAnimationFrame ||\n  window.oRequestAnimationFrame ||\n  function(callback) { setTimeout(callback, 1000 / 60); };\n\ncancelAnimationFrame = window.cancelAnimationFrame ||\n  window.mozCancelAnimationFrame ||\n  window.webkitCancelAnimationFrame ||\n  window.msCancelAnimationFrame ||\n  window.oCancelAnimationFrame;\n/* 开始下雪 */\nsnowFall.prototype.start = function(){\n  /* 创建画布 */\n  snowCanvas.apply(this);\n  /* 创建雪花形状 */\n  createFlakes.apply(this);\n  /* 画雪 */\n  drawSnow.apply(this)\n}\n/* 创建画布 */\nfunction snowCanvas() {\n  /* 添加Dom结点 */\n  var snowcanvas = document.createElement(\"canvas\");\n  snowcanvas.id = \"snowfall\";\n  snowcanvas.width = window.innerWidth;\n  snowcanvas.height = document.body.clientHeight;\n  snowcanvas.setAttribute(\"style\", \"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;\");\n  document.getElementsByTagName(\"body\")[0].appendChild(snowcanvas);\n  this.canvas = snowcanvas;\n  this.ctx = snowcanvas.getContext(\"2d\");\n  /* 窗口大小改变的处理 */\n  window.onresize = function() {\n      snowcanvas.width = window.innerWidth;\n      /* snowcanvas.height = window.innerHeight */\n  }\n}\n/* 雪运动对象 */\nfunction flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) {\n  this.x = Math.floor(Math.random() * canvasWidth);   /* x坐标 */\n  this.y = Math.floor(Math.random() * canvasHeight);  /* y坐标 */\n  this.size = Math.random() * flakeSize + 2;          /* 形状 */\n  this.maxSize = flakeSize;                           /* 最大形状 */\n  this.speed = Math.random() * 1 + fallSpeed;         /* 坠落速度 */\n  this.fallSpeed = fallSpeed;                         /* 坠落速度 */\n  this.velY = this.speed;                             /* Y方向速度 */\n  this.velX = 0;                                      /* X方向速度 */\n  this.stepSize = Math.random() / 30;                 /* 步长 */\n  this.step = 0                                       /* 步数 */\n}\nflakeMove.prototype.update = function() {\n  var x = this.x,\n      y = this.y;\n  /* 左右摆动(余弦) */\n  this.velX *= 0.98;\n  if (this.velY <= this.speed) {\n      this.velY = this.speed\n  }\n  this.velX += Math.cos(this.step += .05) * this.stepSize;\n\n  this.y += this.velY;\n  this.x += this.velX;\n  /* 飞出边界的处理 */\n  if (this.x >= canvas.width || this.x <= 0 || this.y >= canvas.height || this.y <= 0) {\n      this.reset(canvas.width, canvas.height)\n  }\n};\n/* 飞出边界-放置最顶端继续坠落 */\nflakeMove.prototype.reset = function(width, height) {\n  this.x = Math.floor(Math.random() * width);\n  this.y = 0;\n  this.size = Math.random() * this.maxSize + 2;\n  this.speed = Math.random() * 1 + this.fallSpeed;\n  this.velY = this.speed;\n  this.velX = 0;\n};\n// 渲染雪花-随机形状（此处可修改雪花颜色！！！）\nflakeMove.prototype.render = function(ctx) {\n  var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);\n  snowFlake.addColorStop(0, \"rgba(255, 255, 255, 0.9)\");  /* 此处是雪花颜色，默认是白色 */\n  snowFlake.addColorStop(.5, \"rgba(255, 255, 255, 0.5)\"); /* 若要改为其他颜色，请自行查 */\n  snowFlake.addColorStop(1, \"rgba(255, 255, 255, 0)\");    /* 找16进制的RGB 颜色代码。 */\n  ctx.save();\n  ctx.fillStyle = snowFlake;\n  ctx.beginPath();\n  ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.restore();\n};\n/* 创建雪花-定义形状 */\nfunction createFlakes() {\n  var maxFlake = this.maxFlake,\n      flakes = this.flakes = [],\n      canvas = this.canvas;\n  for (var i = 0; i < maxFlake; i++) {\n      flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))\n  }\n}\n/* 画雪 */\nfunction drawSnow() {\n  var maxFlake = this.maxFlake,\n      flakes = this.flakes;\n  ctx = this.ctx, canvas = this.canvas, that = this;\n  /* 清空雪花 */\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for (var e = 0; e < maxFlake; e++) {\n      flakes[e].update();\n      flakes[e].render(ctx);\n  }\n  /*  一帧一帧的画 */\n  this.loop = requestAnimationFrame(function() {\n      drawSnow.apply(that);\n  });\n}\n/* 调用及控制方法 */\nvar snow = new snowFall({maxFlake:60});\nsnow.start();\n```\n\n### 鼠标点击显示字体效果\n\n在`\\themes\\fluid\\source\\js`目录下`duration.js`中添加:\n\n```javascript\nvar a_idx = 0;\njQuery(document).ready(function($) {\n    $(\"body\").click(function(e) {\n        var a = new Array\n        (\"TuT\", \"(　ﾟ∀ﾟ) ﾉ♡\", \"ヽ(`Д´)ノ\", \"(☍﹏⁰)\", \"( ´•̥×•̥` )\", \"ΩДΩ\", \"(・ω・)\", \"ヾ(´︶`*)ﾉ♬\", \"(❀╹◡╹)\");\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        a_idx = (a_idx + 1) % a.length;\n        var x = e.pageX,\n        y = e.pageY;\n        $i.css({\n            \"z-index\": 5,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#FF0000\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n            3000,\n            function() {\n                $i.remove();\n            });\n    });\n    setTimeout('delay()', 2000);\n});\n\nfunction delay() {\n    $(\".buryit\").removeAttr(\"onclick\");\n}\n```\n\n在 `\\themes\\hexo-theme-spfk\\layout\\layout.ejs` 末尾添加以下代码：\n\n```html\n<!--单击显示文字-->\n<script type=\"text/javascript\" src=\"/js/click_show_text.js\"></script>\n```\n\n### 网页标题恶搞\n\n在`\\themes\\fluid\\source\\js`目录下`duration.js`中添加:\n\n```javascript\n<!--浏览器搞笑标题-->\n var OriginTitle = document.title;\n var titleTime;\n document.addEventListener('visibilitychange', function () {\n     if (document.hidden) {\n         $('[rel=\"icon\"]').attr('href', \"/img/fluid.png\");\n         document.title = '看不到我~';\n         clearTimeout(titleTime);\n     }\n     else {\n         $('[rel=\"icon\"]').attr('href', \"/img/1.png\");\n         document.title = '欢迎回来~' + OriginTitle;\n         titleTime = setTimeout(function () {\n             document.title = OriginTitle;\n         }, 2000);\n     }\n });\n```\n\n在`\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs`中添加如下代码：\n\n```html\n<!--浏览器搞笑标题-->\n<script type=\"text/javascript\" src=\"\\js\\FunnyTitle.js\"></script>\n```\n\n### 背景添加动态线条效果\n\n在`\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs`中添加如下代码：\n\n```html\n<!--动态线条背景-->\n<script type=\"text/javascript\"\ncolor=\"220,220,220\" opacity='0.7' zIndex=\"-2\" count=\"200\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\">\n</script>\n```\n\n\n大概就这些，emmm，总感觉自己的blog并不是用来写博客的，而是用来折腾的。\n\n\n{% asset_img 4.png  %}\n","source":"_posts/Hexo-Fluid搭建与魔改纪录.md","raw":"---\ntitle: Hexo-Fluid搭建与魔改纪录\ndate: 2023-2-24 21:53:46\ntags: \n     - blog\n     - hexo\n     - fluid\n\n\n---\n\n## 前言\n\n去年腾讯云服务器过期了，想着采用Hexo + GitHub Pages搭建一个新的博客，主题使用[Fluid](https://github.com/fluid-dev/hexo-theme-fluid)。\n\n~~今年~~~~感觉以前搭建的未免有点过于花哨~~~~又想折腾了，于是使用[Cactus](https://github.com/probberechts/hexo-theme-cactus)重新搭建了一遍。~~\n\n今年又改回来了\\\\(￣︶￣*\\))\n\n这里记录一下自己去年使用Fluid搭建与魔改（照搬他人）blog的步骤，日后查找起来也方便。\n\n## 搭建blog\n\n### 准备工作\n\n(1)需要有一个GitHub账号，没有可以去[官网](https://github.com/)注册一个\n\n(2)电脑安装`Git`，安装及使用教程参考[Git教程](https://www.liaoxuefeng.com/wiki/896043488029600)\n\n(3)由于`Hexo`是基于`Node.js`编写的，故电脑还需要安装`Node.js`，可以去[官网](https://nodejs.org/en/download/)进行下载\n\n### 创建代码仓库\n\n进入[`GitHub`官网](https://github.com/),创建一个新的代码仓库，仓库名格式必须为`<用户名>.github.io`。\n\n### 安装Hexo\n\n__安装 `Hexo`__\n\n```\nnpm install -g hexo-cli\n```\n\n__创建一个项目 `hexo-blog` 并初始化__\n\n```\nhexo init hexo-blog\ncd hexo-blog\nnpm install\n```\n\n__本地启动__\n\n```\nhexo g\nhexo s\n```\n\n此时我们打开浏览器访问`http://localhost:4000`即可进入默认风格网站\n\n### 更换主题\n\n我们可以通过[Hexo官网](https://hexo.io/themes/)获取自己喜欢的主题，这里以我使用的`Fluid`为例\n\n__安装主题__\n\n```\ncd hexo-blog\ngit clone https://github.com/fluid-dev/hexo-theme-fluid.git themes/Fluid\n```\n\n打开`hexo-blog`目录下的`_config.yml `文件，对主题进行配置\n\n```\ntheme: fluid\nlanguage: zh-CN\n```\n\n### 创建「关于页」\n\n首次使用主题的「关于页」需要手动创建：\n\n```\nhexo new page about\n```\n\n创建成功后，编辑博客目录下 `/source/about/index.md`，添加 `layout` 属性。\n\n修改后的文件格式：\n\n```\n---\ntitle: about\ndate: \nlayout: about\n---\n正文\n```\n\n此时我们输入指令\n\n```\nhexo clean\nhexo g\nhexo s\n```\n\n此时再去访问`http://localhost:4000`,我们的`Fluid`主题blog就搭建好了\n\n### 创建文章\n\n打开`hexo-blog`目录下的`_config.yml `文件，对文章进行配置\n\n```\npost_asset_folder: true\n```\n\n执行如下命令创建一篇新文章\n\n```\nhexo n test\n```\n\n执行完成后打开`source\\_posts`目录可以看到生成的`test.md`和`test文件夹`打开`test.md`即可对文章进行编辑\n\n图片的插入可以参考[官方文档](https://hexo.io/zh-cn/docs/asset-folders.html)，也可以使用图床，支持Markdown, HTML\n\n### Fluid配置\n\n参考[Hexo Fluid官方文档](https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97)\n\n## 上传至GitHub Pages\n\n__安装`hexo-deployer-git`__\n\n```\nnpm install hexo-deployer-git --save\n```\n\n打开`hexo-blog`目录下的`_config.yml `文件，进行配置\n\n```\ndeploy:\n  type: git\n  repo: 你的GitHub仓库地址\n  branch: main\n  token: 你的Personal access tokens\n\n```\n\n输入指令\n\n```\nhexo g\nhexo d\n```\n\n此时blog完成上传GitHub Pages，浏览器访问 https://<用户名>.github.io，部署成功\n\n## 绑定域名\n\n### 购买域名\n\n寻找合适的域名交易平台购买域名\n\n### 域名解析\n\n我是在`Namesilo`购买的域名，所以在这里以`Namesilo`为例\n\n登陆后找到`Active Domains`，点击`Manage`,找到自己购买的域名，在`Options`中点击`Manage DNS for this domain` ，将原有的记录全部删除，添加两个新记录\n\n{% asset_img 2.png  %}\n\n（这里的记录值填自己blog的ip地址，不清楚可以去ping一下）\n\n在博客目录 `/source`下创建一个名为`CNAME`的文件，在文件内写入你的域名（不要加`https://`和`www.`）\n\n输入指令\n\n```\nhexo g\nhexo d\n```\n\n### Github解析\n\n在Github的xxx.github.io项目,进入`Settings`,在`Pages`下的`Custom domain`功能中,将刚刚申请的域名写进去。\n\n{% asset_img 1.png  %}\n\n设置好后，等待一段时间后，就可以通过域名访问blog了\n\n## Fluid魔改\n\n### 字体样式修改\n\n修改字体样式直接引入css文件和字体包即可。\n\n首先寻找自己喜欢的字体，这里推荐几个网站：[第一字体网](http://www.diyiziti.com/)，[字体天下](https://www.fonts.net.cn/)，[字体家](https://www.zitijia.com/)\n\n将需要使用的字体文件放入博客目录`themes\\fluid\\source\\css`下\n\n如有有css文件，就在最下面继续写；如果没有，则新建一个css文件，文件名任取\n\n```css\n@font-face{\n  font-family: 'ziti' ;  /* 自定义字体名称 */\n  src: url('ziti.ttf'); /* 引入字体文件的路径 */\n}\n/*应用在body体里，放在第一个，font-family会按顺序使用字体族。如果第一个没找到就会找第二个，以此类推。*/\nbody {\nfont-family: ziti,-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Helvetica Neue\", Lato, Roboto, \"PingFang SC\", \"STZhongsong\", \"Lantinghei SC\", sans-serif\n}\n```\n\n### 鼠标样式修改\n\n在css文件添加下方代码，然后引入即可。\n\n```css\n/*指针样式*/\nbody {\n    cursor: url(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur),\n        default;\n}\n/*链接小手样式*/\na,\nimg {\n    cursor: url(https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur),\n        default;\n}\n```\n\n### 网站运行时间\n\n打开`\\themes\\fluid`下的`_config.yml`，在主题配置中的 `footer: content` 添加：\n\n```html\nfooter:\n  content: '\n\t\t <a href=\"https://hexo.io\" target=\"_blank\" rel=\"nofollow noopener\"><span>Hexo</span></a>\n    <i class=\"iconfont icon-love\"></i>\n    <a href=\"https://github.com/fluid-dev/hexo-theme-fluid\" target=\"_blank\" rel=\"nofollow noopener\"><span>Fluid</span></a>\n    <div style=\"font-size: 0.85rem\">\n      <span id=\"timeDate\">载入天数...</span>\n      <span id=\"times\">载入时分秒...</span>\n      <script src=\"/js/duration.js\"></script>\n    </div>  '\n```\n\n在`\\themes\\fluid\\source\\js`目录下创建 `duration.js`,内容如下:\n\n```javascript\n!(function() {\n    /** 计时起始时间，自行修改 **/\n    var start = new Date(\"2022/10/15 00:00:00\");\n  \n    function update() {\n      var now = new Date();\n      now.setTime(now.getTime()+250);\n      days = (now - start) / 1000 / 60 / 60 / 24;\n      dnum = Math.floor(days);\n      hours = (now - start) / 1000 / 60 / 60 - (24 * dnum);\n      hnum = Math.floor(hours);\n      if(String(hnum).length === 1 ){\n        hnum = \"0\" + hnum;\n      }\n      minutes = (now - start) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);\n      mnum = Math.floor(minutes);\n      if(String(mnum).length === 1 ){\n        mnum = \"0\" + mnum;\n      }\n      seconds = (now - start) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);\n      snum = Math.round(seconds);\n      if(String(snum).length === 1 ){\n        snum = \"0\" + snum;\n      }\n      document.getElementById(\"timeDate\").innerHTML = \"本站居然运行了&nbsp\"+dnum+\"&nbsp天\";\n      document.getElementById(\"times\").innerHTML = hnum + \"&nbsp小时&nbsp\" + mnum + \"&nbsp分&nbsp\" + snum + \"&nbsp秒\";\n    }\n  \n    update();\n    setInterval(update, 1000);\n  })();\n```\n\n### 添加自定义css和js文件\n\n打开`\\themes\\fluid`下的`_config.yml`，在以下位置进行修改：\n\n```\ncustom_js: \n          - /js/duration.js\ncustom_css: \n            - /css/custom.css\n```\n\n\n\n### 看板娘\n\n__安装Live2D__\n\n在hexo-blog目录下右键打开`Git Bash Here`安装Live2D: `npm uninstall hexo-helper-live2d`\n\n__选择模型__\n\n原生模型：\n\n- Epsilon2.1\n- Gantzert_Felixander\n- haru\n- miku\n- ni-j\n- nico\n- nietzche\n- nipsilon\n- nito\n- shizuku\n- tsumiki\n- wanko\n- z16\n- hibiki\n- koharu\n- haruto\n- Unitychan\n- tororo\n- hijiki\n\n__安装模型：__\n\n在hexo文件夹根下右键打开`Git Bash Here`键入`npm install --save live2d-widget-模型名`即可。\n\n__配置__\n\n打开`hexo-blog`目录下的`_config.yml `文件，在末尾增加：\n\n```\nlive2d:\n  model:\n    scale: 1\n    hHeadPos: 0.5\n    vHeadPos: 0.618\n    use: live2d-widget-model-tororo // 下载的动画模型名称\n  display:\n    superSample: 2\n    width: 120\n    height: 200\n    position: left // 模型在网页显示位置,left为左,right为右\n    hOffset: 20\n    vOffset: 50\n  mobile:\n    show: true  // 移动设备是否显示,true则显示,false则不显示\n    scale: 0.5\n  react:\n    opacityDefault: 0.7\n    opacityOnHover: 0.2\n```\n\n接着输入命令\n\n```\nhexo clean\nhexo g\nhexo s\n```\n\n我们就可以看到可爱的看板娘出现在了我们的blog里了\n\n### 一言\n\n打开`\\themes\\fluid`下的`_config.yml`，在以下位置进行修改：\n\n```\nslogan:\n    enable: true\n    text: \"\"\n    api:\n      enable: true\n      url: \"https://v1.hitokoto.cn/\"\n      method: \"GET\"\n      headers: {}\n      keys: ['hitokoto']\n\n```\n\n### 雪花特效\n\n在`\\themes\\fluid\\source\\js`目录下`duration.js`中添加:\n\n```javascript\n/* 控制下雪 */\nfunction snowFall(snow) {\n  /* 可配置属性 */\n  snow = snow || {};\n  this.maxFlake = snow.maxFlake || 200;   /* 最多片数 */\n  this.flakeSize = snow.flakeSize || 10;  /* 雪花形状 */\n  this.fallSpeed = snow.fallSpeed || 1;   /* 坠落速度 */\n}\n/* 兼容写法 */\nrequestAnimationFrame = window.requestAnimationFrame ||\n  window.mozRequestAnimationFrame ||\n  window.webkitRequestAnimationFrame ||\n  window.msRequestAnimationFrame ||\n  window.oRequestAnimationFrame ||\n  function(callback) { setTimeout(callback, 1000 / 60); };\n\ncancelAnimationFrame = window.cancelAnimationFrame ||\n  window.mozCancelAnimationFrame ||\n  window.webkitCancelAnimationFrame ||\n  window.msCancelAnimationFrame ||\n  window.oCancelAnimationFrame;\n/* 开始下雪 */\nsnowFall.prototype.start = function(){\n  /* 创建画布 */\n  snowCanvas.apply(this);\n  /* 创建雪花形状 */\n  createFlakes.apply(this);\n  /* 画雪 */\n  drawSnow.apply(this)\n}\n/* 创建画布 */\nfunction snowCanvas() {\n  /* 添加Dom结点 */\n  var snowcanvas = document.createElement(\"canvas\");\n  snowcanvas.id = \"snowfall\";\n  snowcanvas.width = window.innerWidth;\n  snowcanvas.height = document.body.clientHeight;\n  snowcanvas.setAttribute(\"style\", \"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;\");\n  document.getElementsByTagName(\"body\")[0].appendChild(snowcanvas);\n  this.canvas = snowcanvas;\n  this.ctx = snowcanvas.getContext(\"2d\");\n  /* 窗口大小改变的处理 */\n  window.onresize = function() {\n      snowcanvas.width = window.innerWidth;\n      /* snowcanvas.height = window.innerHeight */\n  }\n}\n/* 雪运动对象 */\nfunction flakeMove(canvasWidth, canvasHeight, flakeSize, fallSpeed) {\n  this.x = Math.floor(Math.random() * canvasWidth);   /* x坐标 */\n  this.y = Math.floor(Math.random() * canvasHeight);  /* y坐标 */\n  this.size = Math.random() * flakeSize + 2;          /* 形状 */\n  this.maxSize = flakeSize;                           /* 最大形状 */\n  this.speed = Math.random() * 1 + fallSpeed;         /* 坠落速度 */\n  this.fallSpeed = fallSpeed;                         /* 坠落速度 */\n  this.velY = this.speed;                             /* Y方向速度 */\n  this.velX = 0;                                      /* X方向速度 */\n  this.stepSize = Math.random() / 30;                 /* 步长 */\n  this.step = 0                                       /* 步数 */\n}\nflakeMove.prototype.update = function() {\n  var x = this.x,\n      y = this.y;\n  /* 左右摆动(余弦) */\n  this.velX *= 0.98;\n  if (this.velY <= this.speed) {\n      this.velY = this.speed\n  }\n  this.velX += Math.cos(this.step += .05) * this.stepSize;\n\n  this.y += this.velY;\n  this.x += this.velX;\n  /* 飞出边界的处理 */\n  if (this.x >= canvas.width || this.x <= 0 || this.y >= canvas.height || this.y <= 0) {\n      this.reset(canvas.width, canvas.height)\n  }\n};\n/* 飞出边界-放置最顶端继续坠落 */\nflakeMove.prototype.reset = function(width, height) {\n  this.x = Math.floor(Math.random() * width);\n  this.y = 0;\n  this.size = Math.random() * this.maxSize + 2;\n  this.speed = Math.random() * 1 + this.fallSpeed;\n  this.velY = this.speed;\n  this.velX = 0;\n};\n// 渲染雪花-随机形状（此处可修改雪花颜色！！！）\nflakeMove.prototype.render = function(ctx) {\n  var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size);\n  snowFlake.addColorStop(0, \"rgba(255, 255, 255, 0.9)\");  /* 此处是雪花颜色，默认是白色 */\n  snowFlake.addColorStop(.5, \"rgba(255, 255, 255, 0.5)\"); /* 若要改为其他颜色，请自行查 */\n  snowFlake.addColorStop(1, \"rgba(255, 255, 255, 0)\");    /* 找16进制的RGB 颜色代码。 */\n  ctx.save();\n  ctx.fillStyle = snowFlake;\n  ctx.beginPath();\n  ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n  ctx.fill();\n  ctx.restore();\n};\n/* 创建雪花-定义形状 */\nfunction createFlakes() {\n  var maxFlake = this.maxFlake,\n      flakes = this.flakes = [],\n      canvas = this.canvas;\n  for (var i = 0; i < maxFlake; i++) {\n      flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed))\n  }\n}\n/* 画雪 */\nfunction drawSnow() {\n  var maxFlake = this.maxFlake,\n      flakes = this.flakes;\n  ctx = this.ctx, canvas = this.canvas, that = this;\n  /* 清空雪花 */\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  for (var e = 0; e < maxFlake; e++) {\n      flakes[e].update();\n      flakes[e].render(ctx);\n  }\n  /*  一帧一帧的画 */\n  this.loop = requestAnimationFrame(function() {\n      drawSnow.apply(that);\n  });\n}\n/* 调用及控制方法 */\nvar snow = new snowFall({maxFlake:60});\nsnow.start();\n```\n\n### 鼠标点击显示字体效果\n\n在`\\themes\\fluid\\source\\js`目录下`duration.js`中添加:\n\n```javascript\nvar a_idx = 0;\njQuery(document).ready(function($) {\n    $(\"body\").click(function(e) {\n        var a = new Array\n        (\"TuT\", \"(　ﾟ∀ﾟ) ﾉ♡\", \"ヽ(`Д´)ノ\", \"(☍﹏⁰)\", \"( ´•̥×•̥` )\", \"ΩДΩ\", \"(・ω・)\", \"ヾ(´︶`*)ﾉ♬\", \"(❀╹◡╹)\");\n        var $i = $(\"<span/>\").text(a[a_idx]);\n        a_idx = (a_idx + 1) % a.length;\n        var x = e.pageX,\n        y = e.pageY;\n        $i.css({\n            \"z-index\": 5,\n            \"top\": y - 20,\n            \"left\": x,\n            \"position\": \"absolute\",\n            \"font-weight\": \"bold\",\n            \"color\": \"#FF0000\"\n        });\n        $(\"body\").append($i);\n        $i.animate({\n            \"top\": y - 180,\n            \"opacity\": 0\n        },\n            3000,\n            function() {\n                $i.remove();\n            });\n    });\n    setTimeout('delay()', 2000);\n});\n\nfunction delay() {\n    $(\".buryit\").removeAttr(\"onclick\");\n}\n```\n\n在 `\\themes\\hexo-theme-spfk\\layout\\layout.ejs` 末尾添加以下代码：\n\n```html\n<!--单击显示文字-->\n<script type=\"text/javascript\" src=\"/js/click_show_text.js\"></script>\n```\n\n### 网页标题恶搞\n\n在`\\themes\\fluid\\source\\js`目录下`duration.js`中添加:\n\n```javascript\n<!--浏览器搞笑标题-->\n var OriginTitle = document.title;\n var titleTime;\n document.addEventListener('visibilitychange', function () {\n     if (document.hidden) {\n         $('[rel=\"icon\"]').attr('href', \"/img/fluid.png\");\n         document.title = '看不到我~';\n         clearTimeout(titleTime);\n     }\n     else {\n         $('[rel=\"icon\"]').attr('href', \"/img/1.png\");\n         document.title = '欢迎回来~' + OriginTitle;\n         titleTime = setTimeout(function () {\n             document.title = OriginTitle;\n         }, 2000);\n     }\n });\n```\n\n在`\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs`中添加如下代码：\n\n```html\n<!--浏览器搞笑标题-->\n<script type=\"text/javascript\" src=\"\\js\\FunnyTitle.js\"></script>\n```\n\n### 背景添加动态线条效果\n\n在`\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs`中添加如下代码：\n\n```html\n<!--动态线条背景-->\n<script type=\"text/javascript\"\ncolor=\"220,220,220\" opacity='0.7' zIndex=\"-2\" count=\"200\" src=\"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js\">\n</script>\n```\n\n\n大概就这些，emmm，总感觉自己的blog并不是用来写博客的，而是用来折腾的。\n\n\n{% asset_img 4.png  %}\n","slug":"Hexo-Fluid搭建与魔改纪录","published":1,"updated":"2024-09-07T17:34:30.762Z","comments":1,"layout":"post","photos":[],"_id":"cmaj5a7bd0008a8uo5dh0d5jv","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>去年腾讯云服务器过期了，想着采用Hexo + GitHub Pages搭建一个新的博客，主题使用<a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">Fluid</a>。</p>\n<p><del>今年~~~~感觉以前搭建的未免有点过于花哨~~~~又想折腾了，于是使用<a href=\"https://github.com/probberechts/hexo-theme-cactus\">Cactus</a>重新搭建了一遍。</del></p>\n<p>今年又改回来了\\(￣︶￣*))</p>\n<p>这里记录一下自己去年使用Fluid搭建与魔改（照搬他人）blog的步骤，日后查找起来也方便。</p>\n<h2 id=\"搭建blog\"><a href=\"#搭建blog\" class=\"headerlink\" title=\"搭建blog\"></a>搭建blog</h2><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>(1)需要有一个GitHub账号，没有可以去<a href=\"https://github.com/\">官网</a>注册一个</p>\n<p>(2)电脑安装<code>Git</code>，安装及使用教程参考<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\">Git教程</a></p>\n<p>(3)由于<code>Hexo</code>是基于<code>Node.js</code>编写的，故电脑还需要安装<code>Node.js</code>，可以去<a href=\"https://nodejs.org/en/download/\">官网</a>进行下载</p>\n<h3 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h3><p>进入<a href=\"https://github.com/\"><code>GitHub</code>官网</a>,创建一个新的代码仓库，仓库名格式必须为<code>&lt;用户名&gt;.github.io</code>。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p><strong>安装 <code>Hexo</code></strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\">npm install -g hexo-<span class=\"hljs-keyword\">cli</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>创建一个项目 <code>hexo-blog</code> 并初始化</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">hexo init hexo-<span class=\"hljs-keyword\">blog</span><br><span class=\"hljs-keyword\"></span>cd hexo-<span class=\"hljs-keyword\">blog</span><br><span class=\"hljs-keyword\"></span>npm <span class=\"hljs-keyword\">install</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>本地启动</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo <span class=\"hljs-selector-tag\">g</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>此时我们打开浏览器访问<code>http://localhost:4000</code>即可进入默认风格网站</p>\n<h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p>我们可以通过<a href=\"https://hexo.io/themes/\">Hexo官网</a>获取自己喜欢的主题，这里以我使用的<code>Fluid</code>为例</p>\n<p><strong>安装主题</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> hexo-blog<br>git <span class=\"hljs-built_in\">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/Fluid<br></code></pre></td></tr></table></figure>\n\n<p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，对主题进行配置</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">theme:</span> fluid<br><span class=\"hljs-symbol\">language:</span> <span class=\"hljs-built_in\">zh</span>-CN<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建「关于页」\"><a href=\"#创建「关于页」\" class=\"headerlink\" title=\"创建「关于页」\"></a>创建「关于页」</h3><p>首次使用主题的「关于页」需要手动创建：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\">hexo <span class=\"hljs-keyword\">new</span> page about<br></code></pre></td></tr></table></figure>\n\n<p>创建成功后，编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p>\n<p>修改后的文件格式：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">about</span><br><span class=\"hljs-attr\">date:</span> <br><span class=\"hljs-attr\">layout:</span> <span class=\"hljs-string\">about</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-string\">正文</span><br></code></pre></td></tr></table></figure>\n\n<p>此时我们输入指令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo clean<br>hexo <span class=\"hljs-selector-tag\">g</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>此时再去访问<code>http://localhost:4000</code>,我们的<code>Fluid</code>主题blog就搭建好了</p>\n<h3 id=\"创建文章\"><a href=\"#创建文章\" class=\"headerlink\" title=\"创建文章\"></a>创建文章</h3><p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，对文章进行配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">post_asset_folder:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<p>执行如下命令创建一篇新文章</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo n <span class=\"hljs-built_in\">test</span><br></code></pre></td></tr></table></figure>\n\n<p>执行完成后打开<code>source\\_posts</code>目录可以看到生成的<code>test.md</code>和<code>test文件夹</code>打开<code>test.md</code>即可对文章进行编辑</p>\n<p>图片的插入可以参考<a href=\"https://hexo.io/zh-cn/docs/asset-folders.html\">官方文档</a>，也可以使用图床，支持Markdown, HTML</p>\n<h3 id=\"Fluid配置\"><a href=\"#Fluid配置\" class=\"headerlink\" title=\"Fluid配置\"></a>Fluid配置</h3><p>参考<a href=\"https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97\">Hexo Fluid官方文档</a></p>\n<h2 id=\"上传至GitHub-Pages\"><a href=\"#上传至GitHub-Pages\" class=\"headerlink\" title=\"上传至GitHub Pages\"></a>上传至GitHub Pages</h2><p><strong>安装<code>hexo-deployer-git</code></strong></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">npm install hexo-deployer-git <span class=\"hljs-comment\">--save</span><br></code></pre></td></tr></table></figure>\n\n<p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，进行配置</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">deploy:</span><br><span class=\"hljs-symbol\">  type:</span> git<br><span class=\"hljs-symbol\">  repo:</span> 你的GitHub仓库地址<br><span class=\"hljs-symbol\">  branch:</span> main<br><span class=\"hljs-symbol\">  token:</span> 你的Personal access tokens<br><br></code></pre></td></tr></table></figure>\n\n<p>输入指令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo <span class=\"hljs-selector-tag\">g</span><br>hexo d<br></code></pre></td></tr></table></figure>\n\n<p>此时blog完成上传GitHub Pages，浏览器访问 https:&#x2F;&#x2F;&lt;用户名&gt;.github.io，部署成功</p>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><h3 id=\"购买域名\"><a href=\"#购买域名\" class=\"headerlink\" title=\"购买域名\"></a>购买域名</h3><p>寻找合适的域名交易平台购买域名</p>\n<h3 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h3><p>我是在<code>Namesilo</code>购买的域名，所以在这里以<code>Namesilo</code>为例</p>\n<p>登陆后找到<code>Active Domains</code>，点击<code>Manage</code>,找到自己购买的域名，在<code>Options</code>中点击<code>Manage DNS for this domain</code> ，将原有的记录全部删除，添加两个新记录</p>\n<img src=\"/2023/02/24/Hexo-Fluid%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%AD%94%E6%94%B9%E7%BA%AA%E5%BD%95/2.png\" class=\"\">\n\n<p>（这里的记录值填自己blog的ip地址，不清楚可以去ping一下）</p>\n<p>在博客目录 <code>/source</code>下创建一个名为<code>CNAME</code>的文件，在文件内写入你的域名（不要加<code>https://</code>和<code>www.</code>）</p>\n<p>输入指令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo <span class=\"hljs-selector-tag\">g</span><br>hexo d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Github解析\"><a href=\"#Github解析\" class=\"headerlink\" title=\"Github解析\"></a>Github解析</h3><p>在Github的xxx.github.io项目,进入<code>Settings</code>,在<code>Pages</code>下的<code>Custom domain</code>功能中,将刚刚申请的域名写进去。</p>\n<img src=\"/2023/02/24/Hexo-Fluid%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%AD%94%E6%94%B9%E7%BA%AA%E5%BD%95/1.png\" class=\"\">\n\n<p>设置好后，等待一段时间后，就可以通过域名访问blog了</p>\n<h2 id=\"Fluid魔改\"><a href=\"#Fluid魔改\" class=\"headerlink\" title=\"Fluid魔改\"></a>Fluid魔改</h2><h3 id=\"字体样式修改\"><a href=\"#字体样式修改\" class=\"headerlink\" title=\"字体样式修改\"></a>字体样式修改</h3><p>修改字体样式直接引入css文件和字体包即可。</p>\n<p>首先寻找自己喜欢的字体，这里推荐几个网站：<a href=\"http://www.diyiziti.com/\">第一字体网</a>，<a href=\"https://www.fonts.net.cn/\">字体天下</a>，<a href=\"https://www.zitijia.com/\">字体家</a></p>\n<p>将需要使用的字体文件放入博客目录<code>themes\\fluid\\source\\css</code>下</p>\n<p>如有有css文件，就在最下面继续写；如果没有，则新建一个css文件，文件名任取</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-keyword\">@font-face</span>&#123;<br>  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&#x27;ziti&#x27;</span> ;  <span class=\"hljs-comment\">/* 自定义字体名称 */</span><br>  <span class=\"hljs-attribute\">src</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&#x27;ziti.ttf&#x27;</span>); <span class=\"hljs-comment\">/* 引入字体文件的路径 */</span><br>&#125;<br><span class=\"hljs-comment\">/*应用在body体里，放在第一个，font-family会按顺序使用字体族。如果第一个没找到就会找第二个，以此类推。*/</span><br><span class=\"hljs-selector-tag\">body</span> &#123;<br><span class=\"hljs-attribute\">font-family</span>: ziti,-apple-system, BlinkMacSystemFont, <span class=\"hljs-string\">&quot;Segoe UI&quot;</span>, <span class=\"hljs-string\">&quot;Helvetica Neue&quot;</span>, Lato, Roboto, <span class=\"hljs-string\">&quot;PingFang SC&quot;</span>, <span class=\"hljs-string\">&quot;STZhongsong&quot;</span>, <span class=\"hljs-string\">&quot;Lantinghei SC&quot;</span>, sans-serif<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"鼠标样式修改\"><a href=\"#鼠标样式修改\" class=\"headerlink\" title=\"鼠标样式修改\"></a>鼠标样式修改</h3><p>在css文件添加下方代码，然后引入即可。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-comment\">/*指针样式*/</span><br><span class=\"hljs-selector-tag\">body</span> &#123;<br>    <span class=\"hljs-attribute\">cursor</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur</span>),<br>        default;<br>&#125;<br><span class=\"hljs-comment\">/*链接小手样式*/</span><br><span class=\"hljs-selector-tag\">a</span>,<br><span class=\"hljs-selector-tag\">img</span> &#123;<br>    <span class=\"hljs-attribute\">cursor</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur</span>),<br>        default;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"网站运行时间\"><a href=\"#网站运行时间\" class=\"headerlink\" title=\"网站运行时间\"></a>网站运行时间</h3><p>打开<code>\\themes\\fluid</code>下的<code>_config.yml</code>，在主题配置中的 <code>footer: content</code> 添加：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">footer:<br>  content: &#x27;<br>\t\t <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://hexo.io&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;nofollow noopener&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>Hexo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;iconfont icon-love&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;nofollow noopener&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>Fluid<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 0.85rem&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/js/duration.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>  &#x27;<br></code></pre></td></tr></table></figure>\n\n<p>在<code>\\themes\\fluid\\source\\js</code>目录下创建 <code>duration.js</code>,内容如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">!(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">/** 计时起始时间，自行修改 **/</span><br>    <span class=\"hljs-keyword\">var</span> start = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(<span class=\"hljs-string\">&quot;2022/10/15 00:00:00&quot;</span>);<br>  <br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-params\"></span>) &#123;<br>      <span class=\"hljs-keyword\">var</span> now = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>      now.<span class=\"hljs-title function_\">setTime</span>(now.<span class=\"hljs-title function_\">getTime</span>()+<span class=\"hljs-number\">250</span>);<br>      days = (now - start) / <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span> / <span class=\"hljs-number\">60</span> / <span class=\"hljs-number\">24</span>;<br>      dnum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(days);<br>      hours = (now - start) / <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span> / <span class=\"hljs-number\">60</span> - (<span class=\"hljs-number\">24</span> * dnum);<br>      hnum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(hours);<br>      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title class_\">String</span>(hnum).<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">1</span> )&#123;<br>        hnum = <span class=\"hljs-string\">&quot;0&quot;</span> + hnum;<br>      &#125;<br>      minutes = (now - start) / <span class=\"hljs-number\">1000</span> /<span class=\"hljs-number\">60</span> - (<span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * dnum) - (<span class=\"hljs-number\">60</span> * hnum);<br>      mnum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(minutes);<br>      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title class_\">String</span>(mnum).<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">1</span> )&#123;<br>        mnum = <span class=\"hljs-string\">&quot;0&quot;</span> + mnum;<br>      &#125;<br>      seconds = (now - start) / <span class=\"hljs-number\">1000</span> - (<span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * dnum) - (<span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * hnum) - (<span class=\"hljs-number\">60</span> * mnum);<br>      snum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">round</span>(seconds);<br>      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title class_\">String</span>(snum).<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">1</span> )&#123;<br>        snum = <span class=\"hljs-string\">&quot;0&quot;</span> + snum;<br>      &#125;<br>      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;timeDate&quot;</span>).<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;本站居然运行了&amp;nbsp&quot;</span>+dnum+<span class=\"hljs-string\">&quot;&amp;nbsp天&quot;</span>;<br>      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;times&quot;</span>).<span class=\"hljs-property\">innerHTML</span> = hnum + <span class=\"hljs-string\">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class=\"hljs-string\">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class=\"hljs-string\">&quot;&amp;nbsp秒&quot;</span>;<br>    &#125;<br>  <br>    <span class=\"hljs-title function_\">update</span>();<br>    <span class=\"hljs-built_in\">setInterval</span>(update, <span class=\"hljs-number\">1000</span>);<br>  &#125;)();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加自定义css和js文件\"><a href=\"#添加自定义css和js文件\" class=\"headerlink\" title=\"添加自定义css和js文件\"></a>添加自定义css和js文件</h3><p>打开<code>\\themes\\fluid</code>下的<code>_config.yml</code>，在以下位置进行修改：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">custom_js:</span> <br>          - <span class=\"hljs-keyword\">/js/</span>duration.js<br><span class=\"hljs-symbol\">custom_css:</span> <br>            - <span class=\"hljs-keyword\">/css/</span>custom.css<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"看板娘\"><a href=\"#看板娘\" class=\"headerlink\" title=\"看板娘\"></a>看板娘</h3><p><strong>安装Live2D</strong></p>\n<p>在hexo-blog目录下右键打开<code>Git Bash Here</code>安装Live2D: <code>npm uninstall hexo-helper-live2d</code></p>\n<p><strong>选择模型</strong></p>\n<p>原生模型：</p>\n<ul>\n<li>Epsilon2.1</li>\n<li>Gantzert_Felixander</li>\n<li>haru</li>\n<li>miku</li>\n<li>ni-j</li>\n<li>nico</li>\n<li>nietzche</li>\n<li>nipsilon</li>\n<li>nito</li>\n<li>shizuku</li>\n<li>tsumiki</li>\n<li>wanko</li>\n<li>z16</li>\n<li>hibiki</li>\n<li>koharu</li>\n<li>haruto</li>\n<li>Unitychan</li>\n<li>tororo</li>\n<li>hijiki</li>\n</ul>\n<p><strong>安装模型：</strong></p>\n<p>在hexo文件夹根下右键打开<code>Git Bash Here</code>键入<code>npm install --save live2d-widget-模型名</code>即可。</p>\n<p><strong>配置</strong></p>\n<p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，在末尾增加：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">live2d:</span><br><span class=\"hljs-symbol\">  model:</span><br><span class=\"hljs-symbol\">    scale:</span> <span class=\"hljs-number\">1</span><br><span class=\"hljs-symbol\">    hHeadPos:</span> <span class=\"hljs-number\">0.5</span><br><span class=\"hljs-symbol\">    vHeadPos:</span> <span class=\"hljs-number\">0.618</span><br><span class=\"hljs-symbol\">    use:</span> live2d-widget-model-tororo <span class=\"hljs-comment\">// 下载的动画模型名称</span><br><span class=\"hljs-symbol\">  display:</span><br><span class=\"hljs-symbol\">    superSample:</span> <span class=\"hljs-number\">2</span><br><span class=\"hljs-symbol\">    width:</span> <span class=\"hljs-number\">120</span><br><span class=\"hljs-symbol\">    height:</span> <span class=\"hljs-number\">200</span><br><span class=\"hljs-symbol\">    position:</span> left <span class=\"hljs-comment\">// 模型在网页显示位置,left为左,right为右</span><br><span class=\"hljs-symbol\">    hOffset:</span> <span class=\"hljs-number\">20</span><br><span class=\"hljs-symbol\">    vOffset:</span> <span class=\"hljs-number\">50</span><br><span class=\"hljs-symbol\">  mobile:</span><br><span class=\"hljs-symbol\">    show:</span> true  <span class=\"hljs-comment\">// 移动设备是否显示,true则显示,false则不显示</span><br><span class=\"hljs-symbol\">    scale:</span> <span class=\"hljs-number\">0.5</span><br><span class=\"hljs-symbol\">  react:</span><br><span class=\"hljs-symbol\">    opacityDefault:</span> <span class=\"hljs-number\">0.7</span><br><span class=\"hljs-symbol\">    opacityOnHover:</span> <span class=\"hljs-number\">0.2</span><br></code></pre></td></tr></table></figure>\n\n<p>接着输入命令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo clean<br>hexo <span class=\"hljs-selector-tag\">g</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>我们就可以看到可爱的看板娘出现在了我们的blog里了</p>\n<h3 id=\"一言\"><a href=\"#一言\" class=\"headerlink\" title=\"一言\"></a>一言</h3><p>打开<code>\\themes\\fluid</code>下的<code>_config.yml</code>，在以下位置进行修改：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">slogan:</span><br>    <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">&quot;&quot;</span><br>    <span class=\"hljs-attr\">api:</span><br>      <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">&quot;https://v1.hitokoto.cn/&quot;</span><br>      <span class=\"hljs-attr\">method:</span> <span class=\"hljs-string\">&quot;GET&quot;</span><br>      <span class=\"hljs-attr\">headers:</span> &#123;&#125;<br>      <span class=\"hljs-attr\">keys:</span> [<span class=\"hljs-string\">&#x27;hitokoto&#x27;</span>]<br><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"雪花特效\"><a href=\"#雪花特效\" class=\"headerlink\" title=\"雪花特效\"></a>雪花特效</h3><p>在<code>\\themes\\fluid\\source\\js</code>目录下<code>duration.js</code>中添加:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/* 控制下雪 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">snowFall</span>(<span class=\"hljs-params\">snow</span>) &#123;<br>  <span class=\"hljs-comment\">/* 可配置属性 */</span><br>  snow = snow || &#123;&#125;;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxFlake</span> = snow.<span class=\"hljs-property\">maxFlake</span> || <span class=\"hljs-number\">200</span>;   <span class=\"hljs-comment\">/* 最多片数 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakeSize</span> = snow.<span class=\"hljs-property\">flakeSize</span> || <span class=\"hljs-number\">10</span>;  <span class=\"hljs-comment\">/* 雪花形状 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span> = snow.<span class=\"hljs-property\">fallSpeed</span> || <span class=\"hljs-number\">1</span>;   <span class=\"hljs-comment\">/* 坠落速度 */</span><br>&#125;<br><span class=\"hljs-comment\">/* 兼容写法 */</span><br>requestAnimationFrame = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">requestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">mozRequestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">webkitRequestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">msRequestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">oRequestAnimationFrame</span> ||<br>  <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">callback</span>) &#123; <span class=\"hljs-built_in\">setTimeout</span>(callback, <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span>); &#125;;<br><br>cancelAnimationFrame = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">cancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">mozCancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">webkitCancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">msCancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">oCancelAnimationFrame</span>;<br><span class=\"hljs-comment\">/* 开始下雪 */</span><br>snowFall.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">start</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)&#123;<br>  <span class=\"hljs-comment\">/* 创建画布 */</span><br>  snowCanvas.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>);<br>  <span class=\"hljs-comment\">/* 创建雪花形状 */</span><br>  createFlakes.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>);<br>  <span class=\"hljs-comment\">/* 画雪 */</span><br>  drawSnow.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>)<br>&#125;<br><span class=\"hljs-comment\">/* 创建画布 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">snowCanvas</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-comment\">/* 添加Dom结点 */</span><br>  <span class=\"hljs-keyword\">var</span> snowcanvas = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;canvas&quot;</span>);<br>  snowcanvas.<span class=\"hljs-property\">id</span> = <span class=\"hljs-string\">&quot;snowfall&quot;</span>;<br>  snowcanvas.<span class=\"hljs-property\">width</span> = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>;<br>  snowcanvas.<span class=\"hljs-property\">height</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">clientHeight</span>;<br>  snowcanvas.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&quot;style&quot;</span>, <span class=\"hljs-string\">&quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;</span>);<br>  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByTagName</span>(<span class=\"hljs-string\">&quot;body&quot;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-title function_\">appendChild</span>(snowcanvas);<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">canvas</span> = snowcanvas;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ctx</span> = snowcanvas.<span class=\"hljs-title function_\">getContext</span>(<span class=\"hljs-string\">&quot;2d&quot;</span>);<br>  <span class=\"hljs-comment\">/* 窗口大小改变的处理 */</span><br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">onresize</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>      snowcanvas.<span class=\"hljs-property\">width</span> = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>;<br>      <span class=\"hljs-comment\">/* snowcanvas.height = window.innerHeight */</span><br>  &#125;<br>&#125;<br><span class=\"hljs-comment\">/* 雪运动对象 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flakeMove</span>(<span class=\"hljs-params\">canvasWidth, canvasHeight, flakeSize, fallSpeed</span>) &#123;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * canvasWidth);   <span class=\"hljs-comment\">/* x坐标 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * canvasHeight);  <span class=\"hljs-comment\">/* y坐标 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * flakeSize + <span class=\"hljs-number\">2</span>;          <span class=\"hljs-comment\">/* 形状 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxSize</span> = flakeSize;                           <span class=\"hljs-comment\">/* 最大形状 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * <span class=\"hljs-number\">1</span> + fallSpeed;         <span class=\"hljs-comment\">/* 坠落速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span> = fallSpeed;                         <span class=\"hljs-comment\">/* 坠落速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span>;                             <span class=\"hljs-comment\">/* Y方向速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> = <span class=\"hljs-number\">0</span>;                                      <span class=\"hljs-comment\">/* X方向速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">stepSize</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() / <span class=\"hljs-number\">30</span>;                 <span class=\"hljs-comment\">/* 步长 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">step</span> = <span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">/* 步数 */</span><br>&#125;<br>flakeMove.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">update</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> x = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>,<br>      y = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>;<br>  <span class=\"hljs-comment\">/* 左右摆动(余弦) */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> *= <span class=\"hljs-number\">0.98</span>;<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> &lt;= <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span>) &#123;<br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span><br>  &#125;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> += <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">cos</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">step</span> += <span class=\"hljs-number\">.05</span>) * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">stepSize</span>;<br><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> += <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> += <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span>;<br>  <span class=\"hljs-comment\">/* 飞出边界的处理 */</span><br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> &gt;= canvas.<span class=\"hljs-property\">width</span> || <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> &lt;= <span class=\"hljs-number\">0</span> || <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> &gt;= canvas.<span class=\"hljs-property\">height</span> || <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> &lt;= <span class=\"hljs-number\">0</span>) &#123;<br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">reset</span>(canvas.<span class=\"hljs-property\">width</span>, canvas.<span class=\"hljs-property\">height</span>)<br>  &#125;<br>&#125;;<br><span class=\"hljs-comment\">/* 飞出边界-放置最顶端继续坠落 */</span><br>flakeMove.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">reset</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">width, height</span>) &#123;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * width);<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> = <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxSize</span> + <span class=\"hljs-number\">2</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * <span class=\"hljs-number\">1</span> + <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> = <span class=\"hljs-number\">0</span>;<br>&#125;;<br><span class=\"hljs-comment\">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span><br>flakeMove.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">render</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ctx</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> snowFlake = ctx.<span class=\"hljs-title function_\">createRadialGradient</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>);<br>  snowFlake.<span class=\"hljs-title function_\">addColorStop</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&quot;rgba(255, 255, 255, 0.9)&quot;</span>);  <span class=\"hljs-comment\">/* 此处是雪花颜色，默认是白色 */</span><br>  snowFlake.<span class=\"hljs-title function_\">addColorStop</span>(<span class=\"hljs-number\">.5</span>, <span class=\"hljs-string\">&quot;rgba(255, 255, 255, 0.5)&quot;</span>); <span class=\"hljs-comment\">/* 若要改为其他颜色，请自行查 */</span><br>  snowFlake.<span class=\"hljs-title function_\">addColorStop</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&quot;rgba(255, 255, 255, 0)&quot;</span>);    <span class=\"hljs-comment\">/* 找16进制的RGB 颜色代码。 */</span><br>  ctx.<span class=\"hljs-title function_\">save</span>();<br>  ctx.<span class=\"hljs-property\">fillStyle</span> = snowFlake;<br>  ctx.<span class=\"hljs-title function_\">beginPath</span>();<br>  ctx.<span class=\"hljs-title function_\">arc</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * <span class=\"hljs-number\">2</span>);<br>  ctx.<span class=\"hljs-title function_\">fill</span>();<br>  ctx.<span class=\"hljs-title function_\">restore</span>();<br>&#125;;<br><span class=\"hljs-comment\">/* 创建雪花-定义形状 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">createFlakes</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> maxFlake = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxFlake</span>,<br>      flakes = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakes</span> = [],<br>      canvas = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">canvas</span>;<br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; maxFlake; i++) &#123;<br>      flakes.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">flakeMove</span>(canvas.<span class=\"hljs-property\">width</span>, canvas.<span class=\"hljs-property\">height</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakeSize</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span>))<br>  &#125;<br>&#125;<br><span class=\"hljs-comment\">/* 画雪 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">drawSnow</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> maxFlake = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxFlake</span>,<br>      flakes = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakes</span>;<br>  ctx = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ctx</span>, canvas = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">canvas</span>, that = <span class=\"hljs-variable language_\">this</span>;<br>  <span class=\"hljs-comment\">/* 清空雪花 */</span><br>  ctx.<span class=\"hljs-title function_\">clearRect</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, canvas.<span class=\"hljs-property\">width</span>, canvas.<span class=\"hljs-property\">height</span>);<br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>; e &lt; maxFlake; e++) &#123;<br>      flakes[e].<span class=\"hljs-title function_\">update</span>();<br>      flakes[e].<span class=\"hljs-title function_\">render</span>(ctx);<br>  &#125;<br>  <span class=\"hljs-comment\">/*  一帧一帧的画 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">loop</span> = <span class=\"hljs-title function_\">requestAnimationFrame</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>      drawSnow.<span class=\"hljs-title function_\">apply</span>(that);<br>  &#125;);<br>&#125;<br><span class=\"hljs-comment\">/* 调用及控制方法 */</span><br><span class=\"hljs-keyword\">var</span> snow = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">snowFall</span>(&#123;<span class=\"hljs-attr\">maxFlake</span>:<span class=\"hljs-number\">60</span>&#125;);<br>snow.<span class=\"hljs-title function_\">start</span>();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"鼠标点击显示字体效果\"><a href=\"#鼠标点击显示字体效果\" class=\"headerlink\" title=\"鼠标点击显示字体效果\"></a>鼠标点击显示字体效果</h3><p>在<code>\\themes\\fluid\\source\\js</code>目录下<code>duration.js</code>中添加:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">var</span> a_idx = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-title function_\">jQuery</span>(<span class=\"hljs-variable language_\">document</span>).<span class=\"hljs-title function_\">ready</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>) &#123;<br>    $(<span class=\"hljs-string\">&quot;body&quot;</span>).<span class=\"hljs-title function_\">click</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) &#123;<br>        <span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span><br>        (<span class=\"hljs-string\">&quot;TuT&quot;</span>, <span class=\"hljs-string\">&quot;(　ﾟ∀ﾟ) ﾉ♡&quot;</span>, <span class=\"hljs-string\">&quot;ヽ(`Д´)ノ&quot;</span>, <span class=\"hljs-string\">&quot;(☍﹏⁰)&quot;</span>, <span class=\"hljs-string\">&quot;( ´•̥×•̥` )&quot;</span>, <span class=\"hljs-string\">&quot;ΩДΩ&quot;</span>, <span class=\"hljs-string\">&quot;(・ω・)&quot;</span>, <span class=\"hljs-string\">&quot;ヾ(´︶`*)ﾉ♬&quot;</span>, <span class=\"hljs-string\">&quot;(❀╹◡╹)&quot;</span>);<br>        <span class=\"hljs-keyword\">var</span> $i = $(<span class=\"hljs-string\">&quot;&lt;span/&gt;&quot;</span>).<span class=\"hljs-title function_\">text</span>(a[a_idx]);<br>        a_idx = (a_idx + <span class=\"hljs-number\">1</span>) % a.<span class=\"hljs-property\">length</span>;<br>        <span class=\"hljs-keyword\">var</span> x = e.<span class=\"hljs-property\">pageX</span>,<br>        y = e.<span class=\"hljs-property\">pageY</span>;<br>        $i.<span class=\"hljs-title function_\">css</span>(&#123;<br>            <span class=\"hljs-string\">&quot;z-index&quot;</span>: <span class=\"hljs-number\">5</span>,<br>            <span class=\"hljs-string\">&quot;top&quot;</span>: y - <span class=\"hljs-number\">20</span>,<br>            <span class=\"hljs-string\">&quot;left&quot;</span>: x,<br>            <span class=\"hljs-string\">&quot;position&quot;</span>: <span class=\"hljs-string\">&quot;absolute&quot;</span>,<br>            <span class=\"hljs-string\">&quot;font-weight&quot;</span>: <span class=\"hljs-string\">&quot;bold&quot;</span>,<br>            <span class=\"hljs-string\">&quot;color&quot;</span>: <span class=\"hljs-string\">&quot;#FF0000&quot;</span><br>        &#125;);<br>        $(<span class=\"hljs-string\">&quot;body&quot;</span>).<span class=\"hljs-title function_\">append</span>($i);<br>        $i.<span class=\"hljs-title function_\">animate</span>(&#123;<br>            <span class=\"hljs-string\">&quot;top&quot;</span>: y - <span class=\"hljs-number\">180</span>,<br>            <span class=\"hljs-string\">&quot;opacity&quot;</span>: <span class=\"hljs-number\">0</span><br>        &#125;,<br>            <span class=\"hljs-number\">3000</span>,<br>            <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>                $i.<span class=\"hljs-title function_\">remove</span>();<br>            &#125;);<br>    &#125;);<br>    <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-string\">&#x27;delay()&#x27;</span>, <span class=\"hljs-number\">2000</span>);<br>&#125;);<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">delay</span>(<span class=\"hljs-params\"></span>) &#123;<br>    $(<span class=\"hljs-string\">&quot;.buryit&quot;</span>).<span class=\"hljs-title function_\">removeAttr</span>(<span class=\"hljs-string\">&quot;onclick&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>\\themes\\hexo-theme-spfk\\layout\\layout.ejs</code> 末尾添加以下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--单击显示文字--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/js/click_show_text.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"网页标题恶搞\"><a href=\"#网页标题恶搞\" class=\"headerlink\" title=\"网页标题恶搞\"></a>网页标题恶搞</h3><p>在<code>\\themes\\fluid\\source\\js</code>目录下<code>duration.js</code>中添加:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;!--浏览器搞笑标题--&gt;<br> <span class=\"hljs-keyword\">var</span> <span class=\"hljs-title class_\">OriginTitle</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span>;<br> <span class=\"hljs-keyword\">var</span> titleTime;<br> <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;visibilitychange&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>     <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">hidden</span>) &#123;<br>         $(<span class=\"hljs-string\">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;href&#x27;</span>, <span class=\"hljs-string\">&quot;/img/fluid.png&quot;</span>);<br>         <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = <span class=\"hljs-string\">&#x27;看不到我~&#x27;</span>;<br>         <span class=\"hljs-built_in\">clearTimeout</span>(titleTime);<br>     &#125;<br>     <span class=\"hljs-keyword\">else</span> &#123;<br>         $(<span class=\"hljs-string\">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;href&#x27;</span>, <span class=\"hljs-string\">&quot;/img/1.png&quot;</span>);<br>         <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = <span class=\"hljs-string\">&#x27;欢迎回来~&#x27;</span> + <span class=\"hljs-title class_\">OriginTitle</span>;<br>         titleTime = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>             <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = <span class=\"hljs-title class_\">OriginTitle</span>;<br>         &#125;, <span class=\"hljs-number\">2000</span>);<br>     &#125;<br> &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>在<code>\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs</code>中添加如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--浏览器搞笑标题--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;\\js\\FunnyTitle.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"背景添加动态线条效果\"><a href=\"#背景添加动态线条效果\" class=\"headerlink\" title=\"背景添加动态线条效果\"></a>背景添加动态线条效果</h3><p>在<code>\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs</code>中添加如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--动态线条背景--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;220,220,220&quot;</span> <span class=\"hljs-attr\">opacity</span>=<span class=\"hljs-string\">&#x27;0.7&#x27;</span> <span class=\"hljs-attr\">zIndex</span>=<span class=\"hljs-string\">&quot;-2&quot;</span> <span class=\"hljs-attr\">count</span>=<span class=\"hljs-string\">&quot;200&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n\n<p>大概就这些，emmm，总感觉自己的blog并不是用来写博客的，而是用来折腾的。</p>\n<img src=\"/2023/02/24/Hexo-Fluid%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%AD%94%E6%94%B9%E7%BA%AA%E5%BD%95/4.png\" class=\"\">\n","wordcount":11477,"excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>去年腾讯云服务器过期了，想着采用Hexo + GitHub Pages搭建一个新的博客，主题使用<a href=\"https://github.com/fluid-dev/hexo-theme-fluid\">Fluid</a>。</p>\n<p><del>今年~~~~感觉以前搭建的未免有点过于花哨~~~~又想折腾了，于是使用<a href=\"https://github.com/probberechts/hexo-theme-cactus\">Cactus</a>重新搭建了一遍。</del></p>\n<p>今年又改回来了\\(￣︶￣*))</p>\n<p>这里记录一下自己去年使用Fluid搭建与魔改（照搬他人）blog的步骤，日后查找起来也方便。</p>\n<h2 id=\"搭建blog\"><a href=\"#搭建blog\" class=\"headerlink\" title=\"搭建blog\"></a>搭建blog</h2><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><p>(1)需要有一个GitHub账号，没有可以去<a href=\"https://github.com/\">官网</a>注册一个</p>\n<p>(2)电脑安装<code>Git</code>，安装及使用教程参考<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\">Git教程</a></p>\n<p>(3)由于<code>Hexo</code>是基于<code>Node.js</code>编写的，故电脑还需要安装<code>Node.js</code>，可以去<a href=\"https://nodejs.org/en/download/\">官网</a>进行下载</p>\n<h3 id=\"创建代码仓库\"><a href=\"#创建代码仓库\" class=\"headerlink\" title=\"创建代码仓库\"></a>创建代码仓库</h3><p>进入<a href=\"https://github.com/\"><code>GitHub</code>官网</a>,创建一个新的代码仓库，仓库名格式必须为<code>&lt;用户名&gt;.github.io</code>。</p>\n<h3 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h3><p><strong>安装 <code>Hexo</code></strong></p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\">npm install -g hexo-<span class=\"hljs-keyword\">cli</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>创建一个项目 <code>hexo-blog</code> 并初始化</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs mipsasm\">hexo init hexo-<span class=\"hljs-keyword\">blog</span><br><span class=\"hljs-keyword\"></span>cd hexo-<span class=\"hljs-keyword\">blog</span><br><span class=\"hljs-keyword\"></span>npm <span class=\"hljs-keyword\">install</span><br></code></pre></td></tr></table></figure>\n\n<p><strong>本地启动</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo <span class=\"hljs-selector-tag\">g</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>此时我们打开浏览器访问<code>http://localhost:4000</code>即可进入默认风格网站</p>\n<h3 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h3><p>我们可以通过<a href=\"https://hexo.io/themes/\">Hexo官网</a>获取自己喜欢的主题，这里以我使用的<code>Fluid</code>为例</p>\n<p><strong>安装主题</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\"><span class=\"hljs-built_in\">cd</span> hexo-blog<br>git <span class=\"hljs-built_in\">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/Fluid<br></code></pre></td></tr></table></figure>\n\n<p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，对主题进行配置</p>\n<figure class=\"highlight avrasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs avrasm\"><span class=\"hljs-symbol\">theme:</span> fluid<br><span class=\"hljs-symbol\">language:</span> <span class=\"hljs-built_in\">zh</span>-CN<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"创建「关于页」\"><a href=\"#创建「关于页」\" class=\"headerlink\" title=\"创建「关于页」\"></a>创建「关于页」</h3><p>首次使用主题的「关于页」需要手动创建：</p>\n<figure class=\"highlight actionscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs actionscript\">hexo <span class=\"hljs-keyword\">new</span> page about<br></code></pre></td></tr></table></figure>\n\n<p>创建成功后，编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p>\n<p>修改后的文件格式：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-meta\">---</span><br><span class=\"hljs-attr\">title:</span> <span class=\"hljs-string\">about</span><br><span class=\"hljs-attr\">date:</span> <br><span class=\"hljs-attr\">layout:</span> <span class=\"hljs-string\">about</span><br><span class=\"hljs-meta\">---</span><br><span class=\"hljs-string\">正文</span><br></code></pre></td></tr></table></figure>\n\n<p>此时我们输入指令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo clean<br>hexo <span class=\"hljs-selector-tag\">g</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>此时再去访问<code>http://localhost:4000</code>,我们的<code>Fluid</code>主题blog就搭建好了</p>\n<h3 id=\"创建文章\"><a href=\"#创建文章\" class=\"headerlink\" title=\"创建文章\"></a>创建文章</h3><p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，对文章进行配置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">post_asset_folder:</span> <span class=\"hljs-literal\">true</span><br></code></pre></td></tr></table></figure>\n\n<p>执行如下命令创建一篇新文章</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">hexo n <span class=\"hljs-built_in\">test</span><br></code></pre></td></tr></table></figure>\n\n<p>执行完成后打开<code>source\\_posts</code>目录可以看到生成的<code>test.md</code>和<code>test文件夹</code>打开<code>test.md</code>即可对文章进行编辑</p>\n<p>图片的插入可以参考<a href=\"https://hexo.io/zh-cn/docs/asset-folders.html\">官方文档</a>，也可以使用图床，支持Markdown, HTML</p>\n<h3 id=\"Fluid配置\"><a href=\"#Fluid配置\" class=\"headerlink\" title=\"Fluid配置\"></a>Fluid配置</h3><p>参考<a href=\"https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97\">Hexo Fluid官方文档</a></p>\n<h2 id=\"上传至GitHub-Pages\"><a href=\"#上传至GitHub-Pages\" class=\"headerlink\" title=\"上传至GitHub Pages\"></a>上传至GitHub Pages</h2><p><strong>安装<code>hexo-deployer-git</code></strong></p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">npm install hexo-deployer-git <span class=\"hljs-comment\">--save</span><br></code></pre></td></tr></table></figure>\n\n<p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，进行配置</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">deploy:</span><br><span class=\"hljs-symbol\">  type:</span> git<br><span class=\"hljs-symbol\">  repo:</span> 你的GitHub仓库地址<br><span class=\"hljs-symbol\">  branch:</span> main<br><span class=\"hljs-symbol\">  token:</span> 你的Personal access tokens<br><br></code></pre></td></tr></table></figure>\n\n<p>输入指令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo <span class=\"hljs-selector-tag\">g</span><br>hexo d<br></code></pre></td></tr></table></figure>\n\n<p>此时blog完成上传GitHub Pages，浏览器访问 https:&#x2F;&#x2F;&lt;用户名&gt;.github.io，部署成功</p>\n<h2 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h2><h3 id=\"购买域名\"><a href=\"#购买域名\" class=\"headerlink\" title=\"购买域名\"></a>购买域名</h3><p>寻找合适的域名交易平台购买域名</p>\n<h3 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h3><p>我是在<code>Namesilo</code>购买的域名，所以在这里以<code>Namesilo</code>为例</p>\n<p>登陆后找到<code>Active Domains</code>，点击<code>Manage</code>,找到自己购买的域名，在<code>Options</code>中点击<code>Manage DNS for this domain</code> ，将原有的记录全部删除，添加两个新记录</p>\n<img src=\"/2023/02/24/Hexo-Fluid%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%AD%94%E6%94%B9%E7%BA%AA%E5%BD%95/2.png\" class=\"\">\n\n<p>（这里的记录值填自己blog的ip地址，不清楚可以去ping一下）</p>\n<p>在博客目录 <code>/source</code>下创建一个名为<code>CNAME</code>的文件，在文件内写入你的域名（不要加<code>https://</code>和<code>www.</code>）</p>\n<p>输入指令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo <span class=\"hljs-selector-tag\">g</span><br>hexo d<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"Github解析\"><a href=\"#Github解析\" class=\"headerlink\" title=\"Github解析\"></a>Github解析</h3><p>在Github的xxx.github.io项目,进入<code>Settings</code>,在<code>Pages</code>下的<code>Custom domain</code>功能中,将刚刚申请的域名写进去。</p>\n<img src=\"/2023/02/24/Hexo-Fluid%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%AD%94%E6%94%B9%E7%BA%AA%E5%BD%95/1.png\" class=\"\">\n\n<p>设置好后，等待一段时间后，就可以通过域名访问blog了</p>\n<h2 id=\"Fluid魔改\"><a href=\"#Fluid魔改\" class=\"headerlink\" title=\"Fluid魔改\"></a>Fluid魔改</h2><h3 id=\"字体样式修改\"><a href=\"#字体样式修改\" class=\"headerlink\" title=\"字体样式修改\"></a>字体样式修改</h3><p>修改字体样式直接引入css文件和字体包即可。</p>\n<p>首先寻找自己喜欢的字体，这里推荐几个网站：<a href=\"http://www.diyiziti.com/\">第一字体网</a>，<a href=\"https://www.fonts.net.cn/\">字体天下</a>，<a href=\"https://www.zitijia.com/\">字体家</a></p>\n<p>将需要使用的字体文件放入博客目录<code>themes\\fluid\\source\\css</code>下</p>\n<p>如有有css文件，就在最下面继续写；如果没有，则新建一个css文件，文件名任取</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-keyword\">@font-face</span>&#123;<br>  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&#x27;ziti&#x27;</span> ;  <span class=\"hljs-comment\">/* 自定义字体名称 */</span><br>  <span class=\"hljs-attribute\">src</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&#x27;ziti.ttf&#x27;</span>); <span class=\"hljs-comment\">/* 引入字体文件的路径 */</span><br>&#125;<br><span class=\"hljs-comment\">/*应用在body体里，放在第一个，font-family会按顺序使用字体族。如果第一个没找到就会找第二个，以此类推。*/</span><br><span class=\"hljs-selector-tag\">body</span> &#123;<br><span class=\"hljs-attribute\">font-family</span>: ziti,-apple-system, BlinkMacSystemFont, <span class=\"hljs-string\">&quot;Segoe UI&quot;</span>, <span class=\"hljs-string\">&quot;Helvetica Neue&quot;</span>, Lato, Roboto, <span class=\"hljs-string\">&quot;PingFang SC&quot;</span>, <span class=\"hljs-string\">&quot;STZhongsong&quot;</span>, <span class=\"hljs-string\">&quot;Lantinghei SC&quot;</span>, sans-serif<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"鼠标样式修改\"><a href=\"#鼠标样式修改\" class=\"headerlink\" title=\"鼠标样式修改\"></a>鼠标样式修改</h3><p>在css文件添加下方代码，然后引入即可。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-comment\">/*指针样式*/</span><br><span class=\"hljs-selector-tag\">body</span> &#123;<br>    <span class=\"hljs-attribute\">cursor</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur</span>),<br>        default;<br>&#125;<br><span class=\"hljs-comment\">/*链接小手样式*/</span><br><span class=\"hljs-selector-tag\">a</span>,<br><span class=\"hljs-selector-tag\">img</span> &#123;<br>    <span class=\"hljs-attribute\">cursor</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur</span>),<br>        default;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"网站运行时间\"><a href=\"#网站运行时间\" class=\"headerlink\" title=\"网站运行时间\"></a>网站运行时间</h3><p>打开<code>\\themes\\fluid</code>下的<code>_config.yml</code>，在主题配置中的 <code>footer: content</code> 添加：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\">footer:<br>  content: &#x27;<br>\t\t <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://hexo.io&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;nofollow noopener&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>Hexo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;iconfont icon-love&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot;</span> <span class=\"hljs-attr\">target</span>=<span class=\"hljs-string\">&quot;_blank&quot;</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;nofollow noopener&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span>Fluid<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;font-size: 0.85rem&quot;</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span><br>      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/js/duration.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br>    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>  &#x27;<br></code></pre></td></tr></table></figure>\n\n<p>在<code>\\themes\\fluid\\source\\js</code>目录下创建 <code>duration.js</code>,内容如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">!(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>    <span class=\"hljs-comment\">/** 计时起始时间，自行修改 **/</span><br>    <span class=\"hljs-keyword\">var</span> start = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>(<span class=\"hljs-string\">&quot;2022/10/15 00:00:00&quot;</span>);<br>  <br>    <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">update</span>(<span class=\"hljs-params\"></span>) &#123;<br>      <span class=\"hljs-keyword\">var</span> now = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>();<br>      now.<span class=\"hljs-title function_\">setTime</span>(now.<span class=\"hljs-title function_\">getTime</span>()+<span class=\"hljs-number\">250</span>);<br>      days = (now - start) / <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span> / <span class=\"hljs-number\">60</span> / <span class=\"hljs-number\">24</span>;<br>      dnum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(days);<br>      hours = (now - start) / <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span> / <span class=\"hljs-number\">60</span> - (<span class=\"hljs-number\">24</span> * dnum);<br>      hnum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(hours);<br>      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title class_\">String</span>(hnum).<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">1</span> )&#123;<br>        hnum = <span class=\"hljs-string\">&quot;0&quot;</span> + hnum;<br>      &#125;<br>      minutes = (now - start) / <span class=\"hljs-number\">1000</span> /<span class=\"hljs-number\">60</span> - (<span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * dnum) - (<span class=\"hljs-number\">60</span> * hnum);<br>      mnum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(minutes);<br>      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title class_\">String</span>(mnum).<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">1</span> )&#123;<br>        mnum = <span class=\"hljs-string\">&quot;0&quot;</span> + mnum;<br>      &#125;<br>      seconds = (now - start) / <span class=\"hljs-number\">1000</span> - (<span class=\"hljs-number\">24</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * dnum) - (<span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * hnum) - (<span class=\"hljs-number\">60</span> * mnum);<br>      snum = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">round</span>(seconds);<br>      <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-title class_\">String</span>(snum).<span class=\"hljs-property\">length</span> === <span class=\"hljs-number\">1</span> )&#123;<br>        snum = <span class=\"hljs-string\">&quot;0&quot;</span> + snum;<br>      &#125;<br>      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;timeDate&quot;</span>).<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;本站居然运行了&amp;nbsp&quot;</span>+dnum+<span class=\"hljs-string\">&quot;&amp;nbsp天&quot;</span>;<br>      <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;times&quot;</span>).<span class=\"hljs-property\">innerHTML</span> = hnum + <span class=\"hljs-string\">&quot;&amp;nbsp小时&amp;nbsp&quot;</span> + mnum + <span class=\"hljs-string\">&quot;&amp;nbsp分&amp;nbsp&quot;</span> + snum + <span class=\"hljs-string\">&quot;&amp;nbsp秒&quot;</span>;<br>    &#125;<br>  <br>    <span class=\"hljs-title function_\">update</span>();<br>    <span class=\"hljs-built_in\">setInterval</span>(update, <span class=\"hljs-number\">1000</span>);<br>  &#125;)();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"添加自定义css和js文件\"><a href=\"#添加自定义css和js文件\" class=\"headerlink\" title=\"添加自定义css和js文件\"></a>添加自定义css和js文件</h3><p>打开<code>\\themes\\fluid</code>下的<code>_config.yml</code>，在以下位置进行修改：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">custom_js:</span> <br>          - <span class=\"hljs-keyword\">/js/</span>duration.js<br><span class=\"hljs-symbol\">custom_css:</span> <br>            - <span class=\"hljs-keyword\">/css/</span>custom.css<br></code></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"看板娘\"><a href=\"#看板娘\" class=\"headerlink\" title=\"看板娘\"></a>看板娘</h3><p><strong>安装Live2D</strong></p>\n<p>在hexo-blog目录下右键打开<code>Git Bash Here</code>安装Live2D: <code>npm uninstall hexo-helper-live2d</code></p>\n<p><strong>选择模型</strong></p>\n<p>原生模型：</p>\n<ul>\n<li>Epsilon2.1</li>\n<li>Gantzert_Felixander</li>\n<li>haru</li>\n<li>miku</li>\n<li>ni-j</li>\n<li>nico</li>\n<li>nietzche</li>\n<li>nipsilon</li>\n<li>nito</li>\n<li>shizuku</li>\n<li>tsumiki</li>\n<li>wanko</li>\n<li>z16</li>\n<li>hibiki</li>\n<li>koharu</li>\n<li>haruto</li>\n<li>Unitychan</li>\n<li>tororo</li>\n<li>hijiki</li>\n</ul>\n<p><strong>安装模型：</strong></p>\n<p>在hexo文件夹根下右键打开<code>Git Bash Here</code>键入<code>npm install --save live2d-widget-模型名</code>即可。</p>\n<p><strong>配置</strong></p>\n<p>打开<code>hexo-blog</code>目录下的<code>_config.yml </code>文件，在末尾增加：</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs dts\"><span class=\"hljs-symbol\">live2d:</span><br><span class=\"hljs-symbol\">  model:</span><br><span class=\"hljs-symbol\">    scale:</span> <span class=\"hljs-number\">1</span><br><span class=\"hljs-symbol\">    hHeadPos:</span> <span class=\"hljs-number\">0.5</span><br><span class=\"hljs-symbol\">    vHeadPos:</span> <span class=\"hljs-number\">0.618</span><br><span class=\"hljs-symbol\">    use:</span> live2d-widget-model-tororo <span class=\"hljs-comment\">// 下载的动画模型名称</span><br><span class=\"hljs-symbol\">  display:</span><br><span class=\"hljs-symbol\">    superSample:</span> <span class=\"hljs-number\">2</span><br><span class=\"hljs-symbol\">    width:</span> <span class=\"hljs-number\">120</span><br><span class=\"hljs-symbol\">    height:</span> <span class=\"hljs-number\">200</span><br><span class=\"hljs-symbol\">    position:</span> left <span class=\"hljs-comment\">// 模型在网页显示位置,left为左,right为右</span><br><span class=\"hljs-symbol\">    hOffset:</span> <span class=\"hljs-number\">20</span><br><span class=\"hljs-symbol\">    vOffset:</span> <span class=\"hljs-number\">50</span><br><span class=\"hljs-symbol\">  mobile:</span><br><span class=\"hljs-symbol\">    show:</span> true  <span class=\"hljs-comment\">// 移动设备是否显示,true则显示,false则不显示</span><br><span class=\"hljs-symbol\">    scale:</span> <span class=\"hljs-number\">0.5</span><br><span class=\"hljs-symbol\">  react:</span><br><span class=\"hljs-symbol\">    opacityDefault:</span> <span class=\"hljs-number\">0.7</span><br><span class=\"hljs-symbol\">    opacityOnHover:</span> <span class=\"hljs-number\">0.2</span><br></code></pre></td></tr></table></figure>\n\n<p>接着输入命令</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\">hexo clean<br>hexo <span class=\"hljs-selector-tag\">g</span><br>hexo s<br></code></pre></td></tr></table></figure>\n\n<p>我们就可以看到可爱的看板娘出现在了我们的blog里了</p>\n<h3 id=\"一言\"><a href=\"#一言\" class=\"headerlink\" title=\"一言\"></a>一言</h3><p>打开<code>\\themes\\fluid</code>下的<code>_config.yml</code>，在以下位置进行修改：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">slogan:</span><br>    <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br>    <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">&quot;&quot;</span><br>    <span class=\"hljs-attr\">api:</span><br>      <span class=\"hljs-attr\">enable:</span> <span class=\"hljs-literal\">true</span><br>      <span class=\"hljs-attr\">url:</span> <span class=\"hljs-string\">&quot;https://v1.hitokoto.cn/&quot;</span><br>      <span class=\"hljs-attr\">method:</span> <span class=\"hljs-string\">&quot;GET&quot;</span><br>      <span class=\"hljs-attr\">headers:</span> &#123;&#125;<br>      <span class=\"hljs-attr\">keys:</span> [<span class=\"hljs-string\">&#x27;hitokoto&#x27;</span>]<br><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"雪花特效\"><a href=\"#雪花特效\" class=\"headerlink\" title=\"雪花特效\"></a>雪花特效</h3><p>在<code>\\themes\\fluid\\source\\js</code>目录下<code>duration.js</code>中添加:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-comment\">/* 控制下雪 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">snowFall</span>(<span class=\"hljs-params\">snow</span>) &#123;<br>  <span class=\"hljs-comment\">/* 可配置属性 */</span><br>  snow = snow || &#123;&#125;;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxFlake</span> = snow.<span class=\"hljs-property\">maxFlake</span> || <span class=\"hljs-number\">200</span>;   <span class=\"hljs-comment\">/* 最多片数 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakeSize</span> = snow.<span class=\"hljs-property\">flakeSize</span> || <span class=\"hljs-number\">10</span>;  <span class=\"hljs-comment\">/* 雪花形状 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span> = snow.<span class=\"hljs-property\">fallSpeed</span> || <span class=\"hljs-number\">1</span>;   <span class=\"hljs-comment\">/* 坠落速度 */</span><br>&#125;<br><span class=\"hljs-comment\">/* 兼容写法 */</span><br>requestAnimationFrame = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">requestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">mozRequestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">webkitRequestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">msRequestAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">oRequestAnimationFrame</span> ||<br>  <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">callback</span>) &#123; <span class=\"hljs-built_in\">setTimeout</span>(callback, <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span>); &#125;;<br><br>cancelAnimationFrame = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">cancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">mozCancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">webkitCancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">msCancelAnimationFrame</span> ||<br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">oCancelAnimationFrame</span>;<br><span class=\"hljs-comment\">/* 开始下雪 */</span><br>snowFall.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">start</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)&#123;<br>  <span class=\"hljs-comment\">/* 创建画布 */</span><br>  snowCanvas.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>);<br>  <span class=\"hljs-comment\">/* 创建雪花形状 */</span><br>  createFlakes.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>);<br>  <span class=\"hljs-comment\">/* 画雪 */</span><br>  drawSnow.<span class=\"hljs-title function_\">apply</span>(<span class=\"hljs-variable language_\">this</span>)<br>&#125;<br><span class=\"hljs-comment\">/* 创建画布 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">snowCanvas</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-comment\">/* 添加Dom结点 */</span><br>  <span class=\"hljs-keyword\">var</span> snowcanvas = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;canvas&quot;</span>);<br>  snowcanvas.<span class=\"hljs-property\">id</span> = <span class=\"hljs-string\">&quot;snowfall&quot;</span>;<br>  snowcanvas.<span class=\"hljs-property\">width</span> = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>;<br>  snowcanvas.<span class=\"hljs-property\">height</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-property\">clientHeight</span>;<br>  snowcanvas.<span class=\"hljs-title function_\">setAttribute</span>(<span class=\"hljs-string\">&quot;style&quot;</span>, <span class=\"hljs-string\">&quot;position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;&quot;</span>);<br>  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByTagName</span>(<span class=\"hljs-string\">&quot;body&quot;</span>)[<span class=\"hljs-number\">0</span>].<span class=\"hljs-title function_\">appendChild</span>(snowcanvas);<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">canvas</span> = snowcanvas;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ctx</span> = snowcanvas.<span class=\"hljs-title function_\">getContext</span>(<span class=\"hljs-string\">&quot;2d&quot;</span>);<br>  <span class=\"hljs-comment\">/* 窗口大小改变的处理 */</span><br>  <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">onresize</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>      snowcanvas.<span class=\"hljs-property\">width</span> = <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">innerWidth</span>;<br>      <span class=\"hljs-comment\">/* snowcanvas.height = window.innerHeight */</span><br>  &#125;<br>&#125;<br><span class=\"hljs-comment\">/* 雪运动对象 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">flakeMove</span>(<span class=\"hljs-params\">canvasWidth, canvasHeight, flakeSize, fallSpeed</span>) &#123;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * canvasWidth);   <span class=\"hljs-comment\">/* x坐标 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * canvasHeight);  <span class=\"hljs-comment\">/* y坐标 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * flakeSize + <span class=\"hljs-number\">2</span>;          <span class=\"hljs-comment\">/* 形状 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxSize</span> = flakeSize;                           <span class=\"hljs-comment\">/* 最大形状 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * <span class=\"hljs-number\">1</span> + fallSpeed;         <span class=\"hljs-comment\">/* 坠落速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span> = fallSpeed;                         <span class=\"hljs-comment\">/* 坠落速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span>;                             <span class=\"hljs-comment\">/* Y方向速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> = <span class=\"hljs-number\">0</span>;                                      <span class=\"hljs-comment\">/* X方向速度 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">stepSize</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() / <span class=\"hljs-number\">30</span>;                 <span class=\"hljs-comment\">/* 步长 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">step</span> = <span class=\"hljs-number\">0</span>                                       <span class=\"hljs-comment\">/* 步数 */</span><br>&#125;<br>flakeMove.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">update</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> x = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>,<br>      y = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>;<br>  <span class=\"hljs-comment\">/* 左右摆动(余弦) */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> *= <span class=\"hljs-number\">0.98</span>;<br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> &lt;= <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span>) &#123;<br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span><br>  &#125;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> += <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">cos</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">step</span> += <span class=\"hljs-number\">.05</span>) * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">stepSize</span>;<br><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> += <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> += <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span>;<br>  <span class=\"hljs-comment\">/* 飞出边界的处理 */</span><br>  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> &gt;= canvas.<span class=\"hljs-property\">width</span> || <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> &lt;= <span class=\"hljs-number\">0</span> || <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> &gt;= canvas.<span class=\"hljs-property\">height</span> || <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> &lt;= <span class=\"hljs-number\">0</span>) &#123;<br>      <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">reset</span>(canvas.<span class=\"hljs-property\">width</span>, canvas.<span class=\"hljs-property\">height</span>)<br>  &#125;<br>&#125;;<br><span class=\"hljs-comment\">/* 飞出边界-放置最顶端继续坠落 */</span><br>flakeMove.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">reset</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">width, height</span>) &#123;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">floor</span>(<span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * width);<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span> = <span class=\"hljs-number\">0</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxSize</span> + <span class=\"hljs-number\">2</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span> = <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-title function_\">random</span>() * <span class=\"hljs-number\">1</span> + <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velY</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">speed</span>;<br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">velX</span> = <span class=\"hljs-number\">0</span>;<br>&#125;;<br><span class=\"hljs-comment\">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span><br>flakeMove.<span class=\"hljs-property\"><span class=\"hljs-keyword\">prototype</span></span>.<span class=\"hljs-property\">render</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ctx</span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> snowFlake = ctx.<span class=\"hljs-title function_\">createRadialGradient</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>);<br>  snowFlake.<span class=\"hljs-title function_\">addColorStop</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">&quot;rgba(255, 255, 255, 0.9)&quot;</span>);  <span class=\"hljs-comment\">/* 此处是雪花颜色，默认是白色 */</span><br>  snowFlake.<span class=\"hljs-title function_\">addColorStop</span>(<span class=\"hljs-number\">.5</span>, <span class=\"hljs-string\">&quot;rgba(255, 255, 255, 0.5)&quot;</span>); <span class=\"hljs-comment\">/* 若要改为其他颜色，请自行查 */</span><br>  snowFlake.<span class=\"hljs-title function_\">addColorStop</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&quot;rgba(255, 255, 255, 0)&quot;</span>);    <span class=\"hljs-comment\">/* 找16进制的RGB 颜色代码。 */</span><br>  ctx.<span class=\"hljs-title function_\">save</span>();<br>  ctx.<span class=\"hljs-property\">fillStyle</span> = snowFlake;<br>  ctx.<span class=\"hljs-title function_\">beginPath</span>();<br>  ctx.<span class=\"hljs-title function_\">arc</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">x</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">y</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">size</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-title class_\">Math</span>.<span class=\"hljs-property\">PI</span> * <span class=\"hljs-number\">2</span>);<br>  ctx.<span class=\"hljs-title function_\">fill</span>();<br>  ctx.<span class=\"hljs-title function_\">restore</span>();<br>&#125;;<br><span class=\"hljs-comment\">/* 创建雪花-定义形状 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">createFlakes</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> maxFlake = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxFlake</span>,<br>      flakes = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakes</span> = [],<br>      canvas = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">canvas</span>;<br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; maxFlake; i++) &#123;<br>      flakes.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">flakeMove</span>(canvas.<span class=\"hljs-property\">width</span>, canvas.<span class=\"hljs-property\">height</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakeSize</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fallSpeed</span>))<br>  &#125;<br>&#125;<br><span class=\"hljs-comment\">/* 画雪 */</span><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">drawSnow</span>(<span class=\"hljs-params\"></span>) &#123;<br>  <span class=\"hljs-keyword\">var</span> maxFlake = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">maxFlake</span>,<br>      flakes = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">flakes</span>;<br>  ctx = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">ctx</span>, canvas = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">canvas</span>, that = <span class=\"hljs-variable language_\">this</span>;<br>  <span class=\"hljs-comment\">/* 清空雪花 */</span><br>  ctx.<span class=\"hljs-title function_\">clearRect</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, canvas.<span class=\"hljs-property\">width</span>, canvas.<span class=\"hljs-property\">height</span>);<br>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>; e &lt; maxFlake; e++) &#123;<br>      flakes[e].<span class=\"hljs-title function_\">update</span>();<br>      flakes[e].<span class=\"hljs-title function_\">render</span>(ctx);<br>  &#125;<br>  <span class=\"hljs-comment\">/*  一帧一帧的画 */</span><br>  <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">loop</span> = <span class=\"hljs-title function_\">requestAnimationFrame</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>      drawSnow.<span class=\"hljs-title function_\">apply</span>(that);<br>  &#125;);<br>&#125;<br><span class=\"hljs-comment\">/* 调用及控制方法 */</span><br><span class=\"hljs-keyword\">var</span> snow = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title function_\">snowFall</span>(&#123;<span class=\"hljs-attr\">maxFlake</span>:<span class=\"hljs-number\">60</span>&#125;);<br>snow.<span class=\"hljs-title function_\">start</span>();<br></code></pre></td></tr></table></figure>\n\n<h3 id=\"鼠标点击显示字体效果\"><a href=\"#鼠标点击显示字体效果\" class=\"headerlink\" title=\"鼠标点击显示字体效果\"></a>鼠标点击显示字体效果</h3><p>在<code>\\themes\\fluid\\source\\js</code>目录下<code>duration.js</code>中添加:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\"><span class=\"hljs-keyword\">var</span> a_idx = <span class=\"hljs-number\">0</span>;<br><span class=\"hljs-title function_\">jQuery</span>(<span class=\"hljs-variable language_\">document</span>).<span class=\"hljs-title function_\">ready</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$</span>) &#123;<br>    $(<span class=\"hljs-string\">&quot;body&quot;</span>).<span class=\"hljs-title function_\">click</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) &#123;<br>        <span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Array</span><br>        (<span class=\"hljs-string\">&quot;TuT&quot;</span>, <span class=\"hljs-string\">&quot;(　ﾟ∀ﾟ) ﾉ♡&quot;</span>, <span class=\"hljs-string\">&quot;ヽ(`Д´)ノ&quot;</span>, <span class=\"hljs-string\">&quot;(☍﹏⁰)&quot;</span>, <span class=\"hljs-string\">&quot;( ´•̥×•̥` )&quot;</span>, <span class=\"hljs-string\">&quot;ΩДΩ&quot;</span>, <span class=\"hljs-string\">&quot;(・ω・)&quot;</span>, <span class=\"hljs-string\">&quot;ヾ(´︶`*)ﾉ♬&quot;</span>, <span class=\"hljs-string\">&quot;(❀╹◡╹)&quot;</span>);<br>        <span class=\"hljs-keyword\">var</span> $i = $(<span class=\"hljs-string\">&quot;&lt;span/&gt;&quot;</span>).<span class=\"hljs-title function_\">text</span>(a[a_idx]);<br>        a_idx = (a_idx + <span class=\"hljs-number\">1</span>) % a.<span class=\"hljs-property\">length</span>;<br>        <span class=\"hljs-keyword\">var</span> x = e.<span class=\"hljs-property\">pageX</span>,<br>        y = e.<span class=\"hljs-property\">pageY</span>;<br>        $i.<span class=\"hljs-title function_\">css</span>(&#123;<br>            <span class=\"hljs-string\">&quot;z-index&quot;</span>: <span class=\"hljs-number\">5</span>,<br>            <span class=\"hljs-string\">&quot;top&quot;</span>: y - <span class=\"hljs-number\">20</span>,<br>            <span class=\"hljs-string\">&quot;left&quot;</span>: x,<br>            <span class=\"hljs-string\">&quot;position&quot;</span>: <span class=\"hljs-string\">&quot;absolute&quot;</span>,<br>            <span class=\"hljs-string\">&quot;font-weight&quot;</span>: <span class=\"hljs-string\">&quot;bold&quot;</span>,<br>            <span class=\"hljs-string\">&quot;color&quot;</span>: <span class=\"hljs-string\">&quot;#FF0000&quot;</span><br>        &#125;);<br>        $(<span class=\"hljs-string\">&quot;body&quot;</span>).<span class=\"hljs-title function_\">append</span>($i);<br>        $i.<span class=\"hljs-title function_\">animate</span>(&#123;<br>            <span class=\"hljs-string\">&quot;top&quot;</span>: y - <span class=\"hljs-number\">180</span>,<br>            <span class=\"hljs-string\">&quot;opacity&quot;</span>: <span class=\"hljs-number\">0</span><br>        &#125;,<br>            <span class=\"hljs-number\">3000</span>,<br>            <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;<br>                $i.<span class=\"hljs-title function_\">remove</span>();<br>            &#125;);<br>    &#125;);<br>    <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-string\">&#x27;delay()&#x27;</span>, <span class=\"hljs-number\">2000</span>);<br>&#125;);<br><br><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">delay</span>(<span class=\"hljs-params\"></span>) &#123;<br>    $(<span class=\"hljs-string\">&quot;.buryit&quot;</span>).<span class=\"hljs-title function_\">removeAttr</span>(<span class=\"hljs-string\">&quot;onclick&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>在 <code>\\themes\\hexo-theme-spfk\\layout\\layout.ejs</code> 末尾添加以下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--单击显示文字--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/js/click_show_text.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"网页标题恶搞\"><a href=\"#网页标题恶搞\" class=\"headerlink\" title=\"网页标题恶搞\"></a>网页标题恶搞</h3><p>在<code>\\themes\\fluid\\source\\js</code>目录下<code>duration.js</code>中添加:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs javascript\">&lt;!--浏览器搞笑标题--&gt;<br> <span class=\"hljs-keyword\">var</span> <span class=\"hljs-title class_\">OriginTitle</span> = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span>;<br> <span class=\"hljs-keyword\">var</span> titleTime;<br> <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;visibilitychange&#x27;</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>     <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">hidden</span>) &#123;<br>         $(<span class=\"hljs-string\">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;href&#x27;</span>, <span class=\"hljs-string\">&quot;/img/fluid.png&quot;</span>);<br>         <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = <span class=\"hljs-string\">&#x27;看不到我~&#x27;</span>;<br>         <span class=\"hljs-built_in\">clearTimeout</span>(titleTime);<br>     &#125;<br>     <span class=\"hljs-keyword\">else</span> &#123;<br>         $(<span class=\"hljs-string\">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class=\"hljs-title function_\">attr</span>(<span class=\"hljs-string\">&#x27;href&#x27;</span>, <span class=\"hljs-string\">&quot;/img/1.png&quot;</span>);<br>         <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = <span class=\"hljs-string\">&#x27;欢迎回来~&#x27;</span> + <span class=\"hljs-title class_\">OriginTitle</span>;<br>         titleTime = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) &#123;<br>             <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">title</span> = <span class=\"hljs-title class_\">OriginTitle</span>;<br>         &#125;, <span class=\"hljs-number\">2000</span>);<br>     &#125;<br> &#125;);<br></code></pre></td></tr></table></figure>\n\n<p>在<code>\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs</code>中添加如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--浏览器搞笑标题--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;\\js\\FunnyTitle.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<h3 id=\"背景添加动态线条效果\"><a href=\"#背景添加动态线条效果\" class=\"headerlink\" title=\"背景添加动态线条效果\"></a>背景添加动态线条效果</h3><p>在<code>\\Hexo\\themes\\hexo-theme-spfk\\layout\\layout.ejs</code>中添加如下代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!--动态线条背景--&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/javascript&quot;</span></span><br><span class=\"hljs-tag\"><span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">&quot;220,220,220&quot;</span> <span class=\"hljs-attr\">opacity</span>=<span class=\"hljs-string\">&#x27;0.7&#x27;</span> <span class=\"hljs-attr\">zIndex</span>=<span class=\"hljs-string\">&quot;-2&quot;</span> <span class=\"hljs-attr\">count</span>=<span class=\"hljs-string\">&quot;200&quot;</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n\n<p>大概就这些，emmm，总感觉自己的blog并不是用来写博客的，而是用来折腾的。</p>\n<img src=\"/2023/02/24/Hexo-Fluid%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%AD%94%E6%94%B9%E7%BA%AA%E5%BD%95/4.png\" class=\"\">\n"}],"PostAsset":[{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录/1.png","post":"cmaj5a7bd0008a8uo5dh0d5jv","slug":"1.png","modified":1,"renderable":0},{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录/2.png","post":"cmaj5a7bd0008a8uo5dh0d5jv","slug":"2.png","modified":1,"renderable":0},{"_id":"source/_posts/Hexo-Fluid搭建与魔改纪录/4.png","post":"cmaj5a7bd0008a8uo5dh0d5jv","slug":"4.png","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cmaj5a7b40001a8uofcjjgj2d","tag_id":"cmaj5a7b70003a8uocrzzczip","_id":"cmaj5a7b80004a8uo1dc2a2p6"},{"post_id":"cmaj5a7bc0005a8uo9zxgbeck","tag_id":"cmaj5a7bd0007a8uodickd99r","_id":"cmaj5a7bd000aa8uo1k7q4j6m"},{"post_id":"cmaj5a7bc0006a8uo25ck9us5","tag_id":"cmaj5a7bd0009a8uohtvwfuvy","_id":"cmaj5a7be000ca8uoee3345f2"},{"post_id":"cmaj5a7bd0008a8uo5dh0d5jv","tag_id":"cmaj5a7bd000ba8uo1zzt4m3v","_id":"cmaj5a7be000fa8uo6la83lz2"},{"post_id":"cmaj5a7bd0008a8uo5dh0d5jv","tag_id":"cmaj5a7be000da8uo0faafto2","_id":"cmaj5a7be000ga8uo6ujr0uba"},{"post_id":"cmaj5a7bd0008a8uo5dh0d5jv","tag_id":"cmaj5a7be000ea8uo4l4eec9a","_id":"cmaj5a7be000ha8uo91igf7u1"}],"Tag":[{"name":"随想","_id":"cmaj5a7b70003a8uocrzzczip"},{"name":"Notebook","_id":"cmaj5a7bd0007a8uodickd99r"},{"name":"crawlers","_id":"cmaj5a7bd0009a8uohtvwfuvy"},{"name":"blog","_id":"cmaj5a7bd000ba8uo1zzt4m3v"},{"name":"hexo","_id":"cmaj5a7be000da8uo0faafto2"},{"name":"fluid","_id":"cmaj5a7be000ea8uo4l4eec9a"}]}}